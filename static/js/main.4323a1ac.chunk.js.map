{"version":3,"sources":["reportWebVitals.js","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/fetcher.js","components/spinner/Spinner.js","components/page/Page.js","components/select/Select.js","components/number-input/NumberInput.js","state/lists.js","pages/new-list/NewList.js","utils/rules.js","utils/points.js","components/list/List.js","pages/editor/Editor.js","pages/home/Home.js","pages/unit/Unit.js","pages/edit/Edit.js","state/items.js","pages/magic/Magic.js","pages/about/About.js","state/army.js","pages/add/Add.js","pages/help/Help.js","App.js","state/errors.js","store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","className","symbol","color","focusable","classNames","xlinkHref","Button","type","to","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","Component","Link","buttonProps","aria-label","title","defaultProps","controller","getRandomId","Math","random","toString","replace","Spinner","Header","headline","subheadline","moreButton","isSection","location","useLocation","useState","showMenu","setShowMenu","useEffect","pathname","map","callback","name_de","moreButtonTo","Main","isDesktop","compact","loading","href","target","rel","Select","options","id","name","required","selected","disabled","value","onChange","event","defaultValue","optionValue","NumberInput","props","preventDefault","Number","listsSlice","createSlice","initialState","reducers","setLists","state","payload","updateList","listId","newValues","points","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","unit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","equipment","command","mounts","magic","data","removeUnit","actions","NewList","isMobile","MainComponent","Fragment","dispatch","useDispatch","lists","useSelector","gameSystems","game","setGame","armies","army","setArmy","setName","setPoints","redirect","setRedirect","handleSystemChange","window","scrollTo","onSubmit","newId","newList","lords","heroes","core","special","rare","newLists","localStorage","setItem","JSON","stringify","createList","enabled","defaultChecked","htmlFor","height","src","alt","autoComplete","min","rules","maxPercent","minPercent","maxSame","maxSameLarge","getMaxPercentData","armyPoints","maxPoints","floor","overLimit","diff","ceil","getUnitPoints","unitPoints","option","active","perModel","items","List","getAllOptions","allMounts","allEquipment","allOptions","allCommand","allMagicItems","allOptionsString","join","Editor","useParams","errors","getPoints","handleDelete","updatedLists","parse","getItem","removeList","updatedList","lordsPoints","heroesPoints","corePoints","specialPoints","rarePoints","allPoints","lordsData","heroesData","coreData","minPoints","getMinPercentData","specialData","rareData","index","includes","Home","length","width","Unit","units","magicPoints","handleRemove","handleDuplicate","handleCommandChange","item","handleEquipmentChange","handleMountsChange","handleOptionsChange","Edit","fetcher","url","onSuccess","onError","AbortController","fetch","signal","response","json","catch","error","itemsSlice","setItems","nameMap","greenskins","general","Magic","allItems","bla","updateIds","magicItem","magicItems","checked","handleMagicChange","About","armySlice","commandData","equipmentData","mountsData","optionsData","Add","handleAdd","Help","App","matchMedia","matches","setIsMobile","localLists","addEventListener","path","errorSlice","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errorsReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4323a1ac.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`/symbol-defs.svg#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n}) => {\n  const Component = to ? Link : \"button\";\n  const buttonProps = {};\n\n  if (!to) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      aria-label={label}\n      title={label}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`/${url}.json`, {\n    // headers: {\n    //   \"Content-Type\": \"application/json\",\n    //   Accept: \"application/json\",\n    // },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import React from \"react\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return <Icon symbol=\"spinner\" className=\"spinner\" />;\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { Button } from \"../../components/button\";\nimport { Spinner } from \"../../components/spinner\";\n\nimport \"./Page.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n}) => {\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={isSection ? \"Schließen\" : \"Zurück\"}\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{moreButton && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && <p className=\"header__points\">{subheadline}</p>}\n      </div>\n      {moreButton ? (\n        <Button\n          type=\"text\"\n          color={isSection ? \"dark\" : \"light\"}\n          label=\"Mehr Optionen\"\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul className=\"header__more\">\n          {moreButton.map(({ callback, name_de, icon, to: moreButtonTo }) => (\n            <li key={name_de}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name_de}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.string,\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n};\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav>\n            <Link to=\"/about\">Über OWB</Link>\n            <Link to=\"/help\">Hilfe</Link>\n            {/* <Link to=\"/news\">Neues</Link> */}\n            <a\n              href=\"https://github.com/nthiebes/old-world-builder/issues\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Fehler melden\n            </a>\n          </nav>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","// import React, { Component, Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceBottom,\n}) => {\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ name_de, id: optionValue }) => (\n        <option key={optionValue} value={optionValue}>\n          {name_de}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\n\nimport { Button } from \"../button\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = (props) => {\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) + 1,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) - 1,\n      },\n    });\n  };\n\n  return (\n    <div className=\"number-input\">\n      <input {...props} type=\"number\" />\n      <Button\n        onClick={handleOnUpClick}\n        type=\"secondary\"\n        icon=\"up\"\n        label=\"Erhöhen\"\n        className=\"number-input__button number-input__button--up\"\n      />\n      <Button\n        onClick={handleOnDownClick}\n        type=\"secondary\"\n        icon=\"down\"\n        label=\"Verringern\"\n        className=\"number-input__button number-input__button--down\"\n      />\n    </div>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points } = payload;\n      const newValues = { name, points };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../data/armies.json\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./NewList.css\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(gameSystems[0].id);\n  const [army, setArmy] = useState(gameSystems[0].armies[0].id);\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [redirect, setRedirect] = useState(null);\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      name: name,\n      game: game,\n      points: points,\n      army: army,\n      lords: [],\n      heroes: [],\n      core: [],\n      special: [],\n      rare: [],\n      id: newId,\n    };\n    const newLists = [...lists, newList];\n\n    localStorage.setItem(\"lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && <Header to=\"/\" headline=\"Neue Liste\" />}\n\n      <MainComponent>\n        {!isMobile && <Header isSection to=\"/\" headline=\"Neue Liste\" />}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id, enabled }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                defaultChecked={id === \"warhammer-fantasy\"}\n                className=\"radio__input\"\n                disabled={!enabled}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={`/${id}.png`} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <img height=\"35\" src={`/${id}.png`} alt={name} />\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor=\"points\">Punkte:</label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <label htmlFor=\"army\">Armee:</label>\n          <Select\n            id=\"army\"\n            options={gameSystems.filter(({ id }) => id === game)[0].armies}\n            onChange={handleArmyChange}\n            selected=\"warhammer-fantasy\"\n            spaceBottom\n            required\n          />\n          <Button centered icon=\"add-list\" submitButton>\n            {\"Liste anlegen\"}\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  lords: { maxPercent: 25 },\n  heroes: { maxPercent: 25 },\n  core: { minPercent: 25 },\n  special: {\n    maxPercent: 50,\n    maxSame: 3,\n    maxSameLarge: 6,\n  },\n  rare: {\n    maxPercent: 25,\n    maxSame: 2,\n    maxSameLarge: 4,\n  },\n};\n\nexport const getMaxPercentData = ({ type, armyPoints, points }) => {\n  const maxPercent = rules[type].maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({ type, armyPoints, points }) => {\n  const minPercent = rules[type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.magic?.items) {\n    unit.magic.items.forEach((option) => {\n      unitPoints += option.points;\n    });\n  }\n\n  return unitPoints;\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { getUnitPoints } from \"../../utils/points\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { deleteList } from \"../../state/lists\";\n\nimport \"./Editor.css\";\n\nconst updateList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"lists\", JSON.stringify(updatedLists));\n};\nconst removeList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"lists\", JSON.stringify(updatedLists));\n};\nconst getAllOptions = ({ mounts, equipment, options, command, magic }) => {\n  const allMounts = mounts\n    ? mounts.filter(({ active }) => active).map(({ name_de }) => name_de)\n    : [];\n  const allEquipment = equipment\n    ? equipment.filter(({ active }) => active).map(({ name_de }) => name_de)\n    : [];\n  const allOptions = options\n    ? options.filter(({ active }) => active).map(({ name_de }) => name_de)\n    : [];\n  const allCommand = command\n    ? command.filter(({ active }) => active).map(({ name_de }) => name_de)\n    : [];\n  const allMagicItems = magic?.items\n    ? magic.items.map(({ name_de }) => name_de)\n    : [];\n  const allOptionsArray = [\n    ...allCommand,\n    ...allEquipment,\n    ...allMounts,\n    ...allOptions,\n    ...allMagicItems,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \");\n\n  if (allOptionsString) {\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const location = useLocation();\n  const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const getPoints = (type) => {\n    let points = 0;\n\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n    return points;\n  };\n  const handleDelete = () => {\n    dispatch(deleteList(listId));\n    removeList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const lordsPoints = getPoints(\"lords\");\n  const heroesPoints = getPoints(\"heroes\");\n  const corePoints = getPoints(\"core\");\n  const specialPoints = getPoints(\"special\");\n  const rarePoints = getPoints(\"rare\");\n  const allPoints =\n    lordsPoints + heroesPoints + corePoints + specialPoints + rarePoints;\n  const lordsData = getMaxPercentData({\n    type: \"lords\",\n    armyPoints: list.points,\n    points: lordsPoints,\n  });\n  const heroesData = getMaxPercentData({\n    type: \"heroes\",\n    armyPoints: list.points,\n    points: heroesPoints,\n  });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n\n  return (\n    <>\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={`${allPoints} / ${list.points} Pkte.`}\n          moreButton={[\n            {\n              name_de: \"Bearbeiten\",\n              icon: \"edit\",\n              to: `/editor/${listId}/edit`,\n            },\n            {\n              name_de: \"Löschen\",\n              icon: \"delete\",\n              callback: handleDelete,\n            },\n          ]}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={`${allPoints} / ${list.points} Pkte.`}\n            moreButton={[\n              {\n                name_de: \"Bearbeiten\",\n                icon: \"edit\",\n                to: `/editor/${listId}/edit`,\n              },\n              {\n                name_de: \"Löschen\",\n                icon: \"delete\",\n                callback: handleDelete,\n              },\n            ]}\n          />\n        )}\n        <section>\n          {errors.map(() => (\n            <span>\n              <strong>{coreData.diff}</strong> Pkte. fehlen\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section>\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>Kommandanten</h2>\n            <p className=\"editor__points\">\n              {lordsData.diff > 0 ? (\n                <>\n                  <strong>{lordsData.diff}</strong>Punkte zu viel\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{lordsData.points - lordsPoints}</strong>\n                  Pkte. verfügbar\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.lords.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/lords/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit.name_de}</b>\n                  <i>{`${getUnitPoints(unit)} Pkte.`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/lords`}\n            icon=\"add\"\n            spaceTop\n          >\n            Hinzufügen\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>Helden</h2>\n            <p className=\"editor__points\">\n              {heroesData.diff > 0 ? (\n                <>\n                  <strong>{heroesData.diff}</strong> Pkte. zu viel\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{heroesData.points - heroesPoints}</strong>\n                  Pkte. verfügbar\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.heroes.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/heroes/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit.name_de}</b>\n                  <i>{`${getUnitPoints(unit)} Pkte.`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/heroes`}\n            icon=\"add\"\n            spaceTop\n          >\n            Hinzufügen\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>Kerneinheiten</h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <>\n                    <strong>{coreData.diff}</strong> Pkte. fehlen\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                </>\n              ) : (\n                <Icon symbol=\"check\" />\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit.name_de}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} Pkte.`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            Hinzufügen\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>Eliteeinheiten</h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong> Pkte. zu viel\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong> Pkte.\n                  verfügbar <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit.name_de}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} Pkte.`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            Hinzufügen\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>Seltene Einheiten</h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong> Pkte. zu viel\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong> Pkte.\n                  verfügbar\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit.name_de}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} Pkte.`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            Hinzufügen\n          </Button>\n        </section>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\n\nimport \"./Home.css\";\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {isMobile && <Header headline=\"Old World Builder\" />}\n\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src=\"/logo-dark.svg\"\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">Erstelle jetzt deine erste Liste.</i>\n          </>\n        )}\n        <ul>\n          {lists.map(({ id, name, points, game, army }, index) => (\n            <List\n              key={index}\n              to={`/editor/${id}`}\n              active={location.pathname.includes(id)}\n            >\n              <span className=\"home__list-item\">\n                <h2 className=\"home__headline\">{name}</h2>\n                <p>{points} Pkte.</p>\n              </span>\n              <img\n                height=\"40\"\n                width=\"40\"\n                src={`/army-icons/${army}.svg`}\n                alt=\"\"\n              />\n              {/* {game === \"warhammer-fantasy\" && (\n                <img height=\"20\" src={`/${game}.png`} alt=\"Warhammer Fantasy\" />\n              )}\n              {game === \"the-old-world\" && (\n                <img\n                  height=\"35\"\n                  src={`/${game}.png`}\n                  alt=\"Warhammer: The Old World\"\n                />\n              )} */}\n            </List>\n          ))}\n        </ul>\n        <Button centered to=\"/new\" icon=\"new-list\" spaceTop>\n          {\"Neue Liste\"}\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport { getUnitPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  let magicPoints = 0;\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    const command = unit.command.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n\n  unit?.magic?.items &&\n    unit?.magic?.items.forEach((option) => {\n      magicPoints += option.points;\n    });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  if (unit) {\n    return (\n      <>\n        {isMobile && (\n          <Header\n            to={`/editor/${listId}`}\n            moreButton={[\n              {\n                name_de: \"Duplizieren\",\n                icon: \"duplicate\",\n                callback: () => handleDuplicate(unit.id),\n              },\n              {\n                name_de: \"Entfernen\",\n                icon: \"delete\",\n                callback: () => handleRemove(unit.id),\n              },\n            ]}\n            headline={unit.name_de}\n            subheadline={`${getUnitPoints(unit)} Pkte.`}\n          />\n        )}\n\n        <MainComponent>\n          {!isMobile && (\n            <Header\n              isSection\n              to={`/editor/${listId}`}\n              headline={unit.name_de}\n              subheadline={`${getUnitPoints(unit)} Pkte.`}\n              moreButton={[\n                {\n                  name_de: \"Duplizieren\",\n                  icon: \"duplicate\",\n                  callback: () => handleDuplicate(unit.id),\n                },\n                {\n                  name_de: \"Entfernen\",\n                  icon: \"delete\",\n                  callback: () => handleRemove(unit.id),\n                },\n              ]}\n            />\n          )}\n          {!unit.minimum &&\n            !unit.command &&\n            !unit.equipment &&\n            !unit.mounts &&\n            !unit.options && (\n              <i className=\"unit__empty\">Keine Optionen verfügbar.</i>\n            )}\n          {unit.minimum && (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                Einheitengröße:\n              </label>\n              <NumberInput\n                id=\"strength\"\n                className=\"input\"\n                min={unit.minimum}\n                value={unit.strength}\n                onChange={handleStrengthChange}\n                required\n              />\n            </>\n          )}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">Kommandoabteilung:</h2>\n              {unit.command.map(({ name_de, points, perModel, id, active }) => (\n                <div className=\"checkbox\" key={id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`command-${id}`}\n                    value={id}\n                    onChange={() => handleCommandChange(id)}\n                    defaultChecked={active}\n                    className=\"checkbox__input\"\n                  />\n                  <label htmlFor={`command-${id}`} className=\"checkbox__label\">\n                    {name_de}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${points === 1 ? \"Pkt.\" : \"Pkte.\"}`}\n                      {perModel && ` pro Modell`}\n                    </i>\n                  </label>\n                </div>\n              ))}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">Ausrüstung:</h2>\n              {unit.equipment.map(\n                ({ name_de, points, perModel, id, active }) => (\n                  <div className=\"radio\" key={id}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${id}`}\n                      name=\"equipment\"\n                      value={id}\n                      onChange={() => handleEquipmentChange(id)}\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                      {name_de}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${points === 1 ? \"Pkt.\" : \"Pkte.\"}`}\n                        {perModel && ` pro Modell`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">Reittier:</h2>\n              {unit.mounts.map(({ name_de, points, id, active }) => (\n                <div className=\"checkbox\" key={id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`mounts-${id}`}\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    defaultChecked={active}\n                    className=\"checkbox__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"checkbox__label\">\n                    {name_de}\n                    <i className=\"checkbox__points\">{`${points} Pkte.`}</i>\n                  </label>\n                </div>\n              ))}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">Optionen:</h2>\n              {unit.options.map(({ name_de, points, perModel, id, active }) => (\n                <div className=\"checkbox\" key={id}>\n                  <input\n                    type=\"checkbox\"\n                    id={`options-${id}`}\n                    value={id}\n                    onChange={() => handleOptionsChange(id)}\n                    defaultChecked={active}\n                    className=\"checkbox__input\"\n                  />\n                  <label htmlFor={`options-${id}`} className=\"checkbox__label\">\n                    {name_de}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${points === 1 ? \"Pkt.\" : \"Pkte.\"}`}\n                      {perModel && ` pro Modell`}\n                    </i>\n                  </label>\n                </div>\n              ))}\n            </>\n          )}\n          {unit?.magic && (\n            <List\n              to={`/editor/${listId}/${type}/${unitId}/magic`}\n              className=\"editor__list unit__link\"\n              active={location.pathname.includes(\"magic\")}\n            >\n              <div className=\"editor__list-inner\">\n                <b>{\"Magische Gegenstände\"}</b>\n                <i className=\"checkbox__points\">{`${magicPoints} Pkte.`}</i>\n              </div>\n              {unit.magic.items && (\n                <p>\n                  {unit.magic.items.map(({ name_de }) => name_de).join(\", \")}\n                </p>\n              )}\n            </List>\n          )}\n        </MainComponent>\n      </>\n    );\n  }\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\n\nimport \"./Edit.css\";\n\nexport const Edit = ({ isMobile }) => {\n  const location = useLocation();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: event.target.value,\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header to={`/editor/${listId}`} headline=\"Liste bearbeiten\" />\n        <Main></Main>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {isMobile && (\n        <Header to={`/editor/${listId}`} headline=\"Liste bearbeiten\" />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline=\"Liste bearbeiten\"\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          Name:\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n        />\n        <label htmlFor=\"points\">Punkte:</label>\n        <NumberInput\n          id=\"points\"\n          className=\"input\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport gameSystems from \"../../data/armies.json\";\n\nimport \"./Magic.css\";\n\nconst nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n  },\n  general: {\n    name_de: \"Magische Gegenstände\",\n  },\n};\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((bla, index) => ({\n      ...bla,\n      id: index,\n    })),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems.find(({ id }) => id === list.game).armies.find(() => list.army);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n\n  const handleMagicChange = (event, magicItem) => {\n    let magicItems;\n\n    if (event.target.checked) {\n      magicItems = [\n        ...(unit?.magic?.items || []),\n        {\n          ...magicItem,\n          id: event.target.value,\n        },\n      ];\n    } else {\n      magicItems = unit.magic.items.filter(\n        ({ id }) => id !== event.target.value\n      );\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    army &&\n      !items &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, dispatch, list, items]);\n\n  if (!items || !unit) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline=\"Magische Gegenstände\"\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline=\"Magische Gegenstände\"\n          />\n        )}\n        {items.map((item) => (\n          <Fragment key={item.name_de}>\n            <h2 className=\"unit__subline\">{item.name_de}</h2>\n            {item.items.map((magicItem) => (\n              <div className=\"checkbox\" key={magicItem.id}>\n                <input\n                  type=\"checkbox\"\n                  id={`${item.id}-${magicItem.id}`}\n                  value={`${item.id}-${magicItem.id}`}\n                  onChange={(event) => handleMagicChange(event, magicItem)}\n                  defaultChecked={\n                    unit?.magic?.items\n                      ? unit.magic.items.find(\n                          ({ id }) => id === `${item.id}-${magicItem.id}`\n                        )\n                      : false\n                  }\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`${item.id}-${magicItem.id}`}\n                  className=\"checkbox__label\"\n                >\n                  {magicItem.name_de}\n                  <i className=\"checkbox__points\">{`${magicItem.points} Pkte.`}</i>\n                </label>\n              </div>\n            ))}\n          </Fragment>\n        ))}\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const About = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          Zur Startseite\n        </Button>\n\n        <h2>Was ist der \"Old World Builder\"?</h2>\n        <p>\n          Der <i>Old World Builder</i> ist eine Armeebau-Hilfe für die Games\n          Workshop Tabletop Spiele Warhammer Fantasy und Warhammer: The Old\n          World.\n        </p>\n        <p>\n          Das Projekt ist Open-Source und wird entwickelt von Nico Thiebes (\n          <a\n            href=\"https://twitter.com/_gscheid\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            @_gscheid\n          </a>\n          ).\n        </p>\n\n        <h2>Credits</h2>\n        <p>\n          Fantasy icons von{\" \"}\n          <a href=\"https://game-icons.net\" target=\"_blank\" rel=\"noreferrer\">\n            game-icons.net\n          </a>{\" \"}\n          (\n          <a\n            href=\"https://creativecommons.org/licenses/by/3.0/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            CC BY 3.0\n          </a>\n          ).\n        </p>\n\n        <h2>Eure Unterstützung</h2>\n        <p>\n          Der <i>Old World Builder</i> ist Open-Source. Ihr findet das Projekt\n          auf GitHub:{\" \"}\n          <a\n            href=\"https://github.com/nthiebes/old-world-builder\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            github.com/nthiebes/old-world-builder\n          </a>\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\n\nconst updateIds = (type) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      {isMobile && (\n        <Header to={`/editor/${listId}`} headline=\"Einheit auswählen\" />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline=\"Einheit auswählen\"\n          />\n        )}\n        <ul>\n          {army[type].map(({ name_de, id, minimum, points }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum && `${minimum} `}\n                <b>{name_de}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } Pkte.`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          Zur Startseite\n        </Button>\n\n        <h2>Hilfe</h2>\n        <p>\n          Falls du Fragen zum OWL hast, kannst du diese im OWL Thema des{\" \"}\n          <a\n            href=\"https://www.gw-fanworld.net\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            GW-Fanworld.net Forums\n          </a>{\" \"}\n          stellen.\n        </p>\n        <p>\n          Alternativ kannst du auch direkt eine E-Mail schreiben an{\" \"}\n          <a href=\"mailto:hello@old-world-builder.com\">\n            hello@old-world-builder.com\n          </a>\n          .\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { Edit } from \"./pages/edit\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(max-width: 1279px)\")\n      .addEventListener(\"change\", (event) => setIsMobile(event.matches));\n  }, []);\n\n  return (\n    <Router>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<Edit isMobile />}</Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/\">{<Home isMobile />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<Edit />}</Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Route path=\"/editor/:listId/:type/:unitId/magic\">\n                  {<Magic />}\n                </Route>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </Router>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/fetcher.js","pages/magic/Magic.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","components/page/Page.js","components/select/Select.js","components/number-input/NumberInput.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","pages/new-list/NewList.js","utils/rules.js","components/list/List.js","utils/unit.js","utils/points.js","utils/list.js","pages/editor/Editor.js","utils/throttle.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","pages/home/Home.js","state/items.js","pages/magic/name-map.js","state/army.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","pages/add/Add.js","pages/help/Help.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","components/expandable/Expandable.js","index.js","pages/datasets/Entity.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","App.js","state/errors.js","store.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","Component","Link","buttonProps","aria-label","title","defaultProps","prevItemType","isFirstItemType","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","mounts","mountsData","options","optionsData","Header","headline","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","intl","useIntl","useLocation","useState","showMenu","setShowMenu","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","alt","src","usa","germany","Select","required","selected","defaultValue","name_de","name_en","optionValue","NumberInput","props","pattern","preventDefault","Number","max","min","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","magic","detachments","data","removeUnit","actions","duplicateList","NewList","isMobile","MainComponent","Fragment","dispatch","useDispatch","lists","useSelector","game","setGame","gameSystems","armies","army","setArmy","setName","setDescription","setPoints","redirect","setRedirect","handleSystemChange","scrollTo","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","mercenaries","allies","newLists","JSON","stringify","createList","checked","height","warhammerFantasy","warhammerTheOldWorld","autoComplete","maxLength","rules","maxPercent","minPercent","maxSame","maxSameLarge","getMaxPercentData","armyPoints","maxPoints","floor","overLimit","diff","ceil","List","active","getAllOptions","asString","noMagic","allCommand","allEquipment","allOptions","allStackableOptions","stackableCount","allMounts","allMagicItems","items","allDetachments","allOptionsArray","allOptionsString","join","getUnitPoints","unitPoints","option","stackable","perModel","detachment","getUnitMagicPoints","commandIndex","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","updatedList","updatedLists","parse","Editor","useParams","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeList","includes","armyIconMap","theEmpire","dwarfs","greenskins","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","skaven","vampireCounts","chaosDeamons","ogres","lizardmen","chaosDwarfs","Home","length","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","itemsSlice","setItems","nameMap","heirlooms","general","weapon","armor","talisman","banner","artifact","triptych","Magic","isLoading","setIsLoading","units","maxMagicPoints","handleMagicChange","magicItem","magicItems","allItems","item","conditional","conditionalItem","conditionalIndex","getCheckbox","itemGroup","isConditional","isChecked","types","confitionalItem","armySlice","Unit","coreUnit","magicPoints","handleDuplicate","handleRemove","maximum","commandMagicPoints","handleCommandChange","handleEquipmentChange","handleStackableOptionChange","handleOptionsChange","regimentalUnit","unitDetachments","push","handleAddDetachmentClick","handleDetachmentStrengthClick","handleDeleteDetachmentClick","handleMountsChange","EditList","updateLocalList","About","values","owb","github","href","rel","datasets","discord","gameIcons","license","Add","handleAdd","Help","getUnitsString","isShowList","Export","copied","setCopied","copyError","setCopyError","setIsShowList","listText","armyName","getListAsText","clipboard","writeText","readOnly","Print","isPrinting","setIsPrinting","onafterprint","print","DuplicateList","Rename","Expandable","notBold","open","noMargin","messages","initialUnitState","magicItemTypes","Entity","onDelete","existingUnit","randomId","setUnit","handleFieldChange","handleSecondLevelFieldChange","field","newEntries","entry","entryIndex","handleSecondLevelNameBlur","isNew","toLowerCase","onBlur","placeholder","itemIndex","newCommandEntries","handleCommandMagicChange","handleCommandMagicPointsChange","mount","handleMagicPointsChange","Datasets","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","existingDataset","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","privacy","App","matchMedia","matches","setIsMobile","localLists","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","German","English","ReactDOM","render","store","StrictMode","getElementById","URL","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.78498467.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.220641f9.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n}) => {\n  const Component = to ? Link : \"button\";\n  const buttonProps = {};\n\n  if (!to) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"large\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nlet prevItemType, isFirstItemType;\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(true);\n  const { listId, type, unitId, command } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => list.army === id);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const maxMagicPoints =\n    (unit &&\n      unit.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints) ||\n    (unit && unit.magic.maxPoints);\n  const handleMagicChange = (event, magicItem) => {\n    let magicItems;\n\n    if (event.target.checked) {\n      magicItems = [\n        ...(unit?.magic?.items || []),\n        {\n          ...magicItem,\n          command: Number(command),\n          id: event.target.value,\n        },\n      ];\n    } else {\n      magicItems = unit.magic.items.filter(\n        ({ id }) => id !== event.target.value\n      );\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n          setIsLoading(false);\n        },\n      });\n  }, [army, dispatch, list, setIsLoading, unit, language]);\n\n  if (isLoading) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({ unit, magicItem, itemGroup, isConditional }) => {\n    const isChecked = unit?.magic?.items\n      ? unit.magic.items.find(\n          ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n        ) || false\n      : false;\n\n    return (\n      <div\n        className={classNames(\n          \"checkbox\",\n          isConditional && \"checkbox--conditional\"\n        )}\n        key={magicItem.id}\n      >\n        <input\n          type=\"checkbox\"\n          id={`${itemGroup.id}-${magicItem.id}`}\n          value={`${itemGroup.id}-${magicItem.id}`}\n          onChange={(event) => handleMagicChange(event, magicItem)}\n          checked={isChecked}\n          className=\"checkbox__input\"\n        />\n        <label\n          htmlFor={`${itemGroup.id}-${magicItem.id}`}\n          className=\"checkbox__label\"\n        >\n          {language === \"de\" ? magicItem.name_de : magicItem.name_en}\n          <i className=\"checkbox__points\">{`${\n            magicItem.points\n          } ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}</i>\n        </label>\n      </div>\n    );\n  };\n  const hasPointsError = getUnitMagicPoints({ unit, command }) > maxMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"unit.magicItems\",\n          })}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  hasPointsError && \"magic__header-points--error\"\n                )}\n              >\n                {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n              </span>\n              {`/ ${maxMagicPoints} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={hasPointsError}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"unit.magicItems\",\n            })}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    hasPointsError && \"magic__header-points--error\"\n                  )}\n                >\n                  {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n                </span>\n                {`/ ${maxMagicPoints} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={hasPointsError}\n          />\n        )}\n        {items.map((itemGroup) => (\n          <Fragment key={itemGroup.name_de}>\n            <h2 className=\"unit__subline\">\n              {language === \"de\" ? itemGroup.name_de : itemGroup.name_en}\n            </h2>\n            {itemGroup.items.map((magicItem) => {\n              if (prevItemType !== magicItem.type) {\n                prevItemType = magicItem.type;\n                isFirstItemType = true;\n              } else {\n                isFirstItemType = false;\n              }\n\n              // Filter command magic items\n              if (\n                unit?.command &&\n                unit?.command[command] &&\n                !unit.command[command].magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              // Filter magic items\n              if (\n                unit?.magic?.types &&\n                !unit.magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              const isChecked = unit?.magic?.items\n                ? unit.magic.items.find(\n                    ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                  ) || false\n                : false;\n\n              return (\n                <Fragment key={magicItem.name_de}>\n                  {isFirstItemType && (\n                    <h3 className=\"magic__type\">\n                      {nameMap[magicItem.type][`name_${language}`]}\n                    </h3>\n                  )}\n                  {getCheckbox({ unit, magicItem, itemGroup })}\n                  {magicItem.conditional && isChecked\n                    ? magicItem.conditional.map((confitionalItem) =>\n                        getCheckbox({\n                          unit,\n                          magicItem: confitionalItem,\n                          itemGroup,\n                          isConditional: true,\n                        })\n                      )\n                    : null}\n                </Fragment>\n              );\n            })}\n          </Fragment>\n        ))}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{navigation && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n};\n","import React from \"react\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return <Icon symbol=\"spinner\" className=\"spinner\" />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ name_de, name_en, id: optionValue }) => (\n        <option key={optionValue} value={optionValue}>\n          {language === \"de\" ? name_de : name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = (props) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) + 1,\n        id: props.id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) - 1,\n        id: props.id,\n      },\n    });\n  };\n\n  return (\n    <div className=\"number-input\">\n      <input {...props} type=\"number\" pattern=\"[0-9]*\" />\n      <Button\n        onClick={handleOnUpClick}\n        type=\"secondary\"\n        icon=\"up\"\n        label={intl.formatMessage({ id: \"misc.increase\" })}\n        disabled={props.value >= props.max}\n        className=\"number-input__button number-input__button--up\"\n      />\n      <Button\n        onClick={handleOnDownClick}\n        type=\"secondary\"\n        icon=\"down\"\n        label={intl.formatMessage({ id: \"misc.decrease\" })}\n        disabled={props.value <= props.min}\n        className=\"number-input__button number-input__button--down\"\n      />\n    </div>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        name,\n        detachments,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        detachments,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [redirect, setRedirect] = useState(null);\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <>\n                    <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                    <p className=\"new-list__beta\">Beta</p>\n                  </>\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={gameSystems.filter(({ id }) => id === game)[0].armies}\n            onChange={handleArmyChange}\n            selected=\"kingdom-of-bretonnia\"\n            spaceBottom\n            required\n          />\n          <Button centered icon=\"add-list\" submitButton>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  lords: { maxPercent: 25 },\n  heroes: { maxPercent: 25 },\n  characters: { maxPercent: 50 },\n  core: { minPercent: 25 },\n  special: {\n    maxPercent: 50,\n    maxSame: 3,\n    maxSameLarge: 6,\n  },\n  rare: {\n    maxPercent: 25,\n    maxSame: 2,\n    maxSameLarge: 4,\n  },\n  mercenaries: { maxPercent: 20 },\n  allies: { maxPercent: 25 },\n};\n\nexport const getMaxPercentData = ({ type, armyPoints, points }) => {\n  const maxPercent = rules[type].maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({ type, armyPoints, points }) => {\n  const minPercent = rules[type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","export const getAllOptions = (\n  { mounts, equipment, options, command, magic, detachments },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = command\n    ? command\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_de, name_en, stackableCount }) =>\n            `${stackableCount} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allMagicItems = magic?.items\n    ? magic.items.map(({ name_de, name_en }) =>\n        language === \"de\" ? name_de : name_en\n      )\n    : [];\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(\n          ({ name_de, name_en, strength }) =>\n            `${strength} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allMagicItems : []),\n    ...allDetachments,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.magic?.items) {\n    unit.magic.items.forEach((option) => {\n      unitPoints += option.points;\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach((detachment) => {\n      unitPoints += detachment.strength * detachment.points;\n    });\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ unit, command }) => {\n  const commandIndex = Number(command);\n  let unitPoints = 0;\n\n  if (unit?.magic?.items) {\n    if (commandIndex >= 0) {\n      unit.magic.items.forEach((option) => {\n        if (option.command === commandIndex) {\n          unitPoints += option.points;\n        }\n      });\n    } else {\n      unit.magic.items.forEach((option) => {\n        unitPoints += option.points;\n      });\n    }\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","export const updateList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeList, updateList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const location = useLocation();\n  const { language } = useLanguage();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDelete = () => {\n    dispatch(deleteList(listId));\n    removeList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData = getMaxPercentData({\n    type: \"lords\",\n    armyPoints: list.points,\n    points: lordsPoints,\n  });\n  const heroesData = getMaxPercentData({\n    type: \"heroes\",\n    armyPoints: list.points,\n    points: heroesPoints,\n  });\n  const charactersData = getMaxPercentData({\n    type: \"characters\",\n    armyPoints: list.points,\n    points: charactersPoints,\n  });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const mercenariesData = getMaxPercentData({\n    type: \"mercenaries\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const alliesData = getMaxPercentData({\n    type: \"allies\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: handleDelete,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.lords.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/lords/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.heroes.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/heroes/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.characters.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/characters/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {unit.strength || unit.minimum\n                      ? `${unit.strength || unit.minimum} `\n                      : null}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {unit.strength || unit.minimum\n                      ? `${unit.strength || unit.minimum} `\n                      : null}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {unit.strength || unit.minimum\n                      ? `${unit.strength || unit.minimum} `\n                      : null}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.mercenaries && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />\n              </h2>\n              <p className=\"editor__points\">\n                {mercenariesData.diff > 0 ? (\n                  <>\n                    <strong>{mercenariesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>\n                      {mercenariesData.points - mercenariesPoints}\n                    </strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.mercenaries.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/mercenaries/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">Coming soon</p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/mercenaries`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n\n        {list.allies && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.allies.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/allies/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">Coming soon</p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblins-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer Fantasy and Warhammer:\n          The Old World\n        </title>\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <ul>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <List\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </List>\n            )\n          )}\n        </ul>\n        <Button centered to=\"/new\" icon=\"new-list\" spaceTop>\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Magische Gegenstände\",\n    name_en: \"Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\nimport { updateIds, getRandomId } from \"../../utils/id\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachments =\n    army && army.core.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleAddDetachmentClick = ({ id }) => {\n    const detachment = detachments.find((detachment) => detachment.id === id);\n    const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n    unitDetachments.push({\n      id: `${id}.${getRandomId()}`,\n      name_de: detachment.name_de,\n      name_en: detachment.name_en,\n      points: detachment.points,\n      strength: 5,\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDeleteDetachmentClick = ({ id }) => {\n    const unitDetachments = [...unit.detachments].filter(\n      (detachment) => detachment.id !== id\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentStrengthClick = ({ id, strength }) => {\n    console.log(id, strength);\n    const unitDetachments = [...unit.detachments].map((detachment) =>\n      detachment.id === id ? { ...detachment, strength } : detachment\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n\n  unit?.magic?.items &&\n    unit?.magic?.items.forEach((option) => {\n      magicPoints += option.points;\n    });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`]}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`]}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              className=\"input\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.command\" />\n            </h2>\n            {unit.command.map(\n              (\n                {\n                  name_de,\n                  name_en,\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                },\n                index\n              ) => {\n                let commandMagicPoints = 0;\n\n                if (unit.magic) {\n                  unit.magic.items\n                    .filter((item) => item.command === index)\n                    .forEach(({ points }) => {\n                      commandMagicPoints = commandMagicPoints + points;\n                    });\n                }\n\n                return (\n                  <Fragment key={id}>\n                    <div className=\"checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        {language === \"de\" ? name_de : name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.maxPoints && active ? (\n                      <List\n                        to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                        className=\"editor__list unit__link\"\n                        active={location.pathname.includes(\"magic\")}\n                      >\n                        <div className=\"editor__list-inner\">\n                          <b>\n                            {magic.types\n                              .map((type) => nameMap[type][`name_${language}`])\n                              .join(\", \")}\n                          </b>\n                          <i className=\"checkbox__points\">\n                            <span\n                              className={classNames(\n                                commandMagicPoints >\n                                  unit.command[index].magic.maxPoints &&\n                                  \"editor__error\"\n                              )}\n                            >\n                              {getUnitCommandPoints(\n                                unit?.magic?.items.filter(\n                                  ({ command }) => command === index\n                                )\n                              )}\n                            </span>{\" \"}\n                            / {unit.command[index].magic.maxPoints}{\" \"}\n                            <FormattedMessage id=\"app.points\" />\n                          </i>\n                          {commandMagicPoints >\n                            unit.command[index].magic.maxPoints && (\n                            <Icon\n                              symbol=\"error\"\n                              color=\"red\"\n                              className=\"unit__magic-icon\"\n                            />\n                          )}\n                        </div>\n                        {unit?.magic?.items && (\n                          <p>\n                            {unit.magic.items\n                              .filter(({ command }) => command === index)\n                              .map(({ name_de, name_en }) =>\n                                language === \"de\" ? name_de : name_en\n                              )\n                              .join(\", \")}\n                          </p>\n                        )}\n                      </List>\n                    ) : null}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ name_de, name_en, points, perModel, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                name_de,\n                name_en,\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      {language === \"de\" ? name_de : name_en}:\n                      <i className=\"checkbox__points\">\n                        {`${points} ${intl.formatMessage({\n                          id: \"app.points\",\n                        })} ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      className=\"input\"\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_de, name_en, id }) => (\n              <>\n                <div className=\"list\" key={id}>\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {language === \"de\" ? name_de : name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(({ name_de, name_en, strength, id, points }) => (\n                      <div className=\"list\" key={id}>\n                        <div className=\"list__inner unit__detachments\">\n                          <NumberInput\n                            id={`strength-${id}`}\n                            className=\"input\"\n                            min={5}\n                            value={strength}\n                            onChange={(event) =>\n                              handleDetachmentStrengthClick({\n                                id,\n                                strength: event.target.value,\n                              })\n                            }\n                          />\n                          <span>\n                            <b>{language === \"de\" ? name_de : name_en}</b>\n                            <i>{`${getUnitPoints({\n                              strength,\n                              points,\n                            })} ${intl.formatMessage({\n                              id: \"app.points\",\n                            })}`}</i>\n                          </span>\n                          <Button\n                            onClick={() =>\n                              handleDeleteDetachmentClick({\n                                id,\n                              })\n                            }\n                            type=\"secondary\"\n                            icon=\"close\"\n                            label={intl.formatMessage({ id: \"misc.remove\" })}\n                            size=\"small\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n              </>\n            ))}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(\n              ({ name_de, name_en, points, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`mounts-${id}`}\n                    name=\"mounts\"\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                      {\n                        id: \"app.points\",\n                      }\n                    )}`}</i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.magic?.maxPoints ? (\n          <List\n            to={`/editor/${listId}/${type}/${unitId}/magic`}\n            className=\"editor__list unit__link\"\n            active={location.pathname.includes(\"magic\")}\n          >\n            <div className=\"editor__list-inner\">\n              <b className=\"unit__magic-headline\">\n                <FormattedMessage id=\"unit.magicItems\" />\n              </b>\n              <i className=\"checkbox__points\">\n                <span\n                  className={classNames(\n                    magicPoints > unit.magic.maxPoints && \"editor__error\"\n                  )}\n                >\n                  {magicPoints}\n                </span>{\" \"}\n                / {unit.magic.maxPoints} <FormattedMessage id=\"app.points\" />\n              </i>\n              {magicPoints > unit.magic.maxPoints && (\n                <Icon symbol=\"error\" color=\"red\" className=\"unit__magic-icon\" />\n              )}\n            </div>\n            {unit.magic.items && (\n              <p>\n                {unit.magic.items\n                  .map(({ name_de, name_en }) =>\n                    language === \"de\" ? name_de : name_en\n                  )\n                  .join(\", \")}\n              </p>\n            )}\n          </List>\n        ) : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateList as updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          className=\"input\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.disclaimer\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        <ul>\n          {army[type].map(({ name_de, name_en, id, minimum, points }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum ? `${minimum} ` : null}\n                <b>{language === \"de\" ? name_de : name_en}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Export.css\";\n\nconst getUnitsString = ({ units, isShowList, intl, language }) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n\n      if (isShowList) {\n        return `${\n          unit.strength || unit.minimum\n            ? `${unit.strength || unit.minimum} `\n            : \"\"\n        }${unit[`name_${language}`]}\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n      }\n\n      return `${\n        unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n      }${unit[`name_${language}`]} [${getUnitPoints(unit)} ${intl.formatMessage(\n        {\n          id: \"app.points\",\n        }\n      )}]\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n    })\n    .join(\"\");\n};\n\nconst getListAsText = ({ list, isShowList, intl, language }) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n\n  if (isShowList) {\n    if (list.game === \"the-old-world\") {\n      // prettier-ignore\n      return `===\n${list.name}\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})} ++\n\n${getUnitsString({ units: list.characters, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.core\",\n})} ++\n\n${getUnitsString({ units: list.core, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.special\",\n})} ++\n\n${getUnitsString({ units: list.special, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})} ++\n\n${getUnitsString({ units: list.rare, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})} ++\n\n${getUnitsString({ units: list.mercenaries, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})} ++\n\n${getUnitsString({ units: list.allies, isShowList, intl, language })}\n\n---\n${intl.formatMessage({\nid: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n    } else {\n      // Warhammer fantasy\n      // prettier-ignore\n      return `===\n${list.name}\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})} ++\n\n${getUnitsString({ units: list.lords, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})} ++\n\n${getUnitsString({ units: list.heroes, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.core\",\n})} ++\n\n${getUnitsString({ units: list.core, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.special\",\n})} ++\n\n${getUnitsString({ units: list.special, isShowList, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})} ++\n\n${getUnitsString({ units: list.rare, isShowList, intl, language })}\n\n---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n    }\n  } else {\n    if (list.game === \"the-old-world\") {\n      // prettier-ignore\n      return `===\n${list.name} [${allPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}]\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})} [${charactersPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.characters, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.core\",\n})} [${corePoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.core, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.special\",\n})} [${specialPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.special, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})} [${rarePoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.rare, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})} [${mercenariesPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.mercenaries, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})} [${alliesPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.allies, intl, language })}\n\n---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n    } else {\n      // Warhammer fantasy\n      // prettier-ignore\n      return `===\n${list.name} [${allPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}]\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})} [${lordsPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.lords, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})} [${heroesPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.heroes, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.core\",\n})} [${corePoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.core, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.special\",\n})} [${specialPoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.special, intl, language })}\n++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})} [${rarePoints} ${intl.formatMessage({\n  id: \"app.points\",\n})}] ++\n\n${getUnitsString({ units: list.rare, intl, language })}\n\n---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n    }\n  }\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const { listId } = useParams();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({ list, isShowList, intl, language })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          centered\n          spaceTop\n          spaceBottom\n          onClick={copyText}\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__visible-description\">\n          <i>\n            (<FormattedMessage id=\"export.visibleListDescription\" />)\n          </i>\n        </p>\n\n        <textarea className=\"export__text\" value={listText} readOnly />\n      </MainComponent>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Button\n          to={`/editor/${listId}`}\n          centered\n          icon=\"back\"\n          spaceTop\n          spaceBottom\n        >\n          <FormattedMessage id=\"header.back\" />\n        </Button>\n        {isPrinting ? (\n          <p className=\"print-info\">\n            <FormattedMessage id=\"print.printing\" />\n          </p>\n        ) : (\n          <>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"show\"\n                onChange={() => setIsShowList(!isShowList)}\n                checked={isShowList}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"show\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.visibleList\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\">\n              <i>\n                (<FormattedMessage id=\"export.visibleListDescription\" />)\n              </i>\n            </p>\n            <Button\n              onClick={handlePrintClick}\n              centered\n              icon=\"print\"\n              spaceTop\n              spaceBottom\n            >\n              <FormattedMessage id=\"misc.print\" />\n            </Button>\n          </>\n        )}\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.characters\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            <ul>\n              {list.characters.map((unit) => (\n                <li key={unit.id}>\n                  <h3>\n                    {language === \"de\" ? unit.name_de : unit.name_en}\n                    {!isShowList && (\n                      <span className=\"print__points\">\n                        [{getUnitPoints(unit)}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h3>\n                  {getAllOptions(unit)}\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.lords.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.heroes.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{corePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{specialPoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{rarePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        {list.game === \"the-old-world\" && (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.mercenaries.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      <span className=\"print__strength\">\n                        {(unit.strength || unit.minimum) &&\n                          `${unit.strength || unit.minimum} `}\n                      </span>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.allies.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      <span className=\"print__strength\">\n                        {(unit.strength || unit.minimum) &&\n                          `${unit.strength || unit.minimum} `}\n                      </span>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[language === \"de\" ? \"name_de\" : \"name_en\"] : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Army builder for Warhammer: The Old World and Warhammer Fantasy Battles.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  command: [],\n  equipment: [],\n  options: [],\n  mounts: [],\n  magic: {\n    types: [],\n    maxPoints: 0,\n  },\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"talisman\",\n  \"banner\",\n  \"artifact\",\n  \"enchanted-item\",\n  \"triptych\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, onDelete, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleMagicChange = ({ value, item }) => {\n    setUnit({\n      ...unit,\n      magic: {\n        ...unit.magic,\n        types:\n          value === \"on\"\n            ? [...unit.magic.types, item]\n            : unit.magic.types.filter((name) => name !== item),\n      },\n    });\n  };\n  const handleMagicPointsChange = ({ value }) => {\n    setUnit({\n      ...unit,\n      magic: {\n        ...unit.magic,\n        maxPoints: value,\n      },\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>Points per model</label>\n      <NumberInput\n        id={`points-${randomId}`}\n        className=\"input\"\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            className=\"input\"\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            className=\"input\"\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n        </>\n      )}\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                className=\"input\"\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={(event) =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command.magic.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command.magic.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  className=\"input\"\n                  min={0}\n                  value={command.magic.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Equipment</h3>\n      <p className=\"datasets__paragraph\">\n        All equipment options are mutually exclusive.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-perModel${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"perModel\",\n                  value: !equipment.perModel,\n                })\n              }\n              checked={equipment.perModel}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-perModel${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Points count for each model\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New equipment\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            className=\"input\"\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                className=\"input\"\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                className=\"input\"\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      <hr />\n\n      <h3>Mounts</h3>\n      <p className=\"datasets__paragraph\">\n        All mount options are mutually exclusive.\n        <br />\n        <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n      </p>\n      {unit.mounts.map((mount, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`mounts-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={mount.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"mounts\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"mounts\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`mounts-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={mount.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"mounts\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`mounts-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`mounts-points${index}-${randomId}`}\n            className=\"input\"\n            value={mount.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"mounts\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`mounts-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"mounts\",\n                  field: \"active\",\n                  value: !mount.active,\n                })\n              }\n              checked={mount.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`mounts-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"On foot\" is the default mount)</i>\n          </p>\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMount}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New mount\n      </Button>\n\n      {type === \"characters\" && (\n        <>\n          <hr />\n          <h3>Allowed magic item categories</h3>\n          {magicItemTypes.map((item, itemIndex) => (\n            <div className=\"checkbox\" key={item}>\n              <input\n                type=\"checkbox\"\n                id={`${item}-${itemIndex}-${randomId}`}\n                onChange={(event) =>\n                  handleMagicChange({\n                    value: unit.magic.types.includes(item) ? \"off\" : \"on\",\n                    item,\n                  })\n                }\n                checked={unit.magic.types.includes(item)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${item}-${itemIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {item}\n              </label>\n            </div>\n          ))}\n          <label htmlFor={`magic-points-${randomId}`}>\n            Max. magic item points\n          </label>\n          <NumberInput\n            id={`magic-points-${randomId}`}\n            className=\"input\"\n            min={0}\n            value={unit.magic.maxPoints}\n            onChange={(event) =>\n              handleMagicPointsChange({\n                value: Number(event.target.value),\n              })\n            }\n          />\n        </>\n      )}\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n      {existingUnit ? (\n        <Button\n          type=\"text\"\n          color=\"dark\"\n          spaceBottom\n          icon=\"delete\"\n          label=\"Delete unit\"\n          onClick={() => onDelete({ type, id: unit.id })}\n        ></Button>\n      ) : null}\n    </form>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"kingdom-of-bretonnia\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main className=\"datasets\">\n        <Button to=\"/\" icon=\"home\" centered spaceBottom>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually) .\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"kingdom-of-bretonnia\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading && <Spinner />}\n            {dataset.characters.length > 0 && (\n              <h3 className=\"datasets__edit-headline\">Characters</h3>\n            )}\n            <ul>\n              {dataset.characters.map((unit, index) => (\n                <Expandable\n                  headline={unit.name_en}\n                  noMargin\n                  className=\"datasets__unit-type datasets__unit\"\n                  key={index}\n                >\n                  <Entity\n                    unit={unit}\n                    type=\"characters\"\n                    onSubmit={handleSubmit}\n                    onDelete={handleDelete}\n                  />\n                </Expandable>\n              ))}\n            </ul>\n            {dataset.core.length > 0 && (\n              <h3 className=\"datasets__edit-headline\">Core Units</h3>\n            )}\n            <ul>\n              {dataset.core.map((unit, index) => (\n                <Expandable\n                  headline={unit.name_en}\n                  noMargin\n                  className=\"datasets__unit-type datasets__unit\"\n                  key={index}\n                >\n                  <Entity\n                    unit={unit}\n                    type=\"core\"\n                    onSubmit={handleSubmit}\n                    onDelete={handleDelete}\n                  />\n                </Expandable>\n              ))}\n            </ul>\n            {dataset.special.length > 0 && (\n              <h3 className=\"datasets__edit-headline\">Special Units</h3>\n            )}\n            <ul>\n              {dataset.special.map((unit, index) => (\n                <Expandable\n                  headline={unit.name_en}\n                  noMargin\n                  className=\"datasets__unit-type datasets__unit\"\n                  key={index}\n                >\n                  <Entity\n                    unit={unit}\n                    type=\"special\"\n                    onSubmit={handleSubmit}\n                    onDelete={handleDelete}\n                  />\n                </Expandable>\n              ))}\n            </ul>\n            {dataset.rare.length > 0 && (\n              <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n            )}\n            <ul>\n              {dataset.rare.map((unit, index) => (\n                <Expandable\n                  headline={unit.name_en}\n                  noMargin\n                  className=\"datasets__unit-type datasets__unit\"\n                  key={index}\n                >\n                  <Entity\n                    unit={unit}\n                    type=\"rare\"\n                    onSubmit={handleSubmit}\n                    onDelete={handleDelete}\n                  />\n                </Expandable>\n              ))}\n            </ul>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n\n            <textarea\n              className=\"datasets__output\"\n              rows=\"20\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p>\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n          </section>\n        </div>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact className=\"changelog\">\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n        <h3>v0.4.2</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change3\" />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    localStorage.setItem(\"owb.lists\", localLists);\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(max-width: 1279px)\")\n      .addEventListener(\"change\", (event) => setIsMobile(event.matches));\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n  },\n});\n"],"sourceRoot":""}
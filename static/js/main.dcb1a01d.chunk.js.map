{"version":3,"file":"static/js/main.dcb1a01d.chunk.js","sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/useLanguage.js","components/page/Header.js","components/spinner/Spinner.js","assets/germany.svg","assets/usa.svg","assets/spain.svg","assets/france.svg","assets/italy.svg","components/page/Page.js","components/select/Select.js","components/error-message/ErrorMessage.js","components/number-input/NumberInput.js","utils/fetcher.js","utils/collection.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","utils/points.js","components/dialog/Dialog.js","utils/string.js","state/rules-index.js","components/rules-index/rules-map.js","components/rules-index/RulesIndex.js","components/rules-index/RulesLinksText.js","components/rules-index/RulesWithIcon.js","state/items.js","utils/list.js","utils/magic-item-limitations.js","pages/magic/name-map.js","pages/magic/Magic.js","pages/new-list/NewList.js","utils/rules.js","components/list/ListItem.js","components/list/OrderableList.js","utils/unit.js","pages/editor/Editor.js","utils/throttle.js","state/army.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","assets/forg3d.jpg","pages/home/Home.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","utils/script.js","pages/add/Add.js","pages/help/Help.js","components/expandable/Expandable.js","pages/export/get-list-as-text.js","pages/export/Export.js","components/stats/Stats.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","pages/datasets/Entity.js","pages/datasets/UnitPreview.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","pages/import/Import.js","pages/game-view/GameView.js","App.js","state/errors.js","store.js","index.js"],"sourceRoot":"","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.030e8464.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  href,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n  download,\n  value,\n}) => {\n  const Component = to || href ? (to ? Link : \"a\") : \"button\";\n  const buttonProps = {};\n\n  if (!to && !href) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      href={href}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      download={download}\n      value={value}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n  download: PropTypes.string,\n  value: PropTypes.oneOfType(PropTypes.string, PropTypes.number),\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"medium\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      armor: unit.armor\n        ? unit.armor.map((armorData, index) => ({\n            ...armorData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n  hasHomeButton,\n  filters,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n      icon: \"about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n      icon: \"help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n      icon: \"datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n      icon: \"news\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>\n          {hasHomeButton && (\n            <Button\n              type=\"text\"\n              to=\"/\"\n              label={intl.formatMessage({ id: \"misc.startpage\" })}\n              color=\"light\"\n              icon=\"home\"\n            />\n          )}\n          {navigation && !hasHomeButton && (\n            <div className=\"header__empty-icon\" />\n          )}\n        </>\n      )}\n      <div className=\"header__text\">\n        {headline && (\n          <>\n            {headline === \"Old World Builder\" ? (\n              <h1 className=\"header__name\">\n                <Link className=\"header__name-link\" to=\"/\">\n                  {headline}\n                </Link>\n              </h1>\n            ) : (\n              <h1 className=\"header__name\">{headline}</h1>\n            )}\n          </>\n        )}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && !filters && <div className=\"header__empty-icon\" />}</>\n      )}\n      {filters && (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.filter\" })}\n          icon=\"filter\"\n          onClick={handleMenuClick}\n        />\n      )}\n      {showMenu && navigation && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n      {showMenu && filters && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {filters.map(({ callback, name, description, id, checked }) => (\n            <li key={id}>\n              <div className=\"checkbox header__checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={id}\n                  onChange={callback}\n                  checked={checked}\n                  className=\"checkbox__input\"\n                />\n                <label htmlFor={id} className=\"checkbox__label\">\n                  {name}\n                </label>\n              </div>\n              {description && (\n                <i className=\"header__filter-description\">{description}</i>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  filters: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n  hasHomeButton: PropTypes.bool,\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = ({ className }) => {\n  return <Icon symbol=\"spinner\" className={classNames(\"spinner\", className)} />;\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","export default __webpack_public_path__ + \"static/media/spain.fe46f7a7.svg\";","export default __webpack_public_path__ + \"static/media/france.bf26b172.svg\";","export default __webpack_public_path__ + \"static/media/italy.bb2033dc.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\nimport spain from \"../../assets/spain.svg\";\nimport france from \"../../assets/france.svg\";\nimport italy from \"../../assets/italy.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"french\"\n                name=\"languages\"\n                value=\"fr\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"fr\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"french\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={france}\n                  className=\"footer__language-icon\"\n                />\n                Français\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"spanish\"\n                name=\"languages\"\n                value=\"es\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"es\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"spanish\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={spain}\n                  className=\"footer__language-icon\"\n                />\n                Español\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"italian\"\n                name=\"languages\"\n                value=\"it\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"it\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"italian\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={italy}\n                  className=\"footer__language-icon\"\n                />\n                Italiano\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ id: optionValue, ...option }) => (\n        <option key={optionValue} value={optionValue}>\n          {option[`name_${language}`] || option.name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./ErrorMessage.css\";\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <p className=\"error-message\">\n      <Icon symbol=\"error\" color=\"red\" className=\"error-message__icon\" />\n      {children || <FormattedMessage id=\"misc.minError\" />}\n    </p>\n  );\n};\n\nErrorMessage.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { ErrorMessage } from \"../error-message\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = ({\n  onChange,\n  value,\n  id,\n  max,\n  min,\n  readOnly,\n  required,\n  noError,\n  interval,\n}) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) + (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) - (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnChange = (event) => {\n    let newValue = Number(event.target.value);\n    const maxValue = max > 0 ? max : 100000;\n\n    if (newValue > maxValue) {\n      newValue = maxValue;\n    }\n\n    onChange({\n      target: {\n        value: newValue,\n        id,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          min={0}\n          max={max > 0 ? max : 100000}\n          value={value}\n          onChange={handleOnChange}\n          id={id}\n          readOnly={readOnly}\n          required={required}\n          className=\"input\"\n        />\n        <Button\n          onClick={handleOnUpClick}\n          type=\"secondary\"\n          icon=\"up\"\n          label={intl.formatMessage({ id: \"misc.increase\" })}\n          disabled={value >= max && max !== 0}\n          className=\"number-input__button number-input__button--up\"\n        />\n        <Button\n          onClick={handleOnDownClick}\n          type=\"secondary\"\n          icon=\"down\"\n          label={intl.formatMessage({ id: \"misc.decrease\" })}\n          disabled={value <= min}\n          className=\"number-input__button number-input__button--down\"\n        />\n      </div>\n      {value < min && !noError && (\n        <ErrorMessage>\n          <FormattedMessage\n            id=\"misc.minError\"\n            values={{\n              min,\n            }}\n          />\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number,\n  id: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  noError: PropTypes.bool,\n};\n\nNumberInput.defaultProps = {\n  min: 0,\n  max: 100000,\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","/**\n * Swaps two elements in a list by their indexes.\n *\n * @template T\n * @param {T[]} list\n * @param {number} index1\n * @param {number} index2\n * @returns {T[]}\n */\nexport const swap = (list, index1, index2) => {\n  const result = [...list];\n  const [removed] = result.splice(index1, 1);\n  result.splice(index2, 0, removed);\n\n  return result;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\nimport { swap } from \"../utils/collection\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    moveUnit: (state, { payload }) => {\n      const { listId, type, sourceIndex, destinationIndex } = payload;\n\n      return state.map((list) => {\n        if (listId === list.id) {\n          return {\n            ...list,\n            [type]: swap([...list[type]], sourceIndex, destinationIndex),\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        name,\n        detachments,\n        activeLore,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        detachments,\n        activeLore,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  moveUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","export const getUnitPoints = (unit) => {\n  const detachmentActive =\n    unit?.options?.length > 0 &&\n    Boolean(\n      unit.options.find(\n        (option) => option.name_en === \"Detachment\" && option.active\n      )\n    );\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.armor) {\n    unit.armor.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command && !detachmentActive) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n      if (option.active && option.magic && option.magic?.selected?.length) {\n        option.magic.selected.forEach((selected) => {\n          unitPoints += selected.amount\n            ? selected.amount * selected.points\n            : selected.points;\n        });\n      }\n      if (option.active && option.options && option.options.length > 0) {\n        option.options.forEach((commandOption) => {\n          if (commandOption.active) {\n            unitPoints += commandOption.points;\n          }\n        });\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.items && unit?.items.length) {\n    unit.items.forEach((item) => {\n      (item.selected || []).forEach((selected) => {\n        unitPoints += selected.amount\n          ? selected.amount * selected.points\n          : selected.points;\n      });\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach(\n      ({ strength, points, equipment, armor, options }) => {\n        unitPoints += strength * points;\n\n        if (equipment && equipment.length) {\n          equipment.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (armor && armor.length) {\n          armor.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (options && options.length) {\n          options.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n      }\n    );\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ selected }) => {\n  let unitPoints = 0;\n\n  selected &&\n    selected.forEach((option) => {\n      unitPoints += option.amount\n        ? option.amount * option.points\n        : option.points;\n    });\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./Dialog.css\";\n\nexport const Dialog = ({ open, onClose, children }) => {\n  const dialogRef = useRef(null);\n  const intl = useIntl();\n  const handleClose = () => {\n    dialogRef?.current?.close && dialogRef.current.close();\n    onClose();\n  };\n  useEffect(() => {\n    if (open) {\n      dialogRef?.current?.showModal && dialogRef.current.showModal();\n    } else {\n      dialogRef?.current?.close && dialogRef.current.close();\n    }\n  }, [open]);\n\n  return (\n    <dialog className=\"dialog\" ref={dialogRef} onClose={handleClose}>\n      <Button\n        className=\"dialog__close\"\n        icon=\"close\"\n        type=\"text\"\n        label={intl.formatMessage({ id: \"header.close\" })}\n        color=\"dark\"\n        onClick={handleClose}\n      />\n      {children}\n    </dialog>\n  );\n};\n\nDialog.propTypes = {\n  open: PropTypes.bool,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","export const normalizeRuleName = (string = \"\") => {\n  return string\n    .toLowerCase()\n    .replace(/ *\\([^)]*\\) */g, \"\")\n    .replace(/\\*/g, \"\")\n    .replace(/^[0-9]x /g, \"\")\n    .replace(/“/g, '\"')\n    .replace(/”/g, '\"');\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const rulesIndexSlice = createSlice({\n  name: \"rulesIndex\",\n  initialState: {\n    activeRule: \"\",\n    open: false,\n  },\n  reducers: {\n    openRulesIndex: (state, { payload }) => {\n      return {\n        ...state,\n        activeRule: payload.activeRule,\n        open: true,\n      };\n    },\n    closeRulesIndex: (state) => {\n      return { ...state, activeRule: \"\", open: false };\n    },\n  },\n});\n\nexport const { openRulesIndex, closeRulesIndex } = rulesIndexSlice.actions;\n\nexport default rulesIndexSlice.reducer;\n","const rulesIndexExport = {\n  \"bellowers & musicians\": \"special-rules/bellowers-and-musicians\",\n  \"ancestral grudge\": \"special-rules/ancestral-grudge\",\n  \"goad beast\": \"special-rules/goad-beast\",\n  \"mob rule\": \"special-rules/mob-rule\",\n  \"arcane shield\": \"special-rules/arcane-shield\",\n  \"infernal engineer\": \"special-rules/infernal-engineer\",\n  \"my will be done\": \"special-rules/my-will-be-done\",\n  \"banished lords\": \"special-rules/banished-lords\",\n  \"horn of isha\": \"special-rules/horn-of-isha\",\n  \"aura of the lady\": \"special-rules/aura-of-the-lady\",\n  '\"grind them down!\"': \"special-rules/grind-them-down\",\n  brayhorn: \"special-rules/brayhorn\",\n  \"the arrow of kurnous\": \"special-rules/the-arrow-of-kurnous\",\n  \"rampant mutation\": \"special-rules/rampant-mutation\",\n  \"eshin infiltration\": \"special-rules/eshin-infiltration\",\n  \"daemonic charge\": \"special-rules/daemonic-charge\",\n  \"banner of the count\": \"special-rules/banner-of-the-count\",\n  '\"hold the line!\"': \"special-rules/hold-the-line\",\n  \"hidden skaven\": \"special-rules/hidden-skaven\",\n  \"naval discipline\": \"special-rules/naval-discipline\",\n  \"shield of the lady\": \"special-rules/shield-of-the-lady\",\n  \"sorcerer's curse\": \"special-rules/sorcerers-curse\",\n  \"master of battle\": \"special-rules/master-of-battle\",\n  gorefeast: \"special-rules/gorefeast\",\n  \"gifts of khaine\": \"special-rules/gifts-of-khaine\",\n  \"the exile's vow\": \"special-rules/the-exiles-vow\",\n  guardians: \"special-rules/guardians\",\n  \"troubadour of loec\": \"special-rules/troubadour-of-loec\",\n  \"ogre charge\": \"special-rules/ogre-charge\",\n  \"bull charge\": \"special-rules/bull-charge\",\n  \"the language of the priests\": \"special-rules/the-language-of-the-priests\",\n  oathstone: \"special-rules/oathstone\",\n  \"banner of the king\": \"special-rules/banner-of-the-king\",\n  \"slaughterer's call\": \"special-rules/slaughterers-call\",\n  \"the death of a general\": \"special-rules/the-death-of-a-general\",\n  \"big stabbas\": \"special-rules/big-stabbas\",\n  \"chracian warriors\": \"special-rules/chracian-warriors\",\n  \"borne aloft\": \"special-rules/borne-aloft\",\n  \"peasant's duty\": \"special-rules/peasants-duty\",\n  \"hawk-eyed archer\": \"special-rules/hawk-eyed-archer\",\n  \"reclaimed glory\": \"special-rules/reclaimed-glory\",\n  \"invocation of nehek\": \"special-rules/invocation-of-nehek\",\n  \"bestial charge\": \"special-rules/bestial-charge\",\n  \"skulking menace\": \"special-rules/skulking-menace\",\n  \"cloud of flies\": \"special-rules/cloud-of-flies\",\n  \"lay in wait\": \"special-rules/lay-in-wait\",\n  \"spawn of khorne\": \"special-rules/spawn-of-khorne\",\n  \"butcher's cauldron\": \"special-rules/butchers-cauldron\",\n  \"skirmish screen\": \"special-rules/skirmish-screen\",\n  \"hidden dark elves\": \"special-rules/hidden-dark-elves\",\n  \"totem of endless bloodletting\":\n    \"special-rules/totem-of-endless-bloodletting\",\n  \"suffer not...\": \"special-rules/suffer-not\",\n  \"quell panic\": \"special-rules/quell-panic\",\n  \"sworn protector\": \"special-rules/sworn-protector\",\n  \"ancestral shield\": \"special-rules/ancestral-shield\",\n  \"king's guard\": \"special-rules/kings-guard\",\n  \"spawn of nurgle\": \"special-rules/spawn-of-nurgle\",\n  \"masterful outriders\": \"special-rules/masterful-outriders\",\n  \"forbidden poisons\": \"special-rules/forbidden-poisons\",\n  \"deploying weapon teams\": \"special-rules/deploying-weapon-teams\",\n  \"crusading knights\": \"special-rules/crusading-knights\",\n  \"toad rage\": \"special-rules/toad-rage\",\n  \"storm call\": \"special-rules/storm-call\",\n  netters: \"special-rules/netters\",\n  \"the hunger\": \"special-rules/the-hunger\",\n  \"running with the pack\": \"special-rules/running-with-the-pack\",\n  \"arise!\": \"special-rules/arise\",\n  \"carriage hauler\": \"special-rules/carriage-hauler\",\n  \"prayers of sigmar\": \"special-rules/prayers-of-sigmar\",\n  \"brazen wheels\": \"special-rules/brazen-wheels\",\n  \"beguiling aura\": \"special-rules/beguiling-aura\",\n  \"crown of antlers\": \"special-rules/crown-of-antlers\",\n  \"release the fanatics!\": \"special-rules/release-the-fanatics\",\n  \"weapon team leadership\": \"special-rules/weapon-team-leadership\",\n  \"blood frenzy\": \"special-rules/blood-frenzy\",\n  \"attention seeker\": \"special-rules/attention-seeker\",\n  \"spawn of slaanesh\": \"special-rules/spawn-of-slaanesh\",\n  \"martial prowess\": \"special-rules/martial-prowess\",\n  \"steadfast discipline\": \"special-rules/steadfast-discipline\",\n  \"dance of death\": \"special-rules/dance-of-death\",\n  \"prayers of ulric\": \"special-rules/prayers-of-ulric\",\n  \"wight banner\": \"special-rules/wight-banner\",\n  \"blessings of the volcano god\": \"special-rules/blessings-of-the-volcano-god\",\n  \"grail monk\": \"special-rules/grail-monk\",\n  \"from beneath the sands\": \"special-rules/from-beneath-the-sands\",\n  \"strike the runes\": \"special-rules/strike-the-runes\",\n  \"maddening aura\": \"special-rules/maddening-aura\",\n  \"crusader's zeal\": \"special-rules/crusaders-zeal\",\n  \"grail reliquae\": \"special-rules/grail-reliquae\",\n  \"lumbering destruction\": \"special-rules/lumbering-destruction\",\n  \"spawn of tzeentch\": \"special-rules/spawn-of-tzeentch\",\n  \"squigs go wild\": \"special-rules/squigs-go-wild\",\n  \"engine of the gods\": \"special-rules/engine-of-the-gods\",\n  \"slime trail\": \"special-rules/slime-trail\",\n  \"clouds of soot & smoke\": \"special-rules/clouds-of-soot-and-smoke\",\n  \"implacable defence\": \"special-rules/implacable-defence\",\n  \"targeting weapon teams\": \"special-rules/targeting-weapon-teams\",\n  \"the hierophant\": \"special-rules/the-hierophant\",\n  \"spurting bile blood\": \"special-rules/spurting-bile-blood\",\n  forgefire: \"special-rules/forgefire\",\n  \"deflect shots\": \"special-rules/deflect-shots\",\n  \"authority of the hierophant\": \"special-rules/authority-of-the-hierophant\",\n  \"traps & snares\": \"special-rules/traps-and-snares\",\n  \"cursed coven\": \"special-rules/cursed-coven\",\n  \"the crusader's vow\": \"special-rules/the-crusaders-vow\",\n  \"guardians of the wildwood\": \"special-rules/guardians-of-the-wildwood\",\n  \"bound spirits\": \"special-rules/bound-spirits\",\n  \"harmonious incantations\": \"special-rules/harmonious-incantations\",\n  handler: \"special-rules/handler\",\n  cannonade: \"special-rules/cannonade\",\n  \"ravenous hunger\": \"special-rules/ravenous-hunger\",\n  \"slayer of daemons\": \"special-rules/slayer-of-daemons\",\n  \"ker-splat\": \"special-rules/ker-splat\",\n  \"arcane configuration\": \"special-rules/arcane-configuration\",\n  \"eternal taskmaster\": \"special-rules/eternal-taskmaster\",\n  pavise: \"special-rules/pavise\",\n  \"earn your spurs\": \"special-rules/earn-your-spurs\",\n  \"dark runes\": \"special-rules/dark-runes\",\n  \"stony stare\": \"special-rules/stony-stare\",\n  \"retinue of the saints\": \"special-rules/retinue-of-the-saints\",\n  \"scintillating sorcery\": \"special-rules/scintillating-sorcery\",\n  \"warriors of the white tower\": \"special-rules/warriors-of-the-white-tower\",\n  \"master of ballistics\": \"special-rules/master-of-ballistics\",\n  \"dances of loec\": \"special-rules/dances-of-loec\",\n  skullcracker: \"special-rules/skullcracker\",\n  \"wilful beast\": \"special-rules/wilful-beast\",\n  \"slayer of dragons\": \"special-rules/slayer-of-dragons\",\n  \"cloud of dust\": \"special-rules/cloud-of-dust\",\n  \"aura of the fay\": \"special-rules/aura-of-the-fay\",\n  \"sepulchral animus\": \"special-rules/sepulchral-animus\",\n  \"largely insignificant\": \"special-rules/largely-insignificant\",\n  \"leader of the pack\": \"special-rules/leader-of-the-pack\",\n  \"witness to destiny\": \"special-rules/witness-to-destiny\",\n  \"blessings of khaine\": \"special-rules/blessings-of-khaine\",\n  \"daughters of eternity\": \"special-rules/daughters-of-eternity\",\n  \"spiked ball & chains\": \"special-rules/spiked-ball-and-chains\",\n  ambushers: \"special-rules/ambushers\",\n  \"accursed weapons\": \"special-rules/accursed-weapons\",\n  \"burning alignment\": \"special-rules/burning-alignment\",\n  \"living saints\": \"special-rules/living-saints\",\n  \"fanatical zeal\": \"special-rules/fanatical-zeal\",\n  ghostsight: \"special-rules/ghostsight\",\n  \"slashing attack\": \"special-rules/slashing-attack\",\n  \"giant attacks\": \"special-rules/giant-attacks\",\n  \"born of fire\": \"special-rules/born-of-fire\",\n  \"look-out gnoblar\": \"special-rules/look-out-gnoblar\",\n  \"two-headed dragon\": \"special-rules/two-headed-dragon\",\n  \"abyssal howl\": \"special-rules/abyssal-howl\",\n  \"deepwood coven\": \"special-rules/deepwood-coven\",\n  \"safe from harm\": \"special-rules/safe-from-harm\",\n  \"martial pride\": \"special-rules/martial-pride\",\n  \"feel no pain\": \"special-rules/feel-no-pain\",\n  \"blessed knight\": \"special-rules/blessed-knight\",\n  \"dispersed formation\": \"special-rules/dispersed-formation\",\n  \"warriors of nagarythe\": \"special-rules/warriors-of-nagarythe\",\n  \"unstoppable assault\": \"special-rules/unstoppable-assault\",\n  \"armour bane\": \"special-rules/armour-bane\",\n  \"the terrors below\": \"special-rules/the-terrors-below\",\n  \"soul-eater\": \"special-rules/soul-eater\",\n  \"chaos armour daemons of chaos\":\n    \"special-rules/chaos-armour-daemons-of-chaos\",\n  \"impervious defence\": \"special-rules/impervious-defence\",\n  \"artillery master\": \"special-rules/artillery-master\",\n  \"guardian of the sacred sites\": \"special-rules/guardian-of-the-sacred-sites\",\n  \"sons of caledor\": \"special-rules/sons-of-caledor\",\n  \"swallow whole\": \"special-rules/swallow-whole\",\n  \"slavering charge\": \"special-rules/slavering-charge\",\n  \"blessings of the horned rat\": \"special-rules/blessings-of-the-horned-rat\",\n  entrenchment: \"special-rules/entrenchment\",\n  \"mournfang charge\": \"special-rules/mournfang-charge\",\n  \"pick up and...\": \"special-rules/pick-up-and\",\n  \"soul reaper\": \"special-rules/soul-reaper\",\n  \"ark of sotek\": \"special-rules/ark-of-sotek\",\n  \"inner circle\": \"special-rules/inner-circle\",\n  \"eternal hatred\": \"special-rules/eternal-hatred\",\n  \"elven reflexes\": \"special-rules/elven-reflexes\",\n  daemonic: \"special-rules/daemonic\",\n  \"blessings of the lady\": \"special-rules/blessings-of-the-lady\",\n  \"sorcerous miasma\": \"special-rules/sorcerous-miasma\",\n  \"commander of legions\": \"special-rules/commander-of-legions\",\n  \"caged fury\": \"special-rules/caged-fury\",\n  \"armoured hide\": \"special-rules/armoured-hide\",\n  \"hellcannon misfire table\": \"special-rules/hellcannon-misfire-table\",\n  \"finest warhorses\": \"special-rules/finest-warhorses\",\n  \"from the ashes\": \"special-rules/from-the-ashes\",\n  \"holy fervour\": \"special-rules/holy-fervour\",\n  \"the wyrm slayer\": \"special-rules/the-wyrm-slayer\",\n  \"daemonic instability\": \"special-rules/daemonic-instability\",\n  \"screaming skulls\": \"special-rules/screaming-skulls\",\n  \"breath weapon\": \"special-rules/breath-weapon\",\n  \"settra does not kneel!\": \"special-rules/settra-does-not-kneel\",\n  \"hekarti's blessing\": \"special-rules/hekartis-blessing\",\n  \"tolling the bell\": \"special-rules/tolling-the-bell\",\n  bully: \"special-rules/bully\",\n  \"slithering serpents\": \"special-rules/slithering-serpents\",\n  \"blood greed\": \"special-rules/blood-greed\",\n  '\"stand back chief\"': \"special-rules/stand-back-chief\",\n  \"numbing chill\": \"special-rules/numbing-chill\",\n  \"spectral reapers\": \"special-rules/spectral-reapers\",\n  \"talismanic tattoos\": \"special-rules/talismanic-tattoos\",\n  quake: \"special-rules/quake\",\n  venerable: \"special-rules/venerable\",\n  \"blood rage\": \"special-rules/blood-rage\",\n  \"arcane backlash\": \"special-rules/arcane-backlash\",\n  \"ghoulish glamour\": \"special-rules/ghoulish-glamour\",\n  \"chariot runners\": \"special-rules/chariot-runners\",\n  \"great censer\": \"special-rules/great-censer\",\n  \"spawn of sotek\": \"special-rules/spawn-of-sotek\",\n  murderous: \"special-rules/murderous\",\n  \"daemonic locus\": \"special-rules/daemonic-locus\",\n  \"big 'uns\": \"special-rules/big-uns\",\n  \"settra the great\": \"special-rules/settra-the-great\",\n  \"chaos armour warriors of chaos\":\n    \"special-rules/chaos-armour-warriors-of-chaos\",\n  \"slow reload\": \"special-rules/slow-reload\",\n  \"wake of fire\": \"special-rules/wake-of-fire\",\n  \"tree spirit\": \"special-rules/tree-spirit\",\n  \"lance formation\": \"special-rules/lance-formation\",\n  \"symbol of might\": \"special-rules/symbol-of-might\",\n  \"skulls of the foe\": \"special-rules/skulls-of-the-foe\",\n  peasantry: \"special-rules/peasantry\",\n  \"solar engine\": \"special-rules/solar-engine\",\n  \"witch bane\": \"special-rules/witch-bane\",\n  \"sea dragon cloak\": \"special-rules/sea-dragon-cloak\",\n  \"infernal favour\": \"special-rules/infernal-favour\",\n  \"scarab prince\": \"special-rules/scarab-prince\",\n  choppas: \"special-rules/choppas\",\n  \"untutored arcanist\": \"special-rules/untutored-arcanist\",\n  \"close order\": \"special-rules/close-order\",\n  \"scrying pool\": \"special-rules/scrying-pool\",\n  backstab: \"special-rules/backstab\",\n  \"blizzard aura\": \"special-rules/blizzard-aura\",\n  \"covenant of power\": \"special-rules/covenant-of-power\",\n  \"crushing bulk\": \"special-rules/crushing-bulk\",\n  \"royal guard\": \"special-rules/royal-guard\",\n  \"ensorcelled weapons\": \"special-rules/ensorcelled-weapons\",\n  \"stone skeleton\": \"special-rules/stone-skeleton\",\n  \"bull-gors\": \"special-rules/bull-gors\",\n  \"tree whack\": \"special-rules/tree-whack\",\n  \"immovable object\": \"special-rules/immovable-object\",\n  \"stoic defenders\": \"special-rules/stoic-defenders\",\n  \"the knight's vow\": \"special-rules/the-knights-vow\",\n  \"blackshard armour\": \"special-rules/blackshard-armour\",\n  \"grinding wheels\": \"special-rules/grinding-wheels\",\n  drunken: \"special-rules/drunken\",\n  \"da boyz\": \"special-rules/da-boyz\",\n  \"daemonic alignment\": \"special-rules/daemonic-alignment\",\n  \"usirian's reaper\": \"special-rules/usirians-reaper\",\n  \"solar radiance\": \"special-rules/solar-radiance\",\n  \"thunderous charge\": \"special-rules/thunderous-charge\",\n  \"zzzzap!\": \"special-rules/zzzzap\",\n  \"gaze of the gods\": \"special-rules/gaze-of-the-gods\",\n  \"counter charge\": \"special-rules/counter-charge\",\n  \"accursed reliquary\": \"special-rules/accursed-reliquary\",\n  \"woodland ambush\": \"special-rules/woodland-ambush\",\n  \"arrows of isha\": \"special-rules/arrows-of-isha\",\n  \"steam power\": \"special-rules/steam-power\",\n  \"blasphemous tome\": \"special-rules/blasphemous-tome\",\n  \"blessings of asuryan\": \"special-rules/blessings-of-asuryan\",\n  \"foe render\": \"special-rules/foe-render\",\n  cumbersome: \"special-rules/cumbersome\",\n  \"herald of despair\": \"special-rules/herald-of-despair\",\n  \"unbound spirits\": \"special-rules/unbound-spirits\",\n  \"beam of chotec\": \"special-rules/beam-of-chotec\",\n  \"the questing vow\": \"special-rules/the-questing-vow\",\n  \"daemon of khorne\": \"special-rules/daemon-of-khorne\",\n  \"fear of elves\": \"special-rules/fear-of-elves\",\n  \"runes of protection\": \"special-rules/runes-of-protection\",\n  \"marks of chaos\": \"special-rules/marks-of-chaos\",\n  \"blazing body\": \"special-rules/blazing-body\",\n  \"abominable attacks\": \"special-rules/abominable-attacks\",\n  temperamental: \"special-rules/temperamental\",\n  \"primeval roar\": \"special-rules/primeval-roar\",\n  \"vortex of souls\": \"special-rules/vortex-of-souls\",\n  \"ignore goblin panic\": \"special-rules/ignore-goblin-panic\",\n  \"runes of warding\": \"special-rules/runes-of-warding\",\n  feed: \"special-rules/feed\",\n  hellbound: \"special-rules/hellbound\",\n  \"primal fury\": \"special-rules/primal-fury\",\n  \"settra's champion\": \"special-rules/settras-champion\",\n  \"the grail vow\": \"special-rules/the-grail-vow\",\n  detachment: \"special-rules/detachment\",\n  \"balefire brazier\": \"special-rules/balefire-brazier\",\n  \"dragon armour\": \"special-rules/dragon-armour\",\n  \"mark of chaos undivided\": \"special-rules/mark-of-chaos-undivided\",\n  \"daemon of nurgle\": \"special-rules/daemon-of-nurgle\",\n  \"immortal overseer\": \"special-rules/immortal-overseer\",\n  \"avalanche of flesh\": \"special-rules/avalanche-of-flesh\",\n  '\"fight me!\"': \"special-rules/fight-me\",\n  stampede: \"special-rules/stampede\",\n  \"warped tintinnabulation\": \"special-rules/warped-tintinnabulation\",\n  \"mark of khorne\": \"special-rules/mark-of-khorne\",\n  \"ignore panic\": \"special-rules/ignore-panic\",\n  \"two heads\": \"special-rules/two-heads\",\n  \"forming the lance\": \"special-rules/forming-the-lance\",\n  \"dragged along\": \"special-rules/dragged-along\",\n  \"arcane vassal\": \"special-rules/arcane-vassal\",\n  \"daemon of slaanesh\": \"special-rules/daemon-of-slaanesh\",\n  \"razor tusks\": \"special-rules/razor-tusks\",\n  \"arrows of asaph\": \"special-rules/arrows-of-asaph\",\n  \"stone shaper\": \"special-rules/stone-shaper\",\n  \"spectral coach\": \"special-rules/spectral-coach\",\n  \"cleaving blow\": \"special-rules/cleaving-blow\",\n  \"too horrible to die\": \"special-rules/too-horrible-to-die\",\n  aquatic: \"special-rules/aquatic\",\n  \"daemon of tzeentch\": \"special-rules/daemon-of-tzeentch\",\n  \"mark of nurgle\": \"special-rules/mark-of-nurgle\",\n  \"ithilmar armour\": \"special-rules/ithilmar-armour-ithilmar-barding\",\n  \"ithilmar barding\": \"special-rules/ithilmar-armour-ithilmar-barding\",\n  \"manoeuvring a lance\": \"special-rules/manoeuvring-a-lance\",\n  helblaster: \"special-rules/helblaster\",\n  \"the quickening storm\": \"special-rules/the-quickening-storm\",\n  slayer: \"special-rules/slayer\",\n  \"quell impetuosity\": \"special-rules/quell-impetuosity\",\n  drilled: \"special-rules/drilled\",\n  ethereal: \"special-rules/ethereal\",\n  \"ithilmar weapons\": \"special-rules/ithilmar-weapons\",\n  \"lightning strike\": \"special-rules/lightning-strike\",\n  \"dive bomb\": \"special-rules/dive-bomb\",\n  \"the lance in combat\": \"special-rules/the-lance-in-combat\",\n  \"curse of the necropolis\": \"special-rules/curse-of-the-necropolis\",\n  helstorm: \"special-rules/helstorm\",\n  \"beast handlers\": \"special-rules/beast-handlers\",\n  \"tusker charge\": \"special-rules/tusker-charge\",\n  \"mark of slaanesh\": \"special-rules/mark-of-slaanesh\",\n  \"carrion feeders\": \"special-rules/carrion-feeders\",\n  \"poisoned wind\": \"special-rules/poisoned-wind\",\n  infested: \"special-rules/infested\",\n  \"waaagh!\": \"special-rules/waaagh\",\n  \"blunting the lance\": \"special-rules/blunting-the-lance\",\n  \"bombing run\": \"special-rules/bombing-run\",\n  \"lileath's blessing\": \"special-rules/lileaths-blessing\",\n  \"dry as dust\": \"special-rules/dry-as-dust\",\n  evasive: \"special-rules/evasive\",\n  \"mark of tzeentch\": \"special-rules/mark-of-tzeentch\",\n  \"cold blooded\": \"special-rules/cold-blooded\",\n  warpaint: \"special-rules/warpaint\",\n  \"bestial fury\": \"special-rules/bestial-fury\",\n  \"extra attacks\": \"special-rules/extra-attacks\",\n  \"casualty removal\": \"special-rules/casualty-removal\",\n  deathblow: \"special-rules/deathblow\",\n  indomitable: \"special-rules/indomitable\",\n  \"scurry away\": \"special-rules/scurry-away\",\n  \"lion cloak\": \"special-rules/lion-cloak\",\n  \"drop rocks\": \"special-rules/drop-rocks\",\n  \"fast cavalry\": \"special-rules/fast-cavalry\",\n  \"dwarf crafted\": \"special-rules/dwarf-crafted\",\n  \"lance formations & skirmishers\":\n    \"special-rules/lance-formations-and-skirmishers\",\n  \"valour of ages\": \"special-rules/valour-of-ages\",\n  \"obsidian blades\": \"special-rules/obsidian-blades\",\n  \"scurrying masses\": \"special-rules/scurrying-masses\",\n  \"dark vitality\": \"special-rules/dark-vitality\",\n  khopesh: \"special-rules/khopesh\",\n  \"characters joining a lance\": \"special-rules/characters-joining-a-lance\",\n  \"necromantic undead\": \"special-rules/necromantic-undead\",\n  \"verminous valour\": \"special-rules/verminous-valour\",\n  fear: \"special-rules/fear\",\n  \"gromril armour\": \"special-rules/gromril-armour\",\n  \"nehekharan phalanx\": \"special-rules/nehekharan-phalanx\",\n  \"feigned flight\": \"special-rules/feigned-flight\",\n  \"warpstone weapons\": \"special-rules/warpstone-weapons\",\n  \"nehekharan undead\": \"special-rules/nehekharan-undead\",\n  \"the newly dead\": \"special-rules/the-newly-dead\",\n  \"gromril weapons\": \"special-rules/gromril-weapons\",\n  \"fight in extra rank\": \"special-rules/fight-in-extra-rank\",\n  \"wailing dirge\": \"special-rules/wailing-dirge\",\n  resolute: \"special-rules/resolute\",\n  \"resurrecting the fallen\": \"special-rules/resurrecting-the-fallen\",\n  \"rune lore\": \"special-rules/rune-lore\",\n  \"fire & flee\": \"special-rules/fire-and-flee\",\n  \"first charge\": \"special-rules/first-charge\",\n  \"flaming attacks\": \"special-rules/flaming-attacks\",\n  flammable: \"special-rules/flammable\",\n  fly: \"special-rules/fly\",\n  frenzy: \"special-rules/frenzy\",\n  \"furious charge\": \"special-rules/furious-charge\",\n  hatred: \"special-rules/hatred\",\n  horde: \"special-rules/horde\",\n  howdah: \"special-rules/howdah\",\n  \"ignores cover\": \"special-rules/ignores-cover\",\n  \"immune to psychology\": \"special-rules/immune-to-psychology\",\n  \"impact hits\": \"special-rules/impact-hits\",\n  impetuous: \"special-rules/impetuous\",\n  \"killing blow\": \"special-rules/killing-blow\",\n  \"large target\": \"special-rules/large-target\",\n  levies: \"special-rules/levies\",\n  loner: \"special-rules/loner\",\n  \"magical attacks\": \"special-rules/magical-attacks\",\n  \"magic resistance\": \"special-rules/magic-resistance\",\n  mercenaries: \"special-rules/mercenaries\",\n  \"monster handlers\": \"special-rules/monster-handlers\",\n  \"monster slayer\": \"special-rules/monster-slayer\",\n  \"motley crew\": \"special-rules/motley-crew\",\n  \"move & shoot\": \"special-rules/move-and-shoot\",\n  \"move or shoot\": \"special-rules/move-or-shoot\",\n  \"move through cover\": \"special-rules/move-through-cover\",\n  \"multiple shots\": \"special-rules/multiple-shots\",\n  \"multiple wounds\": \"special-rules/multiple-wounds\",\n  \"open order\": \"special-rules/open-order\",\n  \"poisoned attacks\": \"special-rules/poisoned-attacks\",\n  ponderous: \"special-rules/ponderous\",\n  \"quick shot\": \"special-rules/quick-shot\",\n  \"rallying cry\": \"special-rules/rallying-cry\",\n  \"random attacks\": \"special-rules/random-attacks\",\n  \"random movement\": \"special-rules/random-movement\",\n  regeneration: \"special-rules/regeneration\",\n  \"regimental unit\": \"special-rules/regimental-unit\",\n  \"requires two hands\": \"special-rules/requires-two-hands\",\n  \"reserve move\": \"special-rules/reserve-move\",\n  scouts: \"special-rules/scouts\",\n  shieldwall: \"special-rules/shieldwall\",\n  skirmishers: \"special-rules/skirmishers\",\n  \"stomp attacks\": \"special-rules/stomp-attacks\",\n  \"strike first\": \"special-rules/strike-first\",\n  \"strike last\": \"special-rules/strike-last\",\n  stubborn: \"special-rules/stubborn\",\n  stupidity: \"special-rules/stupidity\",\n  swiftstride: \"special-rules/swiftstride\",\n  terror: \"special-rules/terror\",\n  \"timmm-berrr!\": \"special-rules/timmm-berrr\",\n  unbreakable: \"special-rules/unbreakable\",\n  unstable: \"special-rules/unstable\",\n  vanguard: \"special-rules/vanguard\",\n  veteran: \"special-rules/veteran\",\n  \"volley fire\": \"special-rules/volley-fire\",\n  warband: \"special-rules/warband\",\n  \"warp-spawned\": \"special-rules/warp-spawned\",\n  \"great throwing spears\": \"weapons-of-war/great-throwing-spears\",\n  \"dragon fire\": \"weapons-of-war/dragon-fire\",\n  \"steam cannonade\": \"weapons-of-war/steam-cannonade\",\n  \"spear of loec\": \"weapons-of-war/spear-of-loec\",\n  braystaff: \"weapons-of-war/braystaff\",\n  blunderbuss: \"weapons-of-war/blunderbuss\",\n  \"blessed triptych\": \"weapons-of-war/blessed-triptych\",\n  \"ritual blade\": \"weapons-of-war/ritual-blade\",\n  \"swarming mass\": \"weapons-of-war/swarming-mass\",\n  \"fanatic ball & chain\": \"weapons-of-war/fanatic-ball-and-chain\",\n  \"great hammer\": \"weapons-of-war/great-hammer\",\n  \"steam cannon\": \"weapons-of-war/steam-cannon\",\n  \"dread halberd\": \"weapons-of-war/dread-halberd\",\n  blowpipe: \"weapons-of-war/blowpipe\",\n  bloodflail: \"weapons-of-war/bloodflail\",\n  \"warplock musket\": \"weapons-of-war/warplock-musket\",\n  \"dark fire of chaos\": \"weapons-of-war/dark-fire-of-chaos\",\n  \"spectral scythe\": \"weapons-of-war/spectral-scythe-black-coach\",\n  \"flaming breath ogre kingdoms\": \"weapons-of-war/flaming-breath-ogre-kingdoms\",\n  \"huge gob\": \"weapons-of-war/huge-gob\",\n  \"filth-encrusted claws\": \"weapons-of-war/filth-encrusted-claws\",\n  \"brace of drakefire pistols\": \"weapons-of-war/brace-of-drakefire-pistols\",\n  polearm: \"weapons-of-war/polearm\",\n  \"warplock pistol\": \"weapons-of-war/warplock-pistol\",\n  \"steam gun empire\": \"weapons-of-war/steam-gun-empire\",\n  \"slythey tongue\": \"weapons-of-war/slythey-tongue\",\n  \"trickster's blades\": \"weapons-of-war/tricksters-blades\",\n  bombard: \"weapons-of-war/bombard\",\n  greatbow: \"weapons-of-war/greatbow\",\n  \"handmaiden's spear\": \"weapons-of-war/handmaidens-spear\",\n  \"great axe\": \"weapons-of-war/great-axe\",\n  \"trampling hooves\": \"weapons-of-war/trampling-hooves\",\n  \"fumes of contagion\": \"weapons-of-war/fumes-of-contagion\",\n  \"fiery breath lizardmen\": \"weapons-of-war/fiery-breath-lizardmen\",\n  \"har ganeth greatsword\": \"weapons-of-war/har-ganeth-greatsword\",\n  \"horns of stone\": \"weapons-of-war/horns-of-stone\",\n  \"eagle-eye bolt thrower\": \"weapons-of-war/eagle-eye-bolt-thrower\",\n  \"burning braziers\": \"weapons-of-war/burning-braziers\",\n  \"troll vomit\": \"weapons-of-war/troll-vomit\",\n  drakegun: \"weapons-of-war/drakegun\",\n  \"goring horns\": \"weapons-of-war/goring-horns\",\n  \"flaming breath warriors of chaos\":\n    \"weapons-of-war/flaming-breath-warriors-of-chaos\",\n  \"lash of khorne\": \"weapons-of-war/lash-of-khorne\",\n  \"petrifying gaze\": \"weapons-of-war/petrifying-gaze\",\n  \"razor barbs\": \"weapons-of-war/razor-barbs\",\n  \"serrated maw\": \"weapons-of-war/serrated-maw\",\n  \"writhing tail\": \"weapons-of-war/writhing-tail\",\n  \"lash & buckler\": \"weapons-of-war/lash-and-buckler\",\n  \"plague censer\": \"weapons-of-war/plague-censer\",\n  \"oaken fists\": \"weapons-of-war/oaken-fists\",\n  strangleroots: \"weapons-of-war/strangleroots\",\n  \"ravager harpoon\": \"weapons-of-war/ravager-harpoon\",\n  \"doom-flayer\": \"weapons-of-war/doom-flayer\",\n  \"fiend tail\": \"weapons-of-war/fiend-tail\",\n  \"hand weapon\": \"weapons-of-war/hand-weapon\",\n  \"great tusks\": \"weapons-of-war/great-tusks\",\n  \"bow of avelorn\": \"weapons-of-war/bow-of-avelorn\",\n  \"pestilential breath\": \"weapons-of-war/pestilential-breath\",\n  \"brass bound hooves\": \"weapons-of-war/brass-bound-hooves\",\n  \"breath of desiccation\": \"weapons-of-war/breath-of-desiccation\",\n  \"helblaster volley gun\": \"weapons-of-war/helblaster-volley-gun\",\n  \"acidic vomit\": \"weapons-of-war/acidic-vomit\",\n  \"fireleech bolas\": \"weapons-of-war/fireleech-bolas\",\n  \"mace tail\": \"weapons-of-war/mace-tail\",\n  \"defensive stakes\": \"weapons-of-war/defensive-stakes\",\n  \"cinderblast bombs\": \"weapons-of-war/cinderblast-bombs\",\n  \"wicked claws\": \"weapons-of-war/wicked-claws\",\n  \"ceremonial halberd\": \"weapons-of-war/ceremonial-halberd\",\n  \"envenomed sting\": \"weapons-of-war/envenomed-sting\",\n  \"filth-encrusted talons\": \"weapons-of-war/filth-encrusted-talons\",\n  \"two hand weapons\": \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"additional hand weapon\":\n    \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"poisoned wind mortar\": \"weapons-of-war/poisoned-wind-mortar\",\n  \"chill breath\": \"weapons-of-war/chill-breath\",\n  \"slashing talons\": \"weapons-of-war/slashing-talons\",\n  \"noxious breath\": \"weapons-of-war/noxious-breath\",\n  \"venomous tail\": \"weapons-of-war/venomous-tail\",\n  doomfire: \"weapons-of-war/doomfire\",\n  \"cannon of khorne\": \"weapons-of-war/cannon-of-khorne\",\n  \"sorcerous exhalation\": \"weapons-of-war/sorcerous-exhalation\",\n  \"hurl attack\": \"weapons-of-war/hurl-attack\",\n  \"mighty antlers\": \"weapons-of-war/mighty-antlers\",\n  \"field trebuchet\": \"weapons-of-war/field-trebuchet\",\n  \"helstorm rocket battery\": \"weapons-of-war/helstorm-rocket-battery\",\n  \"trollhammer torpedo\": \"weapons-of-war/trollhammer-torpedo\",\n  \"blasting charges\": \"weapons-of-war/blasting-charges\",\n  \"venom surge\": \"weapons-of-war/venom-surge\",\n  \"chracian great blade\": \"weapons-of-war/chracian-great-blade\",\n  \"great horns\": \"weapons-of-war/great-horns\",\n  bilesword: \"weapons-of-war/bilesword\",\n  flail: \"weapons-of-war/flail\",\n  \"fiery roar\": \"weapons-of-war/fiery-roar\",\n  \"serrated maws\": \"weapons-of-war/serrated-maws\",\n  \"demolition rockets\": \"weapons-of-war/demolition-rockets\",\n  \"asrai spear\": \"weapons-of-war/asrai-spear\",\n  \"cleaver-limbs\": \"weapons-of-war/cleaver-limbs\",\n  \"rancid maw\": \"weapons-of-war/rancid-maw\",\n  \"ratling gun\": \"weapons-of-war/ratling-gun\",\n  \"leadbelcher gun\": \"weapons-of-war/leadbelcher-gun\",\n  \"grenade launching blunderbuss\":\n    \"weapons-of-war/grenade-launching-blunderbuss\",\n  \"great weapon\": \"weapons-of-war/great-weapon\",\n  \"grimfrost weapon\": \"weapons-of-war/grimfrost-weapon\",\n  \"ranger's glaive\": \"weapons-of-war/rangers-glaive\",\n  plagueflail: \"weapons-of-war/plagueflail\",\n  \"fiery breath dark elves\": \"weapons-of-war/fiery-breath-dark-elves\",\n  \"spidersilk lobber\": \"weapons-of-war/spidersilk-lobber\",\n  \"giant bow\": \"weapons-of-war/giant-bow\",\n  \"steam drill\": \"weapons-of-war/steam-drill\",\n  \"poisonous tail\": \"weapons-of-war/poisonous-tail\",\n  \"hochland long rifle\": \"weapons-of-war/hochland-long-rifle\",\n  \"infernal incendiaries\": \"weapons-of-war/infernal-incendiaries\",\n  \"warpfire thrower\": \"weapons-of-war/warpfire-thrower\",\n  \"decapitating claws\": \"weapons-of-war/decapitating-claws\",\n  \"sword of hoeth\": \"weapons-of-war/sword-of-hoeth\",\n  \"colossal fang-filled gob\": \"weapons-of-war/colossal-fang-filled-gob\",\n  \"writhing tentacles daemons of chaos\":\n    \"weapons-of-war/writhing-tentacles-daemons-of-chaos\",\n  \"cavernous maw\": \"weapons-of-war/cavernous-maw\",\n  \"giant blowpipes\": \"weapons-of-war/giant-blowpipes\",\n  \"dreadquake mortar\": \"weapons-of-war/dreadquake-mortar\",\n  halberd: \"weapons-of-war/halberd\",\n  \"monstrous tusks\": \"weapons-of-war/monstrous-tusks\",\n  \"warp grinder\": \"weapons-of-war/warp-grinder\",\n  \"blackbriar javelin\": \"weapons-of-war/blackbriar-javelin\",\n  \"pigeon bombs\": \"weapons-of-war/pigeon-bombs\",\n  \"steam gun dwarfs\": \"weapons-of-war/steam-gun-dwarfs\",\n  \"paired great khopeshes\": \"weapons-of-war/paired-great-khopeshes\",\n  \"giant's club\": \"weapons-of-war/giants-club\",\n  \"doom diver\": \"weapons-of-war/doom-diver\",\n  \"morning star\": \"weapons-of-war/morning-star\",\n  \"cannon of the sky-titans\": \"weapons-of-war/cannon-of-the-sky-titans\",\n  \"warplock jezzail\": \"weapons-of-war/warplock-jezzail\",\n  \"hunting spear\": \"weapons-of-war/hunting-spear\",\n  \"cleaing blades\": \"weapons-of-war/cleaing-blades\",\n  \"blood of hashut\": \"weapons-of-war/blood-of-hashut\",\n  \"plague proboscis\": \"weapons-of-war/plague-proboscis\",\n  \"writhing tentacles dark elves\":\n    \"weapons-of-war/writhing-tentacles-dark-elves\",\n  \"brimstone gun\": \"weapons-of-war/brimstone-gun\",\n  \"thunderous bludgeon\": \"weapons-of-war/thunderous-bludgeon\",\n  \"darkforged weapon\": \"weapons-of-war/darkforged-weapon\",\n  clattergun: \"weapons-of-war/clattergun\",\n  \"venom sting\": \"weapons-of-war/venom-sting\",\n  \"venomous talons\": \"weapons-of-war/venomous-talons\",\n  \"poisoned wind globes\": \"weapons-of-war/poisoned-wind-globes\",\n  whip: \"weapons-of-war/whip\",\n  \"scraplauncher catapult\": \"weapons-of-war/scraplauncher-catapult\",\n  \"decapitating strike\": \"weapons-of-war/decapitating-strike\",\n  \"soporific breath\": \"weapons-of-war/soporific-breath\",\n  chaintrap: \"weapons-of-war/chaintrap\",\n  \"asrai longbow\": \"weapons-of-war/asrai-longbow\",\n  fireglaive: \"weapons-of-war/fireglaive\",\n  \"impaling claws\": \"weapons-of-war/impaling-claws\",\n  \"things-catcher\": \"weapons-of-war/things-catcher\",\n  \"screaming skull catapult\": \"weapons-of-war/screaming-skull-catapult\",\n  \"venom spray\": \"weapons-of-war/venom-spray\",\n  \"tzeentchian wand\": \"weapons-of-war/tzeentchian-wand\",\n  \"blood vulture\": \"weapons-of-war/blood-vulture\",\n  \"hailshot blunderbuss\": \"weapons-of-war/hailshot-blunderbuss\",\n  lance: \"weapons-of-war/lance\",\n  \"enchanted arrows\": \"weapons-of-war/enchanted-arrows\",\n  \"billowing death\": \"weapons-of-war/billowing-death\",\n  \"cavalry spear\": \"weapons-of-war/cavalry-spear\",\n  \"warpstone claws\": \"weapons-of-war/warpstone-claws\",\n  \"distensible jaw\": \"weapons-of-war/distensible-jaw\",\n  warpflame: \"weapons-of-war/warpflame\",\n  \"naptha bombs\": \"weapons-of-war/naptha-bombs\",\n  \"arcane bodkins\": \"weapons-of-war/arcane-bodkins\",\n  \"hagbane tips\": \"weapons-of-war/hagbane-tips\",\n  \"warp lightning cannon\": \"weapons-of-war/warp-lightning-cannon\",\n  \"ensorcelled weapon\": \"weapons-of-war/ensorcelled-weapon\",\n  \"harpoon launcher\": \"weapons-of-war/harpoon-launcher\",\n  \"throwing spear\": \"weapons-of-war/throwing-spear\",\n  \"moonfire shot\": \"weapons-of-war/moonfire-shot\",\n  ironfist: \"weapons-of-war/ironfist\",\n  \"plagueclaw catapult\": \"weapons-of-war/plagueclaw-catapult\",\n  \"thrusting spear\": \"weapons-of-war/thrusting-spear\",\n  \"daemonic talons\": \"weapons-of-war/daemonic-talons\",\n  \"iron claw\": \"weapons-of-war/iron-claw\",\n  \"ogre pistol\": \"weapons-of-war/ogre-pistol\",\n  \"swiftshiver shards\": \"weapons-of-war/swiftshiver-shards\",\n  \"brace of ogre pistols\": \"weapons-of-war/brace-of-ogre-pistols\",\n  \"harvester cannon\": \"weapons-of-war/harvester-cannon\",\n  \"trueflight arrows\": \"weapons-of-war/trueflight-arrows\",\n  \"baleful torrent\": \"weapons-of-war/baleful-torrent\",\n  longbow: \"weapons-of-war/longbow\",\n  \"warp gaze\": \"weapons-of-war/warp-gaze\",\n  hellblade: \"weapons-of-war/hellblade\",\n  shortbow: \"weapons-of-war/shortbow\",\n  warbow: \"weapons-of-war/warbow\",\n  plaguesword: \"weapons-of-war/plaguesword\",\n  \"death's heads\": \"weapons-of-war/deaths-heads\",\n  handgun: \"weapons-of-war/handgun\",\n  \"piercing claws\": \"weapons-of-war/piercing-claws\",\n  \"flames of tzeentch\": \"weapons-of-war/flames-of-tzeentch\",\n  pistol: \"weapons-of-war/pistol\",\n  \"brace of pistols\": \"weapons-of-war/brace-of-pistols\",\n  \"lamprey's bite\": \"weapons-of-war/lampreys-bite\",\n  \"repeater handgun\": \"weapons-of-war/repeater-handgun\",\n  \"repeater pistol\": \"weapons-of-war/repeater-pistol\",\n  crossbow: \"weapons-of-war/crossbow\",\n  \"repeater crossbow\": \"weapons-of-war/repeater-crossbow\",\n  \"repeater handbow\": \"weapons-of-war/repeater-handbow\",\n  \"brace of repeater handbows\": \"weapons-of-war/brace-of-repeater-handbows\",\n  \"throwing weapons\": \"weapons-of-war/throwing-weapons\",\n  javelin: \"weapons-of-war/javelin\",\n  sling: \"weapons-of-war/sling\",\n  \"throwing axe\": \"weapons-of-war/throwing-axe\",\n  \"light armour\": \"weapons-of-war/light-armour\",\n  \"heavy armour\": \"weapons-of-war/heavy-armour\",\n  \"full plate armour\": \"weapons-of-war/full-plate-armour\",\n  shield: \"weapons-of-war/shield\",\n  barding: \"weapons-of-war/barding\",\n  \"lore of undeath\": \"the-lores-of-magic/lore-of-undeath\",\n  \"lore of the horned rat\": \"the-lores-of-magic/lore-of-the-horned-rat\",\n  \"lore of the great maw\": \"the-lores-of-magic/lore-of-the-great-maw\",\n  \"lore of lustria\": \"the-lores-of-magic/lore-of-lustria\",\n  \"lore of naggaroth\": \"the-lores-of-magic/lore-of-naggaroth\",\n  \"lore of daemons\": \"the-lores-of-magic/lore-of-daemons\",\n  \"lore of hashut\": \"the-lores-of-magic/lore-of-hashut\",\n  \"lore of saphery\": \"the-lores-of-magic/lore-of-saphery\",\n  \"lore of athel loren\": \"the-lores-of-magic/lore-of-athel-loren\",\n  \"lore of the lady\": \"the-lores-of-magic/lore-of-the-lady\",\n  \"lore of nehekhara\": \"the-lores-of-magic/lore-of-nehekhara\",\n  \"lore of chaos\": \"the-lores-of-magic/lore-of-chaos\",\n  \"lore of gork\": \"the-lores-of-magic/lore-of-gork\",\n  \"lore of beasts\": \"the-lores-of-magic/lore-of-beasts\",\n  \"lore of mork\": \"the-lores-of-magic/lore-of-mork\",\n  \"battle magic\": \"the-lores-of-magic/battle-magic\",\n  daemonology: \"the-lores-of-magic/daemonology\",\n  \"dark magic\": \"the-lores-of-magic/dark-magic\",\n  elementalism: \"the-lores-of-magic/elementalism\",\n  \"high magic\": \"the-lores-of-magic/high-magic\",\n  illusion: \"the-lores-of-magic/illusion\",\n  necromancy: \"the-lores-of-magic/necromancy\",\n  \"waaagh! magic\": \"the-lores-of-magic/waaagh-magic\",\n  \"'eadbuttin' 'at\": \"magic-item/eadbuttin-at\",\n  \"a befuddlement of mischiefs\": \"magic-item/a-befuddlement-of-mischiefs\",\n  \"a blight of terrors\": \"magic-item/a-blight-of-terrors\",\n  \"a lamentation of despairs\": \"magic-item/a-lamentation-of-despairs\",\n  \"a murder of spites\": \"magic-item/a-murder-of-spites\",\n  \"a muster of malevolents\": \"magic-item/a-muster-of-malevolents\",\n  \"a resplendence of luminescents\": \"magic-item/a-resplendence-of-luminescents\",\n  \"acid ichor\": \"magic-item/acid-ichor\",\n  \"æther blade\": \"magic-item/aether-blade\",\n  \"allure of slaanesh\": \"magic-item/allure-of-slaanesh\",\n  \"amulet of the serpent\": \"magic-item/amulet-of-the-serpent\",\n  \"an annoyance of netlings\": \"magic-item/an-annoyance-of-netlings\",\n  \"annulian crystal\": \"magic-item/annulian-crystal\",\n  \"anointed armour\": \"magic-item/anointed-armour\",\n  \"anointed of asuryan\": \"magic-item/anointed-of-asuryan\",\n  \"antlers of the great hunt\": \"magic-item/antlers-of-the-great-hunt\",\n  \"arcane familiar\": \"magic-item/arcane-familiar\",\n  \"armour of bazherak the cruel\": \"magic-item/armour-of-bazherak-the-cruel\",\n  \"armour of caledor\": \"magic-item/armour-of-caledor\",\n  \"armour of destiny\": \"magic-item/armour-of-destiny\",\n  \"armour of fortune\": \"magic-item/armour-of-fortune\",\n  \"armour of khorne\": \"magic-item/armour-of-khorne\",\n  \"armour of meteoric iron\": \"magic-item/armour-of-meteoric-iron\",\n  \"armour of mork\": \"magic-item/armour-of-mork\",\n  \"armour of silvered steel\": \"magic-item/armour-of-silvered-steel\",\n  \"armour of tarnus\": \"magic-item/armour-of-tarnus\",\n  \"armour of the ages\": \"magic-item/armour-of-the-ages\",\n  \"armour of the damned\": \"magic-item/armour-of-the-damned\",\n  \"ashen banner\": \"magic-item/ashen-banner\",\n  \"asyendi's bane\": \"magic-item/asyendis-bane\",\n  \"aura of pain\": \"magic-item/aura-of-pain\",\n  \"aura of quetzl\": \"magic-item/aura-of-quetzl\",\n  \"axe of khorne\": \"magic-item/axe-of-khorne\",\n  \"axe of men\": \"magic-item/axe-of-men\",\n  \"banner of acquiescence\": \"magic-item/banner-of-acquiescence\",\n  \"banner of arcane protection\": \"magic-item/banner-of-arcane-protection\",\n  \"banner of châlons\": \"magic-item/banner-of-chalons\",\n  \"banner of change\": \"magic-item/banner-of-change\",\n  \"banner of discord\": \"magic-item/banner-of-discord\",\n  \"banner of duty\": \"magic-item/banner-of-duty\",\n  \"banner of ellyrion\": \"magic-item/banner-of-ellyrion\",\n  \"banner of har ganeth\": \"magic-item/banner-of-har-ganeth\",\n  \"banner of honourable warfare\": \"magic-item/banner-of-honourable-warfare\",\n  \"banner of iron resolve\": \"magic-item/banner-of-iron-resolve\",\n  \"banner of midsummer's eve\": \"magic-item/banner-of-midsummers-eve\",\n  \"banner of nagarythe\": \"magic-item/banner-of-nagarythe\",\n  \"banner of outrage\": \"magic-item/banner-of-outrage\",\n  \"banner of rage\": \"magic-item/banner-of-rage\",\n  \"banner of the barrows\": \"magic-item/banner-of-the-barrows\",\n  \"banner of the desert winds\": \"magic-item/banner-of-the-desert-winds\",\n  \"banner of the eternal queen\": \"magic-item/banner-of-the-eternal-queen\",\n  \"banner of the gods\": \"magic-item/banner-of-the-gods\",\n  \"banner of the hunter king\": \"magic-item/banner-of-the-hunter-king\",\n  \"banner of the lady's grace\": \"magic-item/banner-of-the-ladys-grace\",\n  \"banner of the wildwood\": \"magic-item/banner-of-the-wildwood\",\n  \"banner of the zealous knight\": \"magic-item/banner-of-the-zealous-knight\",\n  \"banner of unholy victory\": \"magic-item/banner-of-unholy-victory\",\n  \"banner of verminous scurrying\": \"magic-item/banner-of-verminous-scurrying\",\n  \"battle banner\": \"magic-item/battle-banner\",\n  \"battleaxe of the last big waaagh!\":\n    \"magic-item/battleaxe-of-the-last-big-waaagh\",\n  beastkiller: \"magic-item/beastkiller\",\n  \"becalming cogitation\": \"magic-item/becalming-cogitation\",\n  \"bedazzling helm\": \"magic-item/bedazzling-helm\",\n  beguile: \"magic-item/beguile\",\n  \"berserker blade\": \"magic-item/berserker-blade\",\n  \"big boss 'at\": \"magic-item/big-boss-at\",\n  \"biting blade\": \"magic-item/biting-blade\",\n  \"black dragon egg\": \"magic-item/black-dragon-egg\",\n  \"black hammer of hashut\": \"magic-item/black-hammer-of-hashut\",\n  \"black staff\": \"magic-item/black-staff\",\n  \"blade of antarhak\": \"magic-item/blade-of-antarhak\",\n  \"blade of nurglitch\": \"magic-item/blade-of-nurglitch\",\n  \"blade of revered tzunki\": \"magic-item/blade-of-revered-tzunki\",\n  \"blades of loec\": \"magic-item/blades-of-loec\",\n  \"blasted standard\": \"magic-item/blasted-standard\",\n  \"blood armour\": \"magic-item/blood-armour\",\n  \"blood drinker\": \"magic-item/blood-drinker\",\n  \"blood of caledor\": \"magic-item/blood-of-caledor\",\n  bloodcleaver: \"magic-item/bloodcleaver\",\n  \"book of ashur\": \"magic-item/book-of-ashur\",\n  \"bow of loren\": \"magic-item/bow-of-loren\",\n  \"brass orb\": \"magic-item/brass-orb\",\n  \"brazen collar\": \"magic-item/brazen-collar\",\n  \"breath of hashut\": \"magic-item/breath-of-hashut\",\n  \"bull standard\": \"magic-item/bull-standard\",\n  \"burning blade\": \"magic-item/burning-blade\",\n  \"buzgob's knobbly staff\": \"magic-item/buzgobs-knobbly-staff\",\n  \"cannibal totem\": \"magic-item/cannibal-totem\",\n  \"cathayan jet pendant\": \"magic-item/cathayan-jet-pendant\",\n  \"cautious shield\": \"magic-item/cautious-shield\",\n  \"chalice of brionne\": \"magic-item/chalice-of-brionne\",\n  \"chaos runesword\": \"magic-item/chaos-runesword\",\n  \"charmed shield\": \"magic-item/charmed-shield\",\n  \"chracian hunter\": \"magic-item/chracian-hunter\",\n  \"cloak of feathers\": \"magic-item/cloak-of-feathers\",\n  \"cloak of mist & shadows\": \"magic-item/cloak-of-mist-and-shadows\",\n  \"cloak of the dunes\": \"magic-item/cloak-of-the-dunes\",\n  \"cold-blooded banner\": \"magic-item/cold-blooded-banner\",\n  \"collar of khorne\": \"magic-item/collar-of-khorne\",\n  \"collar of shapesh\": \"magic-item/collar-of-shapesh\",\n  \"conqueror's tapestry\": \"magic-item/conquerors-tapestry\",\n  \"crimson armour of dargan\": \"magic-item/crimson-armour-of-dargan\",\n  \"crook & flail of radiance\": \"magic-item/crook-and-flail-of-radiance\",\n  \"crown of everlasting conquest\": \"magic-item/crown-of-everlasting-conquest\",\n  \"crown of horns\": \"magic-item/crown-of-horns\",\n  \"crown of kings\": \"magic-item/crown-of-kings\",\n  \"crown of the damned\": \"magic-item/crown-of-the-damned\",\n  \"crusader's clarion\": \"magic-item/crusaders-clarion\",\n  \"crusader's lance\": \"magic-item/crusaders-lance\",\n  \"crusader's tapestry\": \"magic-item/crusaders-tapestry\",\n  \"cube of darkness\": \"magic-item/cube-of-darkness\",\n  \"cupped hands of the old ones\": \"magic-item/cupped-hands-of-the-old-ones\",\n  \"curse of the revenant\": \"magic-item/curse-of-the-revenant\",\n  \"curse-weaver wand\": \"magic-item/curse-weaver-wand\",\n  \"da banner of butchery\": \"magic-item/da-banner-of-butchery\",\n  \"da choppiest choppa\": \"magic-item/da-choppiest-choppa\",\n  \"daemon flask\": \"magic-item/daemon-flask\",\n  \"daemon-flesh\": \"magic-item/daemon-flesh\",\n  \"daemon-slayer scars\": \"magic-item/daemon-slayer-scars\",\n  \"daemonic familiar\": \"magic-item/daemonic-familiar\",\n  \"daemonic robes\": \"magic-item/daemonic-robes\",\n  daemonsword: \"magic-item/daemonsword\",\n  \"dagger of malice\": \"magic-item/dagger-of-malice\",\n  \"dark acolyte\": \"magic-item/dark-acolyte\",\n  \"dark heart\": \"magic-item/dark-heart\",\n  \"dark majesty\": \"magic-item/dark-majesty\",\n  \"dark maul\": \"magic-item/dark-maul\",\n  dawnstone: \"magic-item/dawnstone\",\n  \"death globe\": \"magic-item/death-globe\",\n  \"death mask of kharnutt\": \"magic-item/death-mask-of-kharnutt\",\n  deathcheater: \"magic-item/deathcheater\",\n  \"deepwood sphere\": \"magic-item/deepwood-sphere\",\n  \"destroyer of eternities\": \"magic-item/destroyer-of-eternities\",\n  \"diabolic splendour\": \"magic-item/diabolic-splendour\",\n  \"diadem of power\": \"magic-item/diadem-of-power\",\n  \"dispel scroll\": \"magic-item/dispel-scroll\",\n  \"doom totem\": \"magic-item/doom-totem\",\n  \"dragon bow\": \"magic-item/dragon-bow\",\n  \"dragon helm\": \"magic-item/dragon-helm\",\n  \"dragon slaying sword\": \"magic-item/dragon-slaying-sword\",\n  \"dragonhide banner\": \"magic-item/dragonhide-banner\",\n  \"dragonhide cloak\": \"magic-item/dragonhide-cloak\",\n  \"drakenhof banner\": \"magic-item/drakenhof-banner\",\n  dreadlance: \"magic-item/dreadlance\",\n  \"duellist's blades\": \"magic-item/duellists-blades\",\n  \"dwarf hide banner\": \"magic-item/dwarf-hide-banner\",\n  \"earthing rod\": \"magic-item/earthing-rod\",\n  \"enchanted shield\": \"magic-item/enchanted-shield\",\n  \"enchanting aura\": \"magic-item/enchanting-aura\",\n  \"enkhil's kanopi\": \"magic-item/enkhils-kanopi\",\n  \"enrapturing gaze\": \"magic-item/enrapturing-gaze\",\n  \"errantry banner\": \"magic-item/errantry-banner\",\n  \"executioner's axe\": \"magic-item/executioners-axe\",\n  \"extra arm\": \"magic-item/extra-arm\",\n  \"falcon-horn of fredemund\": \"magic-item/falcon-horn-of-fredemund\",\n  \"favour of the gods\": \"magic-item/favour-of-the-gods\",\n  \"feedback scroll\": \"magic-item/feedback-scroll\",\n  \"filth mace\": \"magic-item/filth-mace\",\n  \"fistful of laurels\": \"magic-item/fistful-of-laurels\",\n  \"flail of skulls\": \"magic-item/flail-of-skulls\",\n  \"flamestrike wand\": \"magic-item/flamestrike-wand\",\n  \"flying carpet\": \"magic-item/flying-carpet\",\n  \"flying horror\": \"magic-item/flying-horror\",\n  \"focus familiar\": \"magic-item/focus-familiar\",\n  \"foe bane\": \"magic-item/foe-bane\",\n  foebreaker: \"magic-item/foebreaker\",\n  \"frontier axe\": \"magic-item/frontier-axe\",\n  frostblade: \"magic-item/frostblade\",\n  \"fungus wine\": \"magic-item/fungus-wine\",\n  \"gauntlet of the duel\": \"magic-item/gauntlet-of-the-duel\",\n  \"giant blade\": \"magic-item/giant-blade\",\n  giantbreaker: \"magic-item/giantbreaker\",\n  \"gilded cuirass\": \"magic-item/gilded-cuirass\",\n  glamourweave: \"magic-item/glamourweave\",\n  \"glittering scales\": \"magic-item/glittering-scales\",\n  \"glittering wotnots\": \"magic-item/glittering-wotnots\",\n  \"glowy green amulet\": \"magic-item/glowy-green-amulet\",\n  \"glyph necklace\": \"magic-item/glyph-necklace\",\n  \"gnarled hide\": \"magic-item/gnarled-hide\",\n  \"gouge-tusks\": \"magic-item/gouge-tusks\",\n  \"grail pendant\": \"magic-item/grail-pendant\",\n  \"grand banner of superiority\": \"magic-item/grand-banner-of-superiority\",\n  \"great standard of sundering\": \"magic-item/great-standard-of-sundering\",\n  \"griffon standard\": \"magic-item/griffon-standard\",\n  \"gromril great helm\": \"magic-item/gromril-great-helm\",\n  \"grudge rune\": \"magic-item/grudge-rune\",\n  \"grut's sickle\": \"magic-item/gruts-sickle\",\n  \"guff's windy banner\": \"magic-item/guffs-windy-banner\",\n  \"gut maw\": \"magic-item/gut-maw\",\n  \"hagtree fetish\": \"magic-item/hagtree-fetish\",\n  \"hail of doom arrow\": \"magic-item/hail-of-doom-arrow\",\n  \"halfling cookbook\": \"magic-item/halfling-cookbook\",\n  \"hand of dust\": \"magic-item/hand-of-dust\",\n  \"harrowing scrutiny\": \"magic-item/harrowing-scrutiny\",\n  \"headsman's axe\": \"magic-item/headsmans-axe\",\n  \"healing potion\": \"magic-item/healing-potion\",\n  \"heart of the wilds\": \"magic-item/heart-of-the-wilds\",\n  \"heartwood lance\": \"magic-item/heartwood-lance\",\n  hellheart: \"magic-item/hellheart\",\n  hellshard: \"magic-item/hellshard\",\n  \"helm of commandment\": \"magic-item/helm-of-commandment\",\n  \"helm of many eyes\": \"magic-item/helm-of-many-eyes\",\n  \"helm of the hunt\": \"magic-item/helm-of-the-hunt\",\n  \"hide of the cold ones\": \"magic-item/hide-of-the-cold-ones\",\n  \"hieratic jar\": \"magic-item/hieratic-jar\",\n  \"higher state of mind\": \"magic-item/higher-state-of-mind\",\n  \"horn of the first beast\": \"magic-item/horn-of-the-first-beast\",\n  \"horned one\": \"magic-item/horned-one\",\n  \"hunter's spear\": \"magic-item/hunters-spear\",\n  \"hydra's tooth\": \"magic-item/hydras-tooth\",\n  \"icon of endless war\": \"magic-item/icon-of-endless-war\",\n  \"icon of eternal virulence\": \"magic-item/icon-of-eternal-virulence\",\n  \"icon of rakaph\": \"magic-item/icon-of-rakaph\",\n  \"icon of rulership\": \"magic-item/icon-of-rulership\",\n  \"icon of sorcery\": \"magic-item/icon-of-sorcery\",\n  \"icon of the sacred eye\": \"magic-item/icon-of-the-sacred-eye\",\n  \"idol of mork\": \"magic-item/idol-of-mork\",\n  \"imperial banner\": \"magic-item/imperial-banner\",\n  \"infernal enrapturess\": \"magic-item/infernal-enrapturess\",\n  \"infernal puppet\": \"magic-item/infernal-puppet\",\n  \"iridescent corona\": \"magic-item/iridescent-corona\",\n  \"ironspike shield\": \"magic-item/ironspike-shield\",\n  \"itxi grub\": \"magic-item/itxi-grub\",\n  \"jade amulet\": \"magic-item/jade-amulet\",\n  \"jade lion\": \"magic-item/jade-lion\",\n  \"jagged dagger\": \"magic-item/jagged-dagger\",\n  \"jaguar standard\": \"magic-item/jaguar-standard\",\n  kineater: \"magic-item/kineater\",\n  \"laurels of victory\": \"magic-item/laurels-of-victory\",\n  lifetaker: \"magic-item/lifetaker\",\n  \"lion standard\": \"magic-item/lion-standard\",\n  longstrider: \"magic-item/longstrider\",\n  \"lord of the night\": \"magic-item/lord-of-the-night\",\n  \"lore familiar\": \"magic-item/lore-familiar\",\n  loremaster: \"magic-item/loremaster\",\n  luckstone: \"magic-item/luckstone\",\n  \"lucky heirloom\": \"magic-item/lucky-heirloom\",\n  \"mace of helsturm\": \"magic-item/mace-of-helsturm\",\n  \"manbane standard\": \"magic-item/manbane-standard\",\n  mangelder: \"magic-item/mangelder\",\n  \"mantle of stone\": \"magic-item/mantle-of-stone\",\n  \"mantle of the damsel elena\": \"magic-item/mantle-of-the-damsel-elena\",\n  \"many arms\": \"magic-item/many-arms\",\n  \"many-limbed fiend\": \"magic-item/many-limbed-fiend\",\n  \"master of mortals\": \"magic-item/master-of-mortals\",\n  \"master of the black arts\": \"magic-item/master-of-the-black-arts\",\n  \"master rune of adamant\": \"magic-item/master-rune-of-adamant\",\n  \"master rune of alaric the mad\": \"magic-item/master-rune-of-alaric-the-mad\",\n  \"master rune of balance\": \"magic-item/master-rune-of-balance\",\n  \"master rune of breaking\": \"magic-item/master-rune-of-breaking\",\n  \"master rune of calm\": \"magic-item/master-rune-of-calm\",\n  \"master rune of disguise\": \"magic-item/master-rune-of-disguise\",\n  \"master rune of dragon slaying\": \"magic-item/master-rune-of-dragon-slaying\",\n  \"master rune of flight\": \"magic-item/master-rune-of-flight\",\n  \"master rune of gromril\": \"magic-item/master-rune-of-gromril\",\n  \"master rune of grungni\": \"magic-item/master-rune-of-grungni\",\n  \"master rune of hesitation\": \"magic-item/master-rune-of-hesitation\",\n  \"master rune of immolation\": \"magic-item/master-rune-of-immolation\",\n  \"master rune of skalf blackhammer\":\n    \"magic-item/master-rune-of-skalf-blackhammer\",\n  \"master rune of smiting\": \"magic-item/master-rune-of-smiting\",\n  \"master rune of spite\": \"magic-item/master-rune-of-spite\",\n  \"master rune of stromni redbeard\":\n    \"magic-item/master-rune-of-stromni-redbeard\",\n  \"master rune of swiftness\": \"magic-item/master-rune-of-swiftness\",\n  \"mastodon armour\": \"magic-item/mastodon-armour\",\n  mawseeker: \"magic-item/mawseeker\",\n  \"merciw's locus\": \"magic-item/merciws-locus\",\n  \"might of khorne\": \"magic-item/might-of-khorne\",\n  \"mirage banner\": \"magic-item/mirage-banner\",\n  \"morning star of fracasse\": \"magic-item/morning-star-of-fracasse\",\n  mountaineater: \"magic-item/mountaineater\",\n  \"muscular monstrosity\": \"magic-item/muscular-monstrosity\",\n  \"null stone\": \"magic-item/null-stone\",\n  \"nurgling infestation\": \"magic-item/nurgling-infestation\",\n  \"oaken stave\": \"magic-item/oaken-stave\",\n  \"obsidian lodestone\": \"magic-item/obsidian-lodestone\",\n  \"obsidian vambraces\": \"magic-item/obsidian-vambraces\",\n  \"ogre blade\": \"magic-item/ogre-blade\",\n  \"opal amulet\": \"magic-item/opal-amulet\",\n  \"orb of ptra\": \"magic-item/orb-of-ptra\",\n  \"overseer's sigil\": \"magic-item/overseers-sigil\",\n  \"paymaster's coin\": \"magic-item/paymasters-coin\",\n  \"pearl of infinite bleakness\": \"magic-item/pearl-of-infinite-bleakness\",\n  \"pelt of midnight\": \"magic-item/pelt-of-midnight\",\n  \"pelt of the dark young\": \"magic-item/pelt-of-the-dark-young\",\n  \"pendant of damnation\": \"magic-item/pendant-of-damnation\",\n  \"pendant of khaeleth\": \"magic-item/pendant-of-khaeleth\",\n  \"phakth's blades of justice\": \"magic-item/phakths-blades-of-justice\",\n  \"phâzerakt's kanopi\": \"magic-item/phazerakts-kanopi\",\n  \"piranha blade\": \"magic-item/piranha-blade\",\n  \"poisonous slime\": \"magic-item/poisonous-slime\",\n  \"porko's pigstikka\": \"magic-item/porkos-pigstikka\",\n  \"potion of foolhardiness\": \"magic-item/potion-of-foolhardiness\",\n  \"potion of speed\": \"magic-item/potion-of-speed\",\n  \"potion of strength\": \"magic-item/potion-of-strength\",\n  \"potion of toughness\": \"magic-item/potion-of-toughness\",\n  \"power scroll\": \"magic-item/power-scroll\",\n  \"power vortex\": \"magic-item/power-vortex\",\n  \"prayer icon of quenelles\": \"magic-item/prayer-icon-of-quenelles\",\n  \"primeval club\": \"magic-item/primeval-club\",\n  \"pure of heart\": \"magic-item/pure-of-heart\",\n  \"railarian's mantle\": \"magic-item/railarians-mantle\",\n  \"rampaging banner\": \"magic-item/rampaging-banner\",\n  \"rapturous standard\": \"magic-item/rapturous-standard\",\n  \"razor standard\": \"magic-item/razor-standard\",\n  \"reaver bow\": \"magic-item/reaver-bow\",\n  \"relic of the desert sun\": \"magic-item/relic-of-the-desert-sun\",\n  \"rotten icon\": \"magic-item/rotten-icon\",\n  \"royal mantle\": \"magic-item/royal-mantle\",\n  \"royal standard of settra\": \"magic-item/royal-standard-of-settra\",\n  \"ruby ring of ruin\": \"magic-item/ruby-ring-of-ruin\",\n  \"rune maw\": \"magic-item/rune-maw\",\n  \"rune of banishment\": \"magic-item/rune-of-banishment\",\n  \"rune of battle\": \"magic-item/rune-of-battle\",\n  \"rune of burning\": \"magic-item/rune-of-burning\",\n  \"rune of cleaving\": \"magic-item/rune-of-cleaving\",\n  \"rune of confusion\": \"magic-item/rune-of-confusion\",\n  \"rune of courage\": \"magic-item/rune-of-courage\",\n  \"rune of fear\": \"magic-item/rune-of-fear\",\n  \"rune of fire\": \"magic-item/rune-of-fire\",\n  \"rune of forging\": \"magic-item/rune-of-forging\",\n  \"rune of fortitude\": \"magic-item/rune-of-fortitude\",\n  \"rune of fury\": \"magic-item/rune-of-fury\",\n  \"rune of iron\": \"magic-item/rune-of-iron\",\n  \"rune of luck\": \"magic-item/rune-of-luck\",\n  \"rune of might\": \"magic-item/rune-of-might\",\n  \"rune of parrying\": \"magic-item/rune-of-parrying\",\n  \"rune of passage\": \"magic-item/rune-of-passage\",\n  \"rune of preservation\": \"magic-item/rune-of-preservation\",\n  \"rune of reloading\": \"magic-item/rune-of-reloading\",\n  \"rune of shielding\": \"magic-item/rune-of-shielding\",\n  \"rune of skewering\": \"magic-item/rune-of-skewering\",\n  \"rune of speed\": \"magic-item/rune-of-speed\",\n  \"rune of spellbreaking\": \"magic-item/rune-of-spellbreaking\",\n  \"rune of stone\": \"magic-item/rune-of-stone\",\n  \"rune of striking\": \"magic-item/rune-of-striking\",\n  \"rune of the beast ascendant\": \"magic-item/rune-of-the-beast-ascendant\",\n  \"rune of the furnace\": \"magic-item/rune-of-the-furnace\",\n  \"rune of the true beast\": \"magic-item/rune-of-the-true-beast\",\n  \"rune of warding\": \"magic-item/rune-of-warding\",\n  runefang: \"magic-item/runefang\",\n  \"sacrament of the lady\": \"magic-item/sacrament-of-the-lady\",\n  \"scarab brooch\": \"magic-item/scarab-brooch\",\n  \"sceptre of de noirot\": \"magic-item/sceptre-of-de-noirot\",\n  \"scimitar of the sun resplendent\":\n    \"magic-item/scimitar-of-the-sun-resplendent\",\n  \"scroll of binding\": \"magic-item/scroll-of-binding\",\n  \"scroll of transmogrification\": \"magic-item/scroll-of-transmogrification\",\n  \"sea guard\": \"magic-item/sea-guard\",\n  \"seed of rebirth\": \"magic-item/seed-of-rebirth\",\n  \"serpent staff\": \"magic-item/serpent-staff\",\n  \"shadow magnet\": \"magic-item/shadow-magnet\",\n  \"shadow stalker\": \"magic-item/shadow-stalker\",\n  \"shield of ghrond\": \"magic-item/shield-of-ghrond\",\n  \"shield of ptra\": \"magic-item/shield-of-ptra\",\n  \"shield of the mirror pool\": \"magic-item/shield-of-the-mirror-pool\",\n  \"shield of the warrior true\": \"magic-item/shield-of-the-warrior-true\",\n  \"shroud of iron\": \"magic-item/shroud-of-iron\",\n  \"shroud of the ancestor\": \"magic-item/shroud-of-the-ancestor\",\n  \"sigil of asuryan\": \"magic-item/sigil-of-asuryan\",\n  \"sigil of centuries\": \"magic-item/sigil-of-centuries\",\n  \"silver mirror\": \"magic-item/silver-mirror\",\n  \"silvery wand\": \"magic-item/silvery-wand\",\n  \"siren song\": \"magic-item/siren-song\",\n  \"siren standard\": \"magic-item/siren-standard\",\n  \"sirienne's locket\": \"magic-item/siriennes-locket\",\n  skalm: \"magic-item/skalm\",\n  skavenbrew: \"magic-item/skavenbrew\",\n  \"skavenpelt banner\": \"magic-item/skavenpelt-banner\",\n  \"skin of man\": \"magic-item/skin-of-man\",\n  \"skull of katam\": \"magic-item/skull-of-katam\",\n  \"skull staff\": \"magic-item/skull-staff\",\n  \"skull totem\": \"magic-item/skull-totem\",\n  skullplucker: \"magic-item/skullplucker\",\n  \"sloppity bilepiper\": \"magic-item/sloppity-bilepiper\",\n  \"slug-skin\": \"magic-item/slug-skin\",\n  \"soporific musk\": \"magic-item/soporific-musk\",\n  \"sorcerous void\": \"magic-item/sorcerous-void\",\n  \"sorrow's end\": \"magic-item/sorrows-end\",\n  \"soul of stone\": \"magic-item/soul-of-stone\",\n  spangleshard: \"magic-item/spangleshard\",\n  \"spear of twilight\": \"magic-item/spear-of-twilight\",\n  \"spell eater\": \"magic-item/spell-eater\",\n  \"spell familiar\": \"magic-item/spell-familiar\",\n  \"spelleater axe\": \"magic-item/spelleater-axe\",\n  spellshield: \"magic-item/spellshield\",\n  \"spellthieving sword\": \"magic-item/spellthieving-sword\",\n  \"spoilpox scrivener\": \"magic-item/spoilpox-scrivener\",\n  \"staff of aeons\": \"magic-item/staff-of-aeons\",\n  \"staff of awakening\": \"magic-item/staff-of-awakening\",\n  \"staff of change\": \"magic-item/staff-of-change\",\n  \"staff of the lost sun\": \"magic-item/staff-of-the-lost-sun\",\n  \"stalwart rune\": \"magic-item/stalwart-rune\",\n  \"standard of chaotic glory\": \"magic-item/standard-of-chaotic-glory\",\n  \"standard of hellish vigour\": \"magic-item/standard-of-hellish-vigour\",\n  \"standard of seeping decay\": \"magic-item/standard-of-seeping-decay\",\n  \"standard of slaughter\": \"magic-item/standard-of-slaughter\",\n  \"standard of the cursing word\": \"magic-item/standard-of-the-cursing-word\",\n  \"stone of spite\": \"magic-item/stone-of-spite\",\n  \"storm banner\": \"magic-item/storm-banner\",\n  \"storm daemon\": \"magic-item/storm-daemon\",\n  \"stream of contagion\": \"magic-item/stream-of-contagion\",\n  \"strollaz' rune\": \"magic-item/strollaz-rune\",\n  \"sun standard of chotec\": \"magic-item/sun-standard-of-chotec\",\n  \"supernatural horror\": \"magic-item/supernatural-horror\",\n  \"sword of battle\": \"magic-item/sword-of-battle\",\n  \"sword of heroes\": \"magic-item/sword-of-heroes\",\n  \"sword of justice\": \"magic-item/sword-of-justice\",\n  \"sword of kings\": \"magic-item/sword-of-kings\",\n  \"sword of might\": \"magic-item/sword-of-might\",\n  \"sword of ruin\": \"magic-item/sword-of-ruin\",\n  \"sword of striking\": \"magic-item/sword-of-striking\",\n  \"sword of swiftness\": \"magic-item/sword-of-swiftness\",\n  \"sword of the quest\": \"magic-item/sword-of-the-quest\",\n  \"sword of the stout hearted\": \"magic-item/sword-of-the-stout-hearted\",\n  \"tablets of tahoth\": \"magic-item/tablets-of-tahoth\",\n  \"talisman of protection\": \"magic-item/talisman-of-protection\",\n  \"tapestry of conquered lands\": \"magic-item/tapestry-of-conquered-lands\",\n  tenderiser: \"magic-item/tenderiser\",\n  \"the accursed armour\": \"magic-item/the-accursed-armour\",\n  \"the big red raggedy flag\": \"magic-item/the-big-red-raggedy-flag\",\n  \"the blackened plate\": \"magic-item/the-blackened-plate\",\n  \"the blade of leaping gold\": \"magic-item/the-blade-of-leaping-gold\",\n  \"the blazing banner\": \"magic-item/the-blazing-banner\",\n  \"the blessed blade of ptra\": \"magic-item/the-blessed-blade-of-ptra\",\n  \"the chariot of the gods\": \"magic-item/the-chariot-of-the-gods\",\n  \"the cloak of beards\": \"magic-item/the-cloak-of-beards\",\n  \"the collar of zorga\": \"magic-item/the-collar-of-zorga\",\n  \"the conqueror's blade\": \"magic-item/the-conquerors-blade\",\n  \"the crown of nehekhara\": \"magic-item/the-crown-of-nehekhara\",\n  \"the dolorous blade\": \"magic-item/the-dolorous-blade\",\n  \"the fellblade\": \"magic-item/the-fellblade\",\n  \"the flail of conquered kings\": \"magic-item/the-flail-of-conquered-kings\",\n  \"the flayed hauberk\": \"magic-item/the-flayed-hauberk\",\n  \"the gleaming pennant\": \"magic-item/the-gleaming-pennant\",\n  \"the graven sceptre\": \"magic-item/the-graven-sceptre\",\n  \"the guiding eye\": \"magic-item/the-guiding-eye\",\n  \"the lammasu's beard\": \"magic-item/the-lammasus-beard\",\n  \"the loremaster's cloak\": \"magic-item/the-loremasters-cloak\",\n  \"the mask of the furnace\": \"magic-item/the-mask-of-the-furnace\",\n  \"the plague chalice\": \"magic-item/the-plague-chalice\",\n  \"the scarab brooch of usirian\": \"magic-item/the-scarab-brooch-of-usirian\",\n  \"the screaming banner\": \"magic-item/the-screaming-banner\",\n  \"the seal of parravon\": \"magic-item/the-seal-of-parravon\",\n  \"the silver horn\": \"magic-item/the-silver-horn\",\n  \"the staff of the elements\": \"magic-item/the-staff-of-the-elements\",\n  \"the white cloak\": \"magic-item/the-white-cloak\",\n  \"the white sword\": \"magic-item/the-white-sword\",\n  thundermace: \"magic-item/thundermace\",\n  \"tome of furion\": \"magic-item/tome-of-furion\",\n  \"totem of eternal war\": \"magic-item/totem-of-eternal-war\",\n  \"totem of prophecy\": \"magic-item/totem-of-prophecy\",\n  \"totem of rust\": \"magic-item/totem-of-rust\",\n  \"transcendent healing\": \"magic-item/transcendent-healing\",\n  \"trappings of nurgle\": \"magic-item/trappings-of-nurgle\",\n  \"trollhide trousers\": \"magic-item/trollhide-trousers\",\n  \"twin heads\": \"magic-item/twin-heads\",\n  \"uncanny senses\": \"magic-item/uncanny-senses\",\n  \"valorous standard\": \"magic-item/valorous-standard\",\n  \"venom of the firefly frog\": \"magic-item/venom-of-the-firefly-frog\",\n  \"vial of lammasu blood\": \"magic-item/vial-of-lammasu-blood\",\n  \"virtue of audacity\": \"magic-item/virtue-of-audacity\",\n  \"virtue of confidence\": \"magic-item/virtue-of-confidence\",\n  \"virtue of discipline\": \"magic-item/virtue-of-discipline\",\n  \"virtue of duty\": \"magic-item/virtue-of-duty\",\n  \"virtue of empathy\": \"magic-item/virtue-of-empathy\",\n  \"virtue of heroism\": \"magic-item/virtue-of-heroism\",\n  \"virtue of knightly temper\": \"magic-item/virtue-of-knightly-temper\",\n  \"virtue of noble disdain\": \"magic-item/virtue-of-noble-disdain\",\n  \"virtue of purity\": \"magic-item/virtue-of-purity\",\n  \"virtue of stoicism\": \"magic-item/virtue-of-stoicism\",\n  \"virtue of the ideal\": \"magic-item/virtue-of-the-ideal\",\n  \"virtue of the impetuous knight\": \"magic-item/virtue-of-the-impetuous-knight\",\n  \"virtue of the joust\": \"magic-item/virtue-of-the-joust\",\n  \"virtue of the penitent\": \"magic-item/virtue-of-the-penitent\",\n  \"vitriolic totem\": \"magic-item/vitriolic-totem\",\n  \"von carstein ring\": \"magic-item/von-carstein-ring\",\n  \"waaagh! banner\": \"magic-item/waaagh-banner\",\n  \"wailing arrow\": \"magic-item/wailing-arrow\",\n  \"wand of jet\": \"magic-item/wand-of-jet\",\n  \"wand of wych elm\": \"magic-item/wand-of-wych-elm\",\n  \"wandering deliberations\": \"magic-item/wandering-deliberations\",\n  \"war banner\": \"magic-item/war-banner\",\n  \"warden of saphery\": \"magic-item/warden-of-saphery\",\n  \"warding splint\": \"magic-item/warding-splint\",\n  \"warp condenser\": \"magic-item/warp-condenser\",\n  \"warpstone amulet\": \"magic-item/warpstone-amulet\",\n  \"warpstone armour\": \"magic-item/warpstone-armour\",\n  \"warpstone tokens\": \"magic-item/warpstone-tokens\",\n  \"weeping blade\": \"magic-item/weeping-blade\",\n  \"whip of agony\": \"magic-item/whip-of-agony\",\n  \"will of tzeentch\": \"magic-item/will-of-tzeentch\",\n  \"winged horror\": \"magic-item/winged-horror\",\n  \"wizard's familiar\": \"magic-item/wizards-familiar\",\n  \"wizard's staff\": \"magic-item/wizards-staff\",\n  \"wizarding hat\": \"magic-item/wizarding-hat\",\n  \"wollopa's one hit wunda\": \"magic-item/wollopas-one-hit-wunda\",\n  wraithstone: \"magic-item/wraithstone\",\n  \"wyrmbreath vial\": \"magic-item/wyrmbreath-vial\",\n};\n\nconst additionalOWBRules = {\n  \"throwing spears\": \"weapons-of-war/throwing-spear\",\n  halberds: \"weapons-of-war/halberd\",\n  \"additional hand weapons\":\n    \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"cavalry spears\": \"weapons-of-war/cavalry-spear\",\n  \"repeater handguns\": \"weapons-of-war/repeater-handgun\",\n  \"hand weapons\": \"weapons-of-war/hand-weapon\",\n  flails: \"weapons-of-war/flail\",\n  \"plague censers\": \"weapons-of-war/plague-censer\",\n  \"great weapons\": \"weapons-of-war/great-weapon\",\n  whips: \"weapons-of-war/whip\",\n  spears: \"weapons-of-war/spears\",\n  \"morning stars\": \"weapons-of-war/morning-star\",\n  blowpipes: \"weapons-of-war/blowpipe\",\n  \"warplock jezzails\": \"weapons-of-war/warplock-jezzail\",\n  handguns: \"weapons-of-war/handgun\",\n  lances: \"weapons-of-war/lance\",\n  shortbows: \"weapons-of-war/shortbow\",\n  \"thrusting spears\": \"weapons-of-war/thrusting-spear\",\n  javelins: \"weapons-of-war/javelin\",\n  longbows: \"weapons-of-war/longbow\",\n  pistols: \"weapons-of-war/pistol\",\n  \"throwing axes\": \"weapons-of-war/throwing-axe\",\n  warbows: \"weapons-of-war/warbow\",\n  hellblades: \"weapons-of-war/hellblade\",\n  \"repeater pistols\": \"weapons-of-war/repeater-pistol\",\n  \"blackbriar javelins\": \"weapons-of-war/blackbriar-javelin\",\n  drakeguns: \"weapons-of-war/drakegun\",\n  \"great hammers\": \"weapons-of-war/great-hammer\",\n  \"brimstone guns\": \"weapons-of-war/brimstone-gun\",\n  clatterguns: \"weapons-of-war/clattergun\",\n  \"steam guns\": \"weapons-of-war/steam-gun-dwarfs\",\n  crossbows: \"weapons-of-war/crossbow\",\n  \"throwing weapons\": \"weapons-of-war/throwing-weapons\",\n  slings: \"weapons-of-war/sling\",\n  blunderbusses: \"weapons-of-war/blunderbuss\",\n  \"repeater handbows\": \"weapons-of-war/repeater-handbow\",\n  \"repeater crossbows\": \"weapons-of-war/repeater-crossbow\",\n  \"daemons of khorne\": \"special-rules/daemon-of-khorne\",\n  \"daemons of tzeentch\": \"special-rules/daemon-of-tzeentch\",\n  \"daemons of nurgle\": \"special-rules/daemon-of-nurgle\",\n  \"daemons of slaanesh\": \"special-rules/daemon-of-slaanesh\",\n  \"asrai spears\": \"weapons-of-war/asrai-spear\",\n  \"asrai longbows\": \"weapons-of-war/asrai-longbow\",\n  shield: \"weapons-of-war/shield\",\n  shields: \"weapons-of-war/shield\",\n  ironfists: \"weapons-of-war/ironfist\",\n  general: \"characters/the-general-characters\",\n  \"moonfire shots\": \"weapons-of-war/moonfire-shot\",\n  \"battle standard bearer\": \"characters/the-battle-standard\",\n  \"revered guardian\": \"characters/the-battle-standard\",\n  \"patrol leader\": \"characters/the-battle-standard\",\n  ancient: \"characters/the-battle-standard\",\n  \"sky leader\": \"characters/the-battle-standard\",\n  boss: \"command-groups/champions\",\n  marksman: \"command-groups/champions\",\n  preceptor: \"command-groups/champions\",\n  seneschal: \"command-groups/champions\",\n  \"skeleton champion\": \"command-groups/champions\",\n  \"inner circle preceptor\": \"command-groups/champions\",\n  \"doom wolf\": \"command-groups/champions\",\n  \"crypt haunter\": \"command-groups/champions\",\n  \"crypt ghast\": \"command-groups/champions\",\n  \"glade knight\": \"command-groups/champions\",\n  kastellan: \"command-groups/champions\",\n  sharpshooter: \"command-groups/champions\",\n  hellwraith: \"command-groups/champions\",\n  crusher: \"command-groups/champions\",\n  \"demigryph preceptor\": \"command-groups/champions\",\n  \"count's champion\": \"command-groups/champions\",\n  vargoyle: \"command-groups/champions\",\n  \"wildwood warden\": \"command-groups/champions\",\n  \"first knight\": \"command-groups/champions\",\n  bladesinger: \"command-groups/champions\",\n  \"handmaiden of the thorn\": \"command-groups/champions\",\n  \"hell knight\": \"command-groups/champions\",\n  plagueridden: \"command-groups/champions\",\n  \"spawn leader\": \"command-groups/champions\",\n  \"iridescent horror\": \"command-groups/champions\",\n  \"ectoplasmic horror\": \"command-groups/champions\",\n  heartseeker: \"command-groups/champions\",\n  alluress: \"command-groups/champions\",\n  \"master moulder\": \"command-groups/champions\",\n  sergeant: \"command-groups/champions\",\n  bloodreaper: \"command-groups/champions\",\n  nymph: \"command-groups/champions\",\n  guardian: \"command-groups/champions\",\n  harbinger: \"command-groups/champions\",\n  \"high sister\": \"command-groups/champions\",\n  groinbiter: \"command-groups/champions\",\n  snarefinger: \"command-groups/champions\",\n  \"high helm\": \"command-groups/champions\",\n  \"maneater captain\": \"command-groups/champions\",\n  thunderfist: \"command-groups/champions\",\n  \"keeper of the flame\": \"command-groups/champions\",\n  nightleader: \"command-groups/champions\",\n  assassin: \"command-groups/champions\",\n  greyback: \"command-groups/champions\",\n  \"sea master\": \"command-groups/champions\",\n  \"pack leader\": \"command-groups/champions\",\n  \"grail guardian\": \"command-groups/champions\",\n  champion: \"command-groups/champions\",\n  gutlord: \"command-groups/champions\",\n  desperado: \"command-groups/champions\",\n  \"wild hunter\": \"command-groups/champions\",\n  \"wind rider\": \"command-groups/champions\",\n  esquire: \"command-groups/champions\",\n  elder: \"command-groups/champions\",\n  \"lord's bowmen\": \"command-groups/champions\",\n  \"ol' deadeye\": \"command-groups/champions\",\n  \"royal champion\": \"command-groups/champions\",\n  sentinel: \"command-groups/champions\",\n  yeoman: \"command-groups/champions\",\n  gallant: \"command-groups/champions\",\n  pyroclaster: \"command-groups/champions\",\n  villein: \"command-groups/champions\",\n  paragon: \"command-groups/champions\",\n  warden: \"command-groups/champions\",\n  \"militia leader\": \"command-groups/champions\",\n  ironbeard: \"command-groups/champions\",\n  \"ripperdactyl champion\": \"command-groups/champions\",\n  prospector: \"command-groups/champions\",\n  \"eternal warden\": \"command-groups/champions\",\n  ironwarden: \"command-groups/champions\",\n  \"prophet of doom\": \"command-groups/champions\",\n  overseer: \"command-groups/champions\",\n  deathmask: \"command-groups/champions\",\n  \"plague deacon\": \"command-groups/champions\",\n  fangleader: \"command-groups/champions\",\n  clawleader: \"command-groups/champions\",\n  \"standard bearer\": \"command-groups/standard-bearers\",\n  musician: \"command-groups/musicians\",\n  bellower: \"special-rules/bellowers-and-musicians\",\n  \"level 1 wizard\": \"magic/levels-of-wizardry\",\n  \"level 2 wizard\": \"magic/levels-of-wizardry\",\n  \"level 3 wizard\": \"magic/levels-of-wizardry\",\n  \"level 4 wizard\": \"magic/levels-of-wizardry\",\n};\n\nexport const rulesMap = {\n  ...rulesIndexExport,\n  ...additionalOWBRules,\n};\n","import React, { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { Dialog } from \"../../components/dialog\";\nimport { Spinner } from \"../../components/spinner\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { closeRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap } from \"./rules-map\";\nimport \"./RulesIndex.css\";\n\nexport const RulesIndex = () => {\n  const { open, activeRule } = useSelector((state) => state.rulesIndex);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setIsLoading(true);\n    dispatch(closeRulesIndex());\n  };\n  const normalizedRuleName = normalizeRuleName(activeRule);\n  const rulePath = rulesMap[normalizedRuleName];\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {rulesMap[normalizedRuleName] ? (\n        <>\n          <iframe\n            onLoad={() => setIsLoading(false)}\n            className={classNames(\n              \"rules-index__iframe\",\n              !isLoading && \"rules-index__iframe--show\"\n            )}\n            src={`https://tow.whfb.app/${rulePath}?minimal=true&utm_source=owb&utm_medium=referral`}\n            title=\"test\"\n            height=\"500\"\n            width=\"500\"\n          />\n          {isLoading && <Spinner className=\"rules-index__spinner\" />}\n        </>\n      ) : (\n        <p>\n          <FormattedMessage id=\"editor.noRuleFound\" />\n        </p>\n      )}\n    </Dialog>\n  );\n};\n","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { openRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap } from \"./rules-map\";\n\nexport const RulesLinksText = ({ textObject }) => {\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n\n  if (!textObject.name_en) {\n    return [];\n  }\n\n  const textEn = textObject.name_en.split(\", \");\n  const ruleString = textObject[`name_${language}`] || textObject.name_en;\n  let ruleButtons = ruleString.split(\", \");\n\n  return ruleButtons.map((rule, index) => (\n    <Fragment key={rule}>\n      {rulesMap[normalizeRuleName(textEn[index])] ? (\n        <button\n          className=\"unit__rule\"\n          onClick={() =>\n            dispatch(openRulesIndex({ activeRule: textEn[index] }))\n          }\n        >\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </button>\n      ) : (\n        <>\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </>\n      )}\n    </Fragment>\n  ));\n};\n","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { openRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap } from \"./rules-map\";\n\nexport const RulesWithIcon = ({ textObject }) => {\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const intl = useIntl();\n\n  if (!textObject.name_en) {\n    return [];\n  }\n\n  const textEn = textObject.name_en.split(\", \");\n  const ruleString = textObject[`name_${language}`] || textObject.name_en;\n  let ruleButtons = ruleString.split(\", \");\n\n  return ruleButtons.map((rule, index) => (\n    <Fragment key={rule}>\n      {rulesMap[normalizeRuleName(textEn[index])] ? (\n        <span className=\"unit__rule-wrapper\">\n          {rule}\n          <Button\n            type=\"text\"\n            className=\"unit__rules\"\n            color=\"dark\"\n            label={intl.formatMessage({ id: \"misc.showRules\" })}\n            icon=\"preview\"\n            onClick={() => dispatch(openRulesIndex({ activeRule: rule }))}\n          />\n          {index !== ruleButtons.length - 1 && \",\"}\n        </span>\n      ) : (\n        <>\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </>\n      )}\n    </Fragment>\n  ));\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const updateLocalList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists =\n    localLists &&\n    localLists.map((list) => {\n      if (list.id === updatedList.id) {\n        return updatedList;\n      } else {\n        return list;\n      }\n    });\n\n  localLists && localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeFromLocalList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","/**\n * Returns whether the magic item can be taken multiple times.\n *\n * Typically, these are common potions, scrolls or runes\n *\n * @param {object} magicItem\n * @param {string} magicItem.type\n * @param {boolean} [magicItem.stackable]\n * @param {number} [magicItem.maximum]\n * @returns {boolean}\n */\nexport const isMultipleAllowedItem = ({ type, stackable, maximum }) =>\n  Boolean(stackable || maximum);\n\n/**\n * Calculates the maximum amount of a magic item that can be taken given the remaining points.\n *\n * @param {object} magicItem\n * @param {number} selectedAmount\n * @param {number} unitPointsRemaining\n * @returns\n */\nexport const maxAllowedOfItem = (\n  magicItem,\n  selectedAmount,\n  unitPointsRemaining\n) => {\n  if (!magicItem.stackable && !magicItem.maximum) {\n    return 1;\n  }\n\n  const pointsRemainingMax =\n    Math.floor(unitPointsRemaining / magicItem.points) + selectedAmount;\n\n  if (magicItem.maximum) {\n    return Math.min(magicItem.maximum, pointsRemainingMax);\n  }\n\n  return pointsRemainingMax;\n};\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Gewöhnliche Magische Gegenstände\",\n    name_en: \"Common Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  \"armor-mages\": {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    // deprecated\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"arcane-item\": {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  triptychs: {\n    name_de: \"Triptychs\",\n    name_en: \"Triptychs\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n  \"chaos-mutations\": {\n    name_de: \"Chaos Mutations\",\n    name_en: \"Chaos Mutations\",\n  },\n  \"chaos-mutation\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-character\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-chieftain\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"gifts-of-chaos\": {\n    name_de: \"Gifts of Chaos\",\n    name_en: \"Gifts of Chaos\",\n  },\n  \"gift-of-chaos\": {\n    name_de: \"Gift of Chaos\",\n    name_en: \"Gift of Chaos\",\n  },\n  \"forest-spites\": {\n    name_de: \"Forest Spites\",\n    name_en: \"Forest Spites\",\n  },\n  \"forest-spite\": {\n    name_de: \"Forest Spite\",\n    name_en: \"Forest Spite\",\n  },\n  \"beastmen-brayherds\": {\n    name_de: \"Beastmen Brayherds\",\n    name_en: \"Beastmen Brayherds\",\n  },\n  \"orc-and-goblin-tribes\": {\n    name_de: \"Orc & Goblin Tribes\",\n    name_en: \"Orc & Goblin Tribes\",\n  },\n  \"dwarfen-mountain-holds\": {\n    name_de: \"Dwarfen Mountain Holds\",\n    name_en: \"Dwarfen Mountain Holds\",\n  },\n  \"empire-of-man\": {\n    name_de: \"Empire of Man\",\n    name_en: \"Empire of Man\",\n  },\n  \"wood-elf-realms\": {\n    name_de: \"Wood Elf Realms\",\n    name_en: \"Wood Elf Realms\",\n  },\n  \"high-elf-realms\": {\n    name_de: \"High Elf Realms\",\n    name_en: \"High Elf Realms\",\n  },\n  \"tomb-kings-of-khemri\": {\n    name_de: \"Tomb Kings of Khemri\",\n    name_en: \"Tomb Kings of Khemri\",\n  },\n  \"warriors-of-chaos\": {\n    name_de: \"Warriors of Chaos\",\n    name_en: \"Warriors of Chaos\",\n  },\n  \"knightly-virtues\": {\n    name_de: \"Knightly Virtues\",\n    name_en: \"Knightly Virtues\",\n  },\n  \"knightly-virtue\": {\n    name_de: \"Knightly Virtue\",\n    name_en: \"Knightly Virtue\",\n  },\n  \"knightly-virtue-character\": {\n    name_de: \"Knightly Virtue (Characters only)\",\n    name_en: \"Knightly Virtue (Characters only)\",\n  },\n  \"elven-honours\": {\n    name_de: \"Elven Honours\",\n    name_en: \"Elven Honours\",\n  },\n  \"elven-honour\": {\n    name_de: \"Elven Honour\",\n    name_en: \"Elven Honour\",\n  },\n  daemonology: {\n    name_de: \"Daemonology\",\n    name_en: \"Daemonology\",\n  },\n  \"dark-magic\": {\n    name_de: \"Dark Magic\",\n    name_en: \"Dark Magic\",\n  },\n  elementalism: {\n    name_de: \"Elementalism\",\n    name_en: \"Elementalism\",\n  },\n  \"battle-magic\": {\n    name_de: \"Battle Magic\",\n    name_en: \"Battle Magic\",\n  },\n  \"high-magic\": {\n    name_de: \"High Magic\",\n    name_en: \"High Magic\",\n  },\n  illusion: {\n    name_de: \"Illusion\",\n    name_en: \"Illusion\",\n  },\n  necromancy: {\n    name_de: \"Necromancy\",\n    name_en: \"Necromancy\",\n  },\n  \"waaagh-magic\": {\n    name_de: \"Waaagh! Magic\",\n    name_en: \"Waaagh! Magic\",\n  },\n  \"errantry-crusades\": {\n    name_en: \"Errantry Crusades\",\n    name_de: \"Errantry Crusades\",\n  },\n  \"bretonnian-exiles\": {\n    name_en: \"Bretonnian Exiles\",\n    name_de: \"Bretonnian Exiles\",\n  },\n  \"nehekharan-royal-hosts\": {\n    name_en: \"Nehekharan Royal Hosts\",\n    name_de: \"Nehekharan Royal Hosts\",\n  },\n  \"mortuary-cults\": {\n    name_en: \"Mortuary Cults\",\n    name_de: \"Mortuary Cults\",\n  },\n  \"nomadic-waaagh\": {\n    name_en: \"Nomadic Waaagh!\",\n    name_de: \"Nomadic Waaagh!\",\n  },\n  \"troll-horde\": {\n    name_en: \"Troll Horde\",\n    name_de: \"Troll Horde\",\n  },\n  \"chaos-dwarfs\": {\n    name_en: \"Chaos Dwarfs\",\n    name_de: \"Chaos Dwarfs\",\n  },\n  \"vampire-counts\": {\n    name_en: \"Vampire Counts\",\n    name_de: \"Vampire Counts\",\n  },\n  \"vampiric-powers\": {\n    name_en: \"Vampiric Powers\",\n    name_de: \"Vampiric Powers\",\n  },\n  \"vampiric-power\": {\n    name_en: \"Vampiric Power\",\n    name_de: \"Vampiric Power\",\n  },\n  \"dark-elves\": {\n    name_en: \"Dark Elves\",\n    name_de: \"Dark Elves\",\n  },\n  skaven: {\n    name_en: \"Skaven\",\n    name_de: \"Skaven\",\n  },\n  \"daemons-of-chaos\": {\n    name_en: \"Daemons of Chaos\",\n    name_de: \"Daemons of Chaos\",\n  },\n  \"daemonic-gifts-common\": {\n    name_en: \"Chaotic Gifts\",\n    name_de: \"Chaotic Gifts\",\n  },\n  \"daemonic-gift-common\": {\n    name_en: \"Chaotic Gift\",\n    name_de: \"Chaotic Gift\",\n  },\n  \"daemonic-icons-common\": {\n    name_en: \"Chaotic Icons\",\n    name_de: \"Chaotic Icons\",\n  },\n  \"daemonic-icon-common\": {\n    name_en: \"Chaotic Icon\",\n    name_de: \"Chaotic Icon\",\n  },\n  \"daemonic-gifts-khorne\": {\n    name_en: \"Gifts Of Khorne\",\n    name_de: \"Gifts Of Khorne\",\n  },\n  \"daemonic-gift-khorne\": {\n    name_en: \"Gift Of Khorne\",\n    name_de: \"Gift Of Khorne\",\n  },\n  \"daemonic-icons-khorne\": {\n    name_en: \"Icons Of Khorne\",\n    name_de: \"Icons Of Khorne\",\n  },\n  \"daemonic-icon-khorne\": {\n    name_en: \"Icon Of Khorne\",\n    name_de: \"Icon Of Khorne\",\n  },\n  \"daemonic-gifts-nurgle\": {\n    name_en: \"Gifts Of Nurgle\",\n    name_de: \"Gifts Of Nurgle\",\n  },\n  \"daemonic-gift-nurgle\": {\n    name_en: \"Gift Of Nurgle\",\n    name_de: \"Gift Of Nurgle\",\n  },\n  \"daemonic-icons-nurgle\": {\n    name_en: \"Icons Of Nurgle\",\n    name_de: \"Icons Of Nurgle\",\n  },\n  \"daemonic-icon-nurgle\": {\n    name_en: \"Icon Of Nurgle\",\n    name_de: \"Icon Of Nurgle\",\n  },\n  \"daemonic-gifts-slaanesh\": {\n    name_en: \"Gifts Of Slaanesh\",\n    name_de: \"Gifts Of Slaanesh\",\n  },\n  \"daemonic-gift-slaanesh\": {\n    name_en: \"Gift Of Slaanesh\",\n    name_de: \"Gift Of Slaanesh\",\n  },\n  \"daemonic-icons-slaanesh\": {\n    name_en: \"Icons Of Slaanesh\",\n    name_de: \"Icons Of Slaanesh\",\n  },\n  \"daemonic-icon-slaanesh\": {\n    name_en: \"Icon Of Slaanesh\",\n    name_de: \"Icon Of Slaanesh\",\n  },\n  \"daemonic-gifts-tzeentch\": {\n    name_en: \"Gifts Of Tzeentch\",\n    name_de: \"Gifts Of Tzeentch\",\n  },\n  \"daemonic-gift-tzeentch\": {\n    name_en: \"Gift Of Tzeentch\",\n    name_de: \"Gift Of Tzeentch\",\n  },\n  \"daemonic-icons-tzeentch\": {\n    name_en: \"Icons Of Tzeentch\",\n    name_de: \"Icons Of Tzeentch\",\n  },\n  \"daemonic-icon-tzeentch\": {\n    name_en: \"Icon Of Tzeentch\",\n    name_de: \"Icon Of Tzeentch\",\n  },\n  \"forbidden-poisons\": {\n    name_en: \"Forbidden Poisons\",\n    name_de: \"Forbidden Poisons\",\n  },\n  \"gifts-of-khaine\": {\n    name_en: \"Gifts of Khaine\",\n    name_de: \"Gifts of Khaine\",\n  },\n  \"forbidden-poison\": {\n    name_en: \"Forbidden Poison\",\n    name_de: \"Forbidden Poison\",\n  },\n  \"gift-of-khaine\": {\n    name_en: \"Gift of Khaine\",\n    name_de: \"Gift of Khaine\",\n  },\n  \"ogre-kingdoms\": {\n    name_en: \"Ogre Kingdoms\",\n    name_de: \"Ogre Kingdoms\",\n  },\n  \"big-names\": {\n    name_en: \"Big Names\",\n    name_de: \"Big Names\",\n  },\n  \"big-name\": {\n    name_en: \"Big Name\",\n    name_de: \"Big Name\",\n  },\n  \"disciplines-old-ones\": {\n    name_en: \"Disciplines Of The Old Ones\",\n    name_de: \"Disciplines Of The Old Ones\",\n  },\n  \"discipline-old-ones\": {\n    name_en: \"Discipline Of The Old Ones\",\n    name_de: \"Discipline Of The Old Ones\",\n  },\n  lizardmen: {\n    name_en: \"Lizardmen\",\n    name_de: \"Lizardmen\",\n  },\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { RulesIndex, rulesMap } from \"../../components/rules-index\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport gameSystems from \"../../assets/armies.json\";\nimport {\n  isMultipleAllowedItem,\n  maxAllowedOfItem,\n} from \"../../utils/magic-item-limitations\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  let prevItemType, isFirstItemType;\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const { listId, type, unitId, command, group } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const armyId = unit?.army || list?.army;\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => armyId === id);\n  const items = useSelector((state) => state.items);\n  let maxMagicPoints = 0;\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleMagicChange = (event, magicItem, isCommand) => {\n    let magicItems;\n    const inputType = event.target.type;\n\n    if (event.target.checked) {\n      if (isCommand) {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.command[command].magic.selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      } else {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.items[group].selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      }\n    } else {\n      if (isCommand) {\n        magicItems = unit.command[command].magic.selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      } else {\n        magicItems = unit.items[group].selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      }\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n  const handleAmountChange = ({ event, parentId, isCommand }) => {\n    let magicItems;\n\n    if (isCommand) {\n      magicItems = (unit.command[command].magic.selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    } else {\n      magicItems = (unit.items[group].selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      list &&\n      unit &&\n      (!items || unit.army !== list.army) &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, list, unit, items, dispatch]);\n\n  if (!unit || !army || !items) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({\n    isChecked,\n    selectedAmount,\n    magicItem,\n    itemGroup,\n    isConditional,\n    isTypeLimitReached,\n  }) => {\n    const isCommand = Boolean(unit?.command[command]?.magic?.types.length);\n\n    const max = !maxMagicPoints\n      ? // No maximum of this item if there is no point max.\n        undefined\n      : maxAllowedOfItem(magicItem, selectedAmount, unitPointsRemaining);\n\n    return (\n      <Fragment key={magicItem.id}>\n        <div\n          className={classNames(\n            \"checkbox\",\n            isConditional && \"checkbox--conditional\"\n          )}\n        >\n          <input\n            type=\"checkbox\"\n            id={`${itemGroup.id}-${magicItem.id}`}\n            value={`${itemGroup.id}-${magicItem.id}`}\n            onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n            checked={isChecked}\n            className=\"checkbox__input\"\n            disabled={\n              !isChecked &&\n              // Sometimes there is no limit (often for magic banners),\n              // otherwise we need to check if the unit has enough points left.\n              ((maxMagicPoints && magicItem.points > unitPointsRemaining) ||\n                isTypeLimitReached)\n            }\n          />\n          <label\n            htmlFor={`${itemGroup.id}-${magicItem.id}`}\n            className=\"checkbox__label\"\n          >\n            <span className=\"magic__label-text\">\n              {magicItem[`name_${language}`] || magicItem.name_en}\n            </span>\n            <i className=\"checkbox__points\">\n              {magicItem.points === 0\n                ? intl.formatMessage({\n                    id: \"app.free\",\n                  })\n                : `${magicItem.points} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}\n            </i>\n            {rulesMap[normalizeRuleName(magicItem.name_en)] ? (\n              <Button\n                type=\"text\"\n                className=\"magic__rules\"\n                color=\"dark\"\n                label={intl.formatMessage({ id: \"misc.showRules\" })}\n                icon=\"preview\"\n                onClick={() =>\n                  handleRulesClick({\n                    name: magicItem.name_en,\n                  })\n                }\n              />\n            ) : null}\n          </label>\n        </div>\n\n        {isMultipleAllowedItem(magicItem) && isChecked && max !== 1 && (\n          <NumberInput\n            id={`${itemGroup.id}-${magicItem.id}-amount`}\n            min={1}\n            max={isTypeLimitReached ? selectedAmount : max}\n            value={selectedAmount}\n            onChange={(event) => {\n              handleAmountChange({\n                parentId: `${itemGroup.id}-${magicItem.id}`,\n                event,\n                isCommand,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  let unitMagicPoints = 0;\n  const hasCommandMagicItems = Boolean(\n    unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.types.length\n  );\n  const hasMagicItems = Boolean(unit?.items?.length);\n\n  if (hasCommandMagicItems) {\n    maxMagicPoints = unit.command[command].magic.maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.command[command].magic.selected,\n    });\n  } else if (hasMagicItems) {\n    maxMagicPoints = unit.items[group].maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.items[group].selected,\n    });\n  }\n\n  const unitPointsRemaining = maxMagicPoints - unitMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <>\n          <Header\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n          <RulesIndex />\n        </>\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n        )}\n        {items.map((itemGroup) => {\n          const commandMagicItems = itemGroup.items.filter(\n            (item) =>\n              hasCommandMagicItems &&\n              unit.command[command].magic.types.includes(item.type)\n          );\n          const magicItems = itemGroup.items.filter(\n            (item) =>\n              hasMagicItems &&\n              !command &&\n              unit.items[group].types.includes(item.type)\n          );\n          const itemGroupItems = (\n            hasCommandMagicItems ? commandMagicItems : magicItems\n          ).filter(\n            (item) =>\n              (!maxMagicPoints || item.points <= maxMagicPoints) &&\n              (item?.armyComposition === list?.armyComposition ||\n                !item.armyComposition)\n          );\n\n          if (itemGroupItems.length > 0) {\n            prevItemType = null;\n            isFirstItemType = false;\n          }\n\n          const unitSelectedItems = hasCommandMagicItems\n            ? unit.command[command].magic.selected ?? []\n            : unit.items[group].selected ?? [];\n\n          return (\n            <Fragment key={itemGroup.name_de}>\n              {itemGroupItems.length > 0 && (\n                <h2 className=\"unit__subline\">\n                  {itemGroup[`name_${language}`] || itemGroup.name_en}\n                </h2>\n              )}\n              {itemGroupItems.map((magicItem) => {\n                if (prevItemType !== magicItem.type) {\n                  prevItemType = magicItem.type;\n                  isFirstItemType = true;\n                } else {\n                  isFirstItemType = false;\n                }\n\n                const selectedItem = unitSelectedItems.find(\n                  ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                );\n                let runesAmountInCategory = 0;\n\n                unitSelectedItems.forEach(({ type: itemType, amount }) => {\n                  if (itemType === magicItem.type) {\n                    runesAmountInCategory += amount ?? 1;\n                  }\n                });\n                const selectedAmount = selectedItem?.amount ?? 1;\n                const isChecked = Boolean(selectedItem);\n                const isRune = Boolean(magicItem.type.includes(\"runes\"));\n\n                const isTypeLimitReached = magicItem.nonExclusive\n                  ? false\n                  : unitSelectedItems.some(\n                      (item) =>\n                        (!magicItem.stackable &&\n                          !item.stackable &&\n                          item.type === magicItem.type &&\n                          !isRune) ||\n                        (isRune && runesAmountInCategory >= 3)\n                    );\n\n                return (\n                  <Fragment key={magicItem.name_de}>\n                    {isFirstItemType && (\n                      <h3 className=\"magic__type\">\n                        {nameMap[magicItem.type][`name_${language}`] ||\n                          nameMap[magicItem.type].name_en}\n                      </h3>\n                    )}\n                    {getCheckbox({\n                      magicItem,\n                      itemGroup,\n                      selectedAmount,\n                      isChecked,\n                      isTypeLimitReached,\n                    })}\n\n                    {magicItem.conditional && isChecked\n                      ? magicItem.conditional.map((conditionalItem) =>\n                          getCheckbox({\n                            magicItem: conditionalItem,\n                            itemGroup,\n                            selectedAmount,\n                            isChecked,\n                            isConditional: true,\n                            isTypeLimitReached,\n                          })\n                        )\n                      : null}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        })}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\nimport { nameMap } from \"../magic\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [armyComposition, setArmyComposition] = useState(\"empire-of-man\");\n  const [redirect, setRedirect] = useState(null);\n  const armies = gameSystems.filter(({ id }) => id === game)[0].armies;\n  const journalArmies = armies.find(({ id }) => army === id)?.armyComposition;\n  const listsPoints = [...lists.map((list) => list.points)].reverse();\n  const quickActions = lists.length\n    ? [...new Set([...listsPoints, 500, 1000, 1500, 2000, 2500])].slice(0, 5)\n    : [500, 1000, 1500, 2000, 2500];\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name || nameMap[army][language] || nameMap[army].name_en,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name || nameMap[army][language] || nameMap[army].name_en,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n        armyComposition: armyComposition,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n    setArmyComposition(value);\n  };\n  const handleArcaneJournalChange = (value) => {\n    setArmyComposition(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n  const handleQuickActionClick = (event) => {\n    event.preventDefault();\n    setPoints(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n                disabled={id === \"warhammer-fantasy\"}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <>\n                    <img height=\"20\" src={warhammerFantasy} alt={name} />\n                    <p className=\"new-list__beta\">\n                      <FormattedMessage id=\"new.8th\" />\n                    </p>\n                  </>\n                )}\n                {id === \"the-old-world\" && (\n                  <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={armies}\n            onChange={handleArmyChange}\n            selected=\"empire-of-man\"\n            spaceBottom\n            required\n          />\n          {journalArmies ? (\n            <>\n              <label htmlFor=\"arcane-journal\">\n                <FormattedMessage id=\"new.armyComposition\" />\n              </label>\n              <Select\n                id=\"arcane-journal\"\n                options={[\n                  {\n                    id: army,\n                    name_en: intl.formatMessage({ id: \"new.grandArmy\" }),\n                  },\n                  ...journalArmies.map((journalArmy) => ({\n                    id: journalArmy,\n                    name_en: nameMap[journalArmy].name_en,\n                    name_de: nameMap[journalArmy].name_de,\n                    name_es: nameMap[journalArmy].name_es,\n                    name_fr: nameMap[journalArmy].name_fr,\n                  })),\n                ]}\n                onChange={handleArcaneJournalChange}\n                selected={army}\n                spaceBottom\n              />\n            </>\n          ) : null}\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <p className=\"new-list__quick-actions\">\n            <i className=\"new-list__quick-actions-label\">\n              <FormattedMessage id=\"misc.suggestions\" />\n              {\": \"}\n            </i>\n            {quickActions.map((points, index) => (\n              <Button\n                type=\"tertiary\"\n                size=\"small\"\n                color=\"dark\"\n                className=\"new-list__quick-action\"\n                value={points}\n                onClick={handleQuickActionClick}\n                key={index}\n              >\n                {points}\n              </Button>\n            ))}\n          </p>\n\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <Button\n            centered\n            icon=\"add-list\"\n            submitButton\n            spaceBottom\n            size=\"large\"\n          >\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  \"grand-army\": {\n    lords: { maxPercent: 25 },\n    heroes: { maxPercent: 25 },\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: { maxPercent: 25 },\n  },\n  \"kingdom-of-bretonnia\": {\n    characters: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"duke\",\n          min: 0,\n          max: 1,\n        },\n        {\n          id: \"baron\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n        {\n          id: \"prophetees\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    core: {\n      minPercent: 25,\n      units: [\n        {\n          ids: [\"knights-of-the-realm\", \"mounted-knights-of-the-realm\"],\n          min: 1,\n        },\n        {\n          ids: [\"men-at-arms\", \"peasant-bowmen\"],\n          min: 1,\n        },\n      ],\n    },\n    special: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"battle-pilgrims\",\n          min: 0,\n          max: 2,\n          perPoints: 1000,\n        },\n      ],\n    },\n    rare: {\n      maxPercent: 25,\n      units: [\n        {\n          id: \"field-trebuchet\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: {\n      maxPercent: 25,\n      armies: [\n        \"errantry-crusades\",\n        \"bretonnian-exiles\",\n        \"dwarfen-mountain-holds\",\n        \"empire-of-man\",\n        \"high-elf-realms\",\n        \"wood-elf-realms\",\n      ],\n    },\n  },\n  \"errantry-crusades\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Empire Knights & Empire Inner Circle Knights ...\",\n    },\n  },\n  \"bretonnian-exiles\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 33,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Free Company Militia & Empire Archers ...\",\n    },\n  },\n  \"tomb-kings-of-khemri\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: {\n      maxPercent: 20,\n    },\n    allies: {\n      maxPercent: 25,\n    },\n  },\n  \"nehekharan-royal-hosts\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n  },\n  \"mortuary-cults\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n  },\n};\n\nexport const getMaxPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const categoryData = rules[armyComposition]\n    ? rules[armyComposition][type]\n    : rules[\"grand-army\"][type];\n\n  if (!categoryData) {\n    return null;\n  }\n\n  const maxPercent = categoryData.maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const minPercent = rules[armyComposition]\n    ? rules[armyComposition][type].minPercent\n    : rules[\"grand-army\"][type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const ListItem = forwardRef(\n  (\n    { to, onClick, children, className, active, disabled, ...attributes },\n    ref\n  ) => {\n    const Component = to ? Link : \"button\";\n\n    return (\n      <li\n        {...attributes}\n        ref={ref}\n        className={classNames(\"list\", active && \"list--active\", className)}\n      >\n        <Component\n          to={to}\n          className={classNames(\n            \"list__inner\",\n            disabled && \"list__inner--disabled\"\n          )}\n          onClick={onClick}\n        >\n          {children}\n        </Component>\n      </li>\n    );\n  }\n);\n\nListItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n/**\n * A list that allows its children to be reordered by dragging and dropping.\n *\n * @example\n * ```jsx\n * <OrderableList\n *    id=\"items\"\n *    onMoved={({sourceIndex, destinationIndex}) =>\n *      swap(items, sourceIndex, destinationIndex)}\n * >\n *   {items.map((item) => (\n *      <li>{item}</li>\n *   ))}\n * </OrderableList>\n * ```\n *\n * @param {object} props\n * @param {React.ReactElement[]} props.children\n * @param {string} props.id\n */\nexport const OrderableList = ({ id, children, onMoved }) => {\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    onMoved({\n      sourceIndex: result.source.index,\n      destinationIndex: result.destination.index,\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId={`droppable-${id}`}>\n        {(provided, _snapshot) => (\n          <ol {...provided.droppableProps} ref={provided.innerRef}>\n            {/* We clone the children and add the drag handlers props */}\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child) ? (\n                <Draggable\n                  key={child.key}\n                  draggableId={child.key}\n                  index={index}\n                >\n                  {(provided, snapshot) => {\n                    // Block horizontal movement\n                    const style = provided.draggableProps.style;\n                    if (style.transform) {\n                      style.transform = style.transform.replace(/\\d+/, \"0\");\n                    }\n\n                    return React.cloneElement(child, {\n                      // Add a dragging attribute for styling\n                      ...(snapshot.isDragging && !snapshot.isDropAnimating\n                        ? { dragging: \"\" }\n                        : {}),\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                    });\n                  }}\n                </Draggable>\n              ) : (\n                child\n              )\n            )}\n            {provided.placeholder}\n          </ol>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { nameMap } from \"../pages/magic\";\n\nexport const getAllOptions = (\n  {\n    mounts,\n    equipment,\n    armor,\n    options,\n    command,\n    items,\n    detachments,\n    activeLore,\n    lores,\n  },\n  { asString, noMagic, language: overrideLanguage } = {}\n) => {\n  const language = overrideLanguage || localStorage.getItem(\"lang\");\n  const detachmentActive =\n    options?.length > 0 &&\n    Boolean(\n      options.find((option) => option.name_en === \"Detachment\" && option.active)\n    );\n  const allCommand = [];\n\n  if (command && !detachmentActive) {\n    command.forEach(({ active, magic, name_en, options, ...entry }) => {\n      if (active) {\n        let commandEntry = entry[`name_${language}`] || name_en;\n        const selectedOptions = [];\n\n        if (options && options.length > 0) {\n          options.forEach((option) => {\n            if (option.active) {\n              selectedOptions.push(option.name_en);\n            }\n          });\n        }\n\n        if (magic && magic?.selected?.length && !noMagic) {\n          magic.selected.forEach((selectedItem) => {\n            selectedOptions.push(\n              selectedItem.amount > 1\n                ? `${selectedItem.amount}x ` +\n                    selectedItem[`name_${language}`] || selectedItem.name_en\n                : selectedItem[`name_${language}`] || selectedItem.name_en\n            );\n          });\n        }\n\n        if (selectedOptions.length) {\n          commandEntry += ` [${selectedOptions.join(\" + \")}]`;\n        }\n\n        allCommand.push(commandEntry);\n      }\n    });\n  }\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active, equippedDefault }) => active || equippedDefault)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allArmor = armor\n    ? armor\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_en, stackableCount, ...item }) =>\n            `${stackableCount} ${item[`name_${language}`] || name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allItems = [];\n  if (items?.length) {\n    items.forEach((item) => {\n      (item.selected || []).forEach((selectedItem) => {\n        allItems.push(\n          selectedItem.amount > 1\n            ? `${selectedItem.amount}x ` +\n                (selectedItem[`name_${language}`] || selectedItem.name_en)\n            : selectedItem[`name_${language}`] || selectedItem.name_en\n        );\n      });\n    });\n  }\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(({ name_en, strength, equipment, armor, options, ...item }) => {\n          let equipmentSelection = [];\n\n          if (equipment && equipment.length) {\n            equipment.forEach((option) => {\n              (option.active || option.equippedDefault) &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (armor && armor.length) {\n            armor.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (options && options.length) {\n            options.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n\n          return `${strength} ${item[`name_${language}`] || name_en}${\n            equipmentSelection.length\n              ? ` [${equipmentSelection\n                  .map((option) => option.replace(\", \", \" + \"))\n                  .join(\" + \")}]`\n              : \"\"\n          }`;\n        })\n    : [];\n  const lore = [];\n  if (activeLore) {\n    lore.push(\n      nameMap[activeLore][`name_${language}`] || nameMap[activeLore].name_en\n    );\n  } else if (lores?.length) {\n    lore.push(\n      nameMap[lores[0]][`name_${language}`] || nameMap[lores[0]].name_en\n    );\n  }\n\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allArmor,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allItems : []),\n    ...allDetachments,\n    ...lore,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \").replace(/\\*/g, \"\");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { Dialog } from \"../../components/dialog\";\nimport { ListItem } from \"../../components/list/ListItem\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList, moveUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeFromLocalList, updateLocalList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const location = useLocation();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault();\n    setIsDialogOpen(false);\n  };\n\n  const handleDeleteConfirm = () => {\n    setIsDialogOpen(false);\n    dispatch(deleteList(listId));\n    removeFromLocalList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"lords\",\n      armyPoints: list.points,\n      points: lordsPoints,\n      armyComposition: list.armyComposition,\n    });\n  const heroesData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"heroes\",\n      armyPoints: list.points,\n      points: heroesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const charactersData =\n    list.characters &&\n    getMaxPercentData({\n      type: \"characters\",\n      armyPoints: list.points,\n      points: charactersPoints,\n      armyComposition: list.armyComposition,\n    });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n    armyComposition: list.armyComposition,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n    armyComposition: list.armyComposition,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n    armyComposition: list.armyComposition,\n  });\n  const mercenariesData =\n    list.mercenaries &&\n    getMaxPercentData({\n      type: \"mercenaries\",\n      armyPoints: list.points,\n      points: mercenariesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const alliesData =\n    list.allies &&\n    getMaxPercentData({\n      type: \"allies\",\n      armyPoints: list.points,\n      points: alliesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.gameView\",\n      }),\n      icon: \"shield\",\n      to: `/game-view/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: () => setIsDialogOpen(true),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>\n        <p>\n          <FormattedMessage\n            id=\"editor.confirmDelete\"\n            values={{\n              list: <b>{list.name}</b>,\n            }}\n          />\n        </p>\n        <div className=\"editor__delete-dialog\">\n          <Button\n            type=\"text\"\n            onClick={handleDeleteClick}\n            icon=\"close\"\n            spaceTop\n            color=\"dark\"\n          >\n            <FormattedMessage id=\"misc.cancel\" />\n          </Button>\n          <Button\n            type=\"primary\"\n            submitButton\n            onClick={handleDeleteConfirm}\n            icon=\"delete\"\n            spaceTop\n          >\n            <FormattedMessage id=\"misc.delete\" />\n          </Button>\n        </div>\n      </Dialog>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.lords}\n              type=\"lords\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.heroes}\n              type=\"heroes\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.characters}\n              type=\"characters\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.core} type=\"core\" listId={listId} />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList\n            units={list.special}\n            type=\"special\"\n            listId={listId}\n          />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.rare} type=\"rare\" listId={listId} />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.allies && alliesData && list?.army !== \"daemons-of-chaos\" && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.allies}\n              type=\"allies\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.mercenaries &&\n          mercenariesData &&\n          list.armyComposition &&\n          list.army !== list.armyComposition && (\n            <section className=\"editor__section\">\n              <header className=\"editor__header\">\n                <h2>\n                  <FormattedMessage id=\"editor.mercenaries\" />\n                </h2>\n                <p className=\"editor__points\">\n                  {mercenariesData.diff > 0 ? (\n                    <>\n                      <strong>{mercenariesData.diff}</strong>\n                      <FormattedMessage id=\"editor.tooManyPoints\" />\n                      <Icon symbol=\"error\" color=\"red\" />\n                    </>\n                  ) : (\n                    <>\n                      <strong>\n                        {mercenariesData.points - mercenariesPoints}\n                      </strong>\n                      <FormattedMessage id=\"editor.availablePoints\" />\n                      <Icon symbol=\"check\" />\n                    </>\n                  )}\n                </p>\n              </header>\n\n              <OrderableUnitList\n                units={list.mercenaries}\n                type=\"mercenaries\"\n                listId={listId}\n              />\n\n              <Button\n                type=\"primary\"\n                centered\n                to={`/editor/${listId}/add/mercenaries`}\n                icon=\"add\"\n                spaceTop\n              >\n                <FormattedMessage id=\"editor.add\" />\n              </Button>\n            </section>\n          )}\n      </MainComponent>\n    </>\n  );\n};\n\n/**\n * @param {object} props\n * @param {object[]} props.units\n * @param {string} props.type\n * @param {string} props.listId\n */\nexport const OrderableUnitList = ({ units, type, listId }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n\n  const handleMoved = (indexes) =>\n    dispatch(\n      moveUnit({\n        listId,\n        type,\n        ...indexes,\n      })\n    );\n\n  return (\n    <OrderableList id={type} onMoved={handleMoved}>\n      {units.map((unit, index) => (\n        <ListItem\n          key={index}\n          to={`/editor/${listId}/${type}/${unit.id}`}\n          className=\"editor__list\"\n          active={location.pathname.includes(unit.id)}\n        >\n          <div className=\"editor__list-inner\">\n            {unit.strength || unit.minimum ? (\n              <span>{`${unit.strength || unit.minimum}`}</span>\n            ) : null}\n            <b>{unit[`name_${language}`] || unit.name_en}</b>\n            <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n          </div>\n          {getAllOptions(unit)}\n        </ListItem>\n      ))}\n    </OrderableList>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","export default __webpack_public_path__ + \"static/media/forg3d.33b515df.jpg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n// import { CustomEvent } from \"@piwikpro/react-piwik-pro\";\n\nimport { Button } from \"../../components/button\";\nimport { ListItem, OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport { setArmy } from \"../../state/army\";\nimport { setItems } from \"../../state/items\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\nimport forg3dBanner from \"../../assets/forg3d.jpg\";\nimport { swap } from \"../../utils/collection\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblin-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const resetState = () => {\n    dispatch(setArmy(null));\n    dispatch(setItems(null));\n  };\n  const handleListMoved = ({ sourceIndex, destinationIndex }) => {\n    const newLists = swap(lists, sourceIndex, destinationIndex);\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    return dispatch(setLists(newLists));\n  };\n  const handleForg3dClick = () => {\n    // CustomEvent.trackEvent(\"affiliate_link\", \"click\", \"forg3d\");\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer: The Old World and\n          Warhammer Fantasy Battles\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/\" />\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <OrderableList id=\"armies\" onMoved={handleListMoved}>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <ListItem\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n                onClick={resetState}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </ListItem>\n            )\n          )}\n        </OrderableList>\n        <Button\n          centered\n          to=\"/new\"\n          icon=\"new-list\"\n          spaceTop\n          onClick={resetState}\n          size=\"large\"\n        >\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n        <Button\n          centered\n          to=\"/import\"\n          type=\"text\"\n          icon=\"import\"\n          color=\"dark\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.import\" />\n        </Button>\n\n        <hr />\n\n        <p>\n          <b>\n            <i>\n              <FormattedMessage id=\"home.sponsored\" />\n            </i>\n          </b>\n        </p>\n        <a\n          className=\"home__banner-link\"\n          href=\"https://tinyurl.com/Forg3dOWB\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={handleForg3dClick}\n        >\n          <img\n            src={forg3dBanner}\n            className=\"home__banner-image\"\n            alt={intl.formatMessage({ id: \"home.forg3d\" })}\n            loading=\"lazy\"\n          />\n        </a>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitMagicPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport {\n  RulesIndex,\n  rulesMap,\n  RulesLinksText,\n  RulesWithIcon,\n} from \"../../components/rules-index\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { updateIds } from \"../../utils/id\";\nimport { normalizeRuleName } from \"../../utils/string\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachmentActive =\n    unit &&\n    unit?.options?.length > 0 &&\n    Boolean(\n      unit.options.find(\n        (option) => option.name_en === \"Detachment\" && option.active\n      )\n    );\n  // const detachments =\n  //   army &&\n  //   [...army.core, ...army.special, ...army.rare].filter(\n  //     (coreUnit) => coreUnit.detachment\n  //   );\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  // const handleAddDetachmentClick = ({ id }) => {\n  //   const detachment = detachments.find((detachment) => detachment.id === id);\n  //   const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n  //   unitDetachments.push({\n  //     id: `${id}.${getRandomId()}`,\n  //     name_de: detachment.name_de,\n  //     name_en: detachment.name_en,\n  //     points: detachment.points,\n  //     strength: detachment.minDetachmentSize || 5,\n  //     minDetachmentSize: detachment.minDetachmentSize || 5,\n  //     maxDetachmentSize: detachment.maxDetachmentSize,\n  //     equipment: detachment.equipment,\n  //     armor: detachment.armor,\n  //     options: detachment.options,\n  //   });\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDeleteDetachmentClick = ({ id }) => {\n  //   const unitDetachments = [...unit.detachments].filter(\n  //     (detachment) => detachment.id !== id\n  //   );\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDetachmentStrengthClick = ({ id, strength }) => {\n  //   const unitDetachments = [...unit.detachments].map((detachment) =>\n  //     detachment.id === id ? { ...detachment, strength } : detachment\n  //   );\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDetachmentEquipmentChange = ({\n  //   detachmentId,\n  //   equipmentId,\n  //   category,\n  //   isCheckbox,\n  // }) => {\n  //   const unitDetachments = [...unit.detachments].map((detachment) => {\n  //     if (detachment.id === detachmentId) {\n  //       const equipment = detachment[category].map((item) => {\n  //         let active = false;\n\n  //         if (isCheckbox && item.id === equipmentId) {\n  //           active = !item.active;\n  //         } else if (item.id === equipmentId) {\n  //           active = true;\n  //         } else if (isCheckbox) {\n  //           active = item.active;\n  //         }\n\n  //         return {\n  //           ...item,\n  //           active,\n  //         };\n  //       });\n\n  //       return { ...detachment, [category]: equipment };\n  //     }\n\n  //     return detachment;\n  //   });\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id, optionIndex) => {\n    let magicItems = unit.magic?.items || [];\n    let command;\n\n    if (optionIndex !== undefined) {\n      command = unit.command.map((commandOption) => {\n        if (commandOption.id === id) {\n          const options = commandOption.options.map((option, index) => {\n            if (index === optionIndex) {\n              return {\n                ...option,\n                active: option.active ? false : true,\n              };\n            }\n\n            return option;\n          });\n\n          return {\n            ...commandOption,\n            options,\n          };\n        }\n        return commandOption;\n      });\n    } else {\n      command = unit.command.map((option, index) => {\n        if (option.id === id) {\n          // Also remove banner runes\n          if (option.active) {\n            magicItems = magicItems.filter(({ command }) => command !== index);\n          }\n\n          return {\n            ...option,\n            active: option.active ? false : true,\n          };\n        }\n        return option;\n      });\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleArmorChange = (id) => {\n    const armor = unit.armor.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        armor,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n  const handleLoresChange = (lore) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        activeLore: lore,\n      })\n    );\n  };\n  const getPointsText = ({ points, perModel }) => {\n    if (points === 0) {\n      return intl.formatMessage({\n        id: \"app.free\",\n      });\n    }\n\n    return (\n      <>\n        {`${points} ${\n          points === 1\n            ? intl.formatMessage({\n                id: \"app.point\",\n              })\n            : intl.formatMessage({\n                id: \"app.points\",\n              })\n        }`}\n        {perModel &&\n          type !== \"characters\" &&\n          ` ${intl.formatMessage({\n            id: \"unit.perModel\",\n          })}`}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`] || unit.name_en}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <RulesIndex />\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          (!unit.lores || (unit.lores && !unit.lores.length)) &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.armor || (unit.armor && !unit.armor.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic ||\n            (unit.magic && !unit.magic.maxPoints && !unit.items?.length)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.notes && unit.notes.name_en ? (\n          <p className=\"unit__notes\">\n            <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n            {unit.notes[`name_${language}`] || unit.notes.name_en}\n          </p>\n        ) : null}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            {type !== \"characters\" && (\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n            )}\n            {unit.command.map(\n              (\n                {\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                  options,\n                  ...command\n                },\n                index\n              ) => {\n                const commandMagicPoints = getUnitMagicPoints({\n                  selected: magic?.selected,\n                });\n\n                return (\n                  <Fragment key={id}>\n                    <div\n                      className={classNames(\n                        \"checkbox\",\n                        type === \"characters\" && \"unit__bsb\"\n                      )}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                        disabled={detachmentActive}\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        <span className=\"unit__label-text\">\n                          <RulesWithIcon textObject={command} />\n                        </span>\n                        <i className=\"checkbox__points\">\n                          {getPointsText({ points })}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.types && magic.types.length && active ? (\n                      <>\n                        <hr className=\"unit__hr\" />\n                        <ListItem\n                          to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link unit__command-list\"\n                          active={location.pathname.includes(`magic/${index}`)}\n                          disabled={detachmentActive}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (itemType) =>\n                                    nameMap[itemType][`name_${language}`] ||\n                                    nameMap[itemType].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    unit.command[index].magic.maxPoints > 0 &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {commandMagicPoints}\n                              </span>{\" \"}\n                              {unit.command[index].magic.maxPoints > 0 && (\n                                <>{` / ${unit.command[index].magic.maxPoints}`}</>\n                              )}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints &&\n                              unit.command[index].magic.maxPoints > 0 && (\n                                <Icon\n                                  symbol=\"error\"\n                                  color=\"red\"\n                                  className=\"unit__magic-icon\"\n                                />\n                              )}\n                          </div>\n                          {magic?.selected && (\n                            <p>\n                              {magic.selected\n                                .map((selectedItem) =>\n                                  selectedItem.amount > 1\n                                    ? `${selectedItem.amount}x ` +\n                                      (selectedItem[`name_${language}`] ||\n                                        selectedItem.name_en)\n                                    : selectedItem[`name_${language}`] ||\n                                      selectedItem.name_en\n                                )\n                                .join(\", \")\n                                .replace(/\\*/g, \"\")}\n                            </p>\n                          )}\n                        </ListItem>\n                      </>\n                    ) : null}\n                    {options?.length > 0 && active && (\n                      <Fragment>\n                        {options.map((option, optionIndex) => {\n                          const exclusiveCheckedOption = options.find(\n                            (exclusiveOption) =>\n                              exclusiveOption.exclusive &&\n                              exclusiveOption.active\n                          );\n\n                          return (\n                            <div\n                              className=\"checkbox checkbox--conditional\"\n                              key={option.name_en}\n                            >\n                              <input\n                                type=\"checkbox\"\n                                id={`command-${id}-option-${optionIndex}`}\n                                value={`${id}-${optionIndex}`}\n                                onChange={() =>\n                                  handleCommandChange(id, optionIndex)\n                                }\n                                checked={Boolean(option.active)}\n                                className=\"checkbox__input\"\n                                disabled={\n                                  (exclusiveCheckedOption &&\n                                    option.exclusive &&\n                                    !option.active) ||\n                                  detachmentActive\n                                }\n                              />\n                              <label\n                                htmlFor={`command-${id}-option-${optionIndex}`}\n                                className=\"checkbox__label\"\n                              >\n                                <span className=\"unit__label-text\">\n                                  <RulesWithIcon textObject={option} />\n                                </span>\n                                <i className=\"checkbox__points\">\n                                  {getPointsText({ points: option.points })}\n                                </i>\n                              </label>\n                            </div>\n                          );\n                        })}\n                        <hr className=\"unit__command-option-hr\" />\n                      </Fragment>\n                    )}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      <RulesWithIcon textObject={equipment} />\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.armor && unit.armor.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.armor\" />\n            </h2>\n            {unit.armor.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`armor-${id}`}\n                    name=\"armor\"\n                    value={id}\n                    onChange={() => handleArmorChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`armor-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      <RulesWithIcon textObject={equipment} />\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n                ...equipment\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      <span className=\"unit__label-text\">\n                        <RulesWithIcon textObject={equipment} />\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      <span className=\"unit__label-text\">\n                        <RulesWithIcon textObject={equipment} />\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {/* {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_en, id, ...detachment }) => (\n              <Fragment key={id}>\n                <div className=\"list\">\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {detachment[`name_${language}`] || name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                      disabled={\n                        unit?.detachments?.length >= unit.maxDetachments\n                      }\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(\n                      ({\n                        name_en,\n                        strength,\n                        id,\n                        points,\n                        minDetachmentSize,\n                        maxDetachmentSize,\n                        equipment: detachmentEquipment,\n                        armor: detachmentArmor,\n                        options: detachmentOptions,\n                        ...detachment\n                      }) => (\n                        <div\n                          className=\"list unit__detachments-wrapper\"\n                          key={id}\n                        >\n                          <div className=\"list__inner unit__detachments\">\n                            <NumberInput\n                              noError\n                              id={`strength-${id}`}\n                              min={minDetachmentSize || 5}\n                              max={\n                                maxDetachmentSize ||\n                                Math.floor(unit.strength / 2)\n                              }\n                              value={strength}\n                              onChange={(event) =>\n                                handleDetachmentStrengthClick({\n                                  id,\n                                  strength: event.target.value,\n                                })\n                              }\n                            />\n                            <span>\n                              <b>{detachment[`name_${language}`] || name_en}</b>\n                              <i>{getPointsText({ points })}</i>\n                            </span>\n                            <Button\n                              onClick={() =>\n                                handleDeleteDetachmentClick({\n                                  id,\n                                })\n                              }\n                              type=\"secondary\"\n                              icon=\"close\"\n                              label={intl.formatMessage({ id: \"misc.remove\" })}\n                              size=\"small\"\n                            />\n                          </div>\n                          <div className=\"unit__detachments-section\">\n                            {detachmentEquipment &&\n                              detachmentEquipment.length > 0 && (\n                                <>\n                                  <h3 className=\"unit__subline\">\n                                    <FormattedMessage id=\"unit.equipment\" />\n                                  </h3>\n                                  {detachmentEquipment.map((equipment) => (\n                                    <div className=\"radio\" key={equipment.id}>\n                                      <input\n                                        type=\"radio\"\n                                        id={`equipment-${id}-${equipment.id}`}\n                                        name={`equipment-${id}`}\n                                        value={equipment.id}\n                                        onChange={() =>\n                                          handleDetachmentEquipmentChange({\n                                            detachmentId: id,\n                                            equipmentId: equipment.id,\n                                            category: \"equipment\",\n                                          })\n                                        }\n                                        checked={equipment.active || false}\n                                        className=\"radio__input\"\n                                      />\n                                      <label\n                                        htmlFor={`equipment-${id}-${equipment.id}`}\n                                        className=\"radio__label\"\n                                      >\n                                        <span className=\"unit__label-text\">\n                                          <RulesWithIcon\n                                            textObject={equipment}\n                                          />\n                                        </span>\n                                        <i className=\"checkbox__points\">\n                                          {getPointsText({\n                                            points: equipment.points,\n                                            perModel: equipment.perModel,\n                                          })}\n                                        </i>\n                                      </label>\n                                    </div>\n                                  ))}\n                                </>\n                              )}\n                            {detachmentArmor && detachmentArmor.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.armor\" />\n                                </h3>\n                                {detachmentArmor.map((armor) => (\n                                  <div className=\"radio\" key={armor.id}>\n                                    <input\n                                      type=\"radio\"\n                                      id={`armor-${id}-${armor.id}`}\n                                      name={`armor-${id}`}\n                                      value={armor.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: armor.id,\n                                          category: \"armor\",\n                                        })\n                                      }\n                                      checked={armor.active}\n                                      className=\"radio__input\"\n                                    />\n                                    <label\n                                      htmlFor={`armor-${id}-${armor.id}`}\n                                      className=\"radio__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        <RulesWithIcon textObject={armor} />\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: armor.points,\n                                          perModel: armor.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                            {detachmentOptions && detachmentOptions.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.options\" />\n                                </h3>\n                                {detachmentOptions.map((option) => (\n                                  <div className=\"checkbox\" key={option.id}>\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`options-${id}-${option.id}`}\n                                      value={option.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: option.id,\n                                          category: \"options\",\n                                          isCheckbox: true,\n                                        })\n                                      }\n                                      checked={option.active || false}\n                                      className=\"checkbox__input\"\n                                    />\n                                    <label\n                                      htmlFor={`options-${id}-${option.id}`}\n                                      className=\"checkbox__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        <RulesWithIcon textObject={option} />\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: option.points,\n                                          perModel: option.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )\n                    )}\n              </Fragment>\n            ))}\n          </>\n        )} */}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(({ points, id, active = false, ...mount }) => (\n              <div className=\"radio\" key={id}>\n                <input\n                  type=\"radio\"\n                  id={`mounts-${id}`}\n                  name=\"mounts\"\n                  value={id}\n                  onChange={() => handleMountsChange(id)}\n                  checked={active}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                  <span className=\"unit__label-text\">\n                    <RulesWithIcon textObject={mount} />\n                  </span>\n                  <i className=\"checkbox__points\">\n                    {getPointsText({ points })}\n                  </i>\n                </label>\n              </div>\n            ))}\n          </>\n        )}\n        {unit.lores && unit.lores.length ? (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.lore\" />\n            </h2>\n            {unit.lores.map((lore) => (\n              <div className=\"radio\" key={lore}>\n                <input\n                  type=\"radio\"\n                  id={`lore-${lore}`}\n                  name=\"lores\"\n                  value={lore}\n                  onChange={() => handleLoresChange(lore)}\n                  checked={(unit.activeLore || unit.lores[0]) === lore}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                  {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  {rulesMap[normalizeRuleName(nameMap[lore].name_en)] ? (\n                    <Button\n                      type=\"text\"\n                      className=\"unit__rules\"\n                      color=\"dark\"\n                      label={intl.formatMessage({ id: \"misc.showRules\" })}\n                      icon=\"preview\"\n                      onClick={() =>\n                        handleRulesClick({\n                          name: nameMap[lore].name_en,\n                        })\n                      }\n                    />\n                  ) : null}\n                </label>\n              </div>\n            ))}\n          </>\n        ) : null}\n        {unit.items && unit.items.length ? (\n          <hr className=\"unit__hr unit__hr--space-top\" />\n        ) : null}\n        {unit.items && unit.items.length\n          ? unit.items.map((item, itemIndex) => {\n              const itemsPoints = getUnitMagicPoints({\n                selected: item.selected,\n              });\n\n              return (\n                <ListItem\n                  to={`/editor/${listId}/${type}/${unitId}/items/${itemIndex}`}\n                  className=\"editor__list unit__link\"\n                  active={location.pathname.includes(`items/${itemIndex}`)}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span\n                        className={classNames(\n                          itemsPoints > item.maxPoints &&\n                            item.maxPoints > 0 &&\n                            \"editor__error\"\n                        )}\n                      >\n                        {itemsPoints}\n                      </span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                    {itemsPoints > item.maxPoints && item.maxPoints > 0 && (\n                      <Icon\n                        symbol=\"error\"\n                        color=\"red\"\n                        className=\"unit__magic-icon\"\n                      />\n                    )}\n                  </div>\n                  {item.selected && (\n                    <p>\n                      {item.selected\n                        .map((selectedItem) =>\n                          selectedItem.amount > 1\n                            ? `${selectedItem.amount}x ` +\n                              (selectedItem[`name_${language}`] ||\n                                selectedItem.name_en)\n                            : selectedItem[`name_${language}`] ||\n                              selectedItem.name_en\n                        )\n                        .join(\", \")\n                        .replace(/\\*/g, \"\")}\n                    </p>\n                  )}\n                </ListItem>\n              );\n            })\n          : null}\n        {unit.specialRules && unit.specialRules.name_en ? (\n          <>\n            <h2 className=\"unit__subline unit__subline--space-before\">\n              <FormattedMessage id=\"unit.specialRules\" />\n            </h2>\n            <p>\n              <RulesLinksText textObject={unit.specialRules} />\n            </p>\n          </>\n        ) : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n          interval={50}\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { loadScript } from \"../../utils/script\";\n\nimport \"./About.css\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    loadScript(\"https://www.paypalobjects.com/donate/sdk/donate-sdk.js\", () => {\n      window.PayPal.Donation.Button({\n        env: \"production\",\n        hosted_button_id: \"VU2Z6Q32Q656A\",\n        image: {\n          src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\",\n          alt: \"Donate with PayPal button\",\n          title: \"PayPal - The safer, easier way to pay online!\",\n        },\n      }).render(\"#donate-button\");\n    });\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/about\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.donation\" />\n        </p>\n        <div id=\"donate-button-container\" className=\"about__donation\">\n          <div id=\"donate-button\"></div>\n        </div>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.community\" />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.rulesIndex\"\n            values={{\n              rulesIndex: (\n                <a\n                  href=\"https://www.whfb.app/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Online Rules Index\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <br />\n        <p>\n          <b>\n            <FormattedMessage id=\"about.disclaimer\" />\n          </b>\n        </p>\n        <p>\n          Warhammer: the Old World, Citadel, Forge World, Games Workshop, GW,\n          Warhammer, the 'winged-hammer' Warhammer logo, the Chaos devices, the\n          Chaos logo, Citadel Device, the Double-Headed/Imperial Eagle device,\n          'Eavy Metal, Games Workshop logo, Golden Demon, Great Unclean One, the\n          Hammer of Sigmar logo, Horned Rat logo, Keeper of Secrets, Khemri,\n          Khorne, Lord of Change, Nurgle, Skaven, the Skaven symbol devices,\n          Slaanesh, Tomb Kings, Trio of Warriors, Twin Tailed Comet Logo,\n          Tzeentch, Warhammer Online, Warhammer World logo, White Dwarf, the\n          White Dwarf logo, and all associated logos, marks, names, races, race\n          insignia, characters, vehicles, locations, units, illustrations and\n          images from the Warhammer world are either ®, TM and/or © Copyright\n          Games Workshop Ltd 2000-2024, variably registered in the UK and other\n          countries around the world. Used without permission. No challenge to\n          their status intended. All Rights Reserved to their respective owners.\n        </p>\n      </Main>\n    </>\n  );\n};\n","export const loadScript = (src, done) => {\n  const js = document.createElement(\"script\");\n\n  js.src = src;\n  js.onload = function () {\n    done && done();\n  };\n  js.onerror = function () {\n    done && done(new Error(\"Failed to load script \" + src));\n  };\n  document.head.appendChild(js);\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { ListItem } from \"../../components/list\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nconst getArmyData = ({ data, armyComposition }) => {\n  // Remove units that don't belong to the army composition\n  const characters = data.characters.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const core = data.core.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const special = data.special.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const rare = data.rare.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n\n  // Get units moving category\n  const specialToCore = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"core\"\n  );\n  const rareToCore = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n  const rareToSpecial = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const coreToSpecial = core.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const specialToRare = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n\n  // Remove units from old category\n  const allCore = [...core, ...specialToCore, ...rareToCore].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"core\") ||\n      !unit.armyComposition\n  );\n  const allSpecial = [...special, ...coreToSpecial, ...rareToSpecial].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"special\") ||\n      !unit.armyComposition\n  );\n  const allRare = [...rare, ...specialToRare].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"rare\") ||\n      !unit.armyComposition\n  );\n\n  return {\n    lords: updateIds(data.lords),\n    heroes: updateIds(data.heroes),\n    characters: updateIds(characters),\n    core: updateIds(allCore),\n    special: updateIds(allSpecial),\n    rare: updateIds(allRare),\n    mercenaries: updateIds(data.mercenaries),\n    allies: updateIds(data.allies),\n  };\n};\n\nlet allAllies = [];\nlet allMercenaries = [];\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const [alliesLoaded, setAlliesLoaded] = useState(0);\n  const [mercenariesLoaded, setMercenariesLoaded] = useState(0);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const game = gameSystems.find((game) => game.id === list?.game);\n  const armyData = game?.armies.find((army) => army.id === list.army);\n  const allies = armyData?.allies;\n  const mercenaries = armyData?.mercenaries;\n  const handleAdd = (unit, ally) => {\n    const newUnit = {\n      ...unit,\n      army: ally,\n      id: `${unit.id}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit: newUnit }));\n    setRedirect(newUnit.id);\n  };\n  const getUnit = (unit, ally) => (\n    <ListItem key={unit.id} onClick={() => handleAdd(unit, ally)}>\n      <span className=\"unit__name\">\n        {unit.minimum ? `${unit.minimum} ` : null}\n        <b>{unit[`name_${language}`] || unit.name_en}</b>\n      </span>\n      <i className=\"unit__points\">{`${\n        unit.minimum ? unit.points * unit.minimum : unit.points\n      } ${intl.formatMessage({\n        id: \"app.points\",\n      })}`}</i>\n    </ListItem>\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    allAllies = [];\n    allMercenaries = [];\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list && !army && type !== \"allies\") {\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          const armyData = getArmyData({\n            data,\n            armyComposition: list.armyComposition || list.army,\n          });\n          dispatch(setArmy(armyData));\n        },\n      });\n    } else if (list && type === \"allies\" && allAllies.length === 0 && allies) {\n      setAlliesLoaded(false);\n      allies.forEach((ally, index) => {\n        fetcher({\n          url: `games/${list.game}/${ally}`,\n          onSuccess: (data) => {\n            const armyData = getArmyData({\n              data,\n              armyComposition: ally,\n            });\n            allAllies = [...allAllies, { ...armyData, ally }];\n            setAlliesLoaded(index + 1);\n          },\n        });\n      });\n    } else if (\n      list &&\n      type === \"mercenaries\" &&\n      allMercenaries.length === 0 &&\n      mercenaries\n    ) {\n      setMercenariesLoaded(false);\n      mercenaries[list.armyComposition] &&\n        mercenaries[list.armyComposition].forEach((mercenary, index) => {\n          fetcher({\n            url: `games/${list.game}/${mercenary.army}`,\n            onSuccess: (data) => {\n              const armyData = getArmyData({\n                data,\n                armyComposition: mercenary.army,\n              });\n              const allUnits = [\n                ...armyData.characters,\n                ...armyData.core,\n                ...armyData.special,\n                ...armyData.rare,\n              ];\n              const mercenaryUnits = allUnits.filter((unit) =>\n                mercenary.units.includes(unit.id)\n              );\n              allMercenaries = [...allMercenaries, ...mercenaryUnits].map(\n                (mercenaryUnit) => ({ ...mercenaryUnit, army: mercenary.army })\n              );\n              setMercenariesLoaded(index + 1);\n            },\n          });\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list, army, allies, type]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect}`} />;\n  }\n\n  if (\n    (!army && type !== \"allies\" && type !== \"mercenaries\") ||\n    (type === \"allies\" &&\n      !allies &&\n      alliesLoaded === 0 &&\n      allAllies.length !== allies?.length) ||\n    (type === \"mercenaries\" &&\n      !mercenaries &&\n      mercenariesLoaded === 0 &&\n      allMercenaries.length !== mercenaries?.length)\n  ) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        {type === \"allies\" && (\n          <>\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              <FormattedMessage id=\"add.alliesInfo\" />\n            </p>\n            <ul>\n              {allAllies.map(\n                ({ characters, core, special, rare, ally }, index) => (\n                  <Fragment key={index}>\n                    <header className=\"editor__header\">\n                      <h2>\n                        {game?.armies.find((army) => army.id === ally)[\n                          `name_${language}`\n                        ] ||\n                          game?.armies.find((army) => army.id === ally).name_en}\n                      </h2>\n                    </header>\n                    {characters.map((unit) => getUnit(unit, ally))}\n                    {core.map((unit) => getUnit(unit, ally))}\n                    {special.map((unit) => getUnit(unit, ally))}\n                    {rare.map((unit) => getUnit(unit, ally))}\n                  </Fragment>\n                )\n              )}\n            </ul>\n          </>\n        )}\n        {type === \"mercenaries\" && (\n          <ul>{allMercenaries.map((unit) => getUnit(unit, unit.army))}</ul>\n        )}\n        {type !== \"allies\" && type !== \"mercenaries\" && (\n          <ul>{army[type].map((unit) => getUnit(unit))}</ul>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/help\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { nameMap } from \"../magic\";\n\nconst getUnitsString = ({\n  units,\n  isShowList,\n  isCompactList,\n  showSpecialRules,\n  intl,\n  language,\n  showStats,\n}) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n      let optionsString = \"\";\n\n      if (allOptions) {\n        if (isCompactList) {\n          optionsString = `(${allOptions})\\n`;\n        } else {\n          optionsString = `- ${allOptions.split(\", \").join(\"\\n- \")}\\n`;\n        }\n      }\n      if (showSpecialRules && unit.specialRules) {\n        optionsString += `${intl.formatMessage({\n          id: \"unit.specialRules\",\n        })}: ${\n          unit.specialRules[`name_${language}`] || unit.specialRules.name_en\n        }\\n`;\n      }\n      if (showStats) {\n        // prettier-ignore\n        optionsString += `\n${intl.formatMessage({id: \"unit.m\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.ws\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.bs\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.s\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.t\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.w\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.i\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.a\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.ld\"})}(${'\\xa0'})\n`;\n      }\n\n      // prettier-ignore\n      return `${unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n}${unit[`name_${language}`] || unit.name_en}${isShowList ? '' : ' [' + getUnitPoints(unit) + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${optionsString}\n`;\n    })\n    .join(\"\");\n};\n\nexport const getListAsText = ({\n  list,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n  showSpecialRules,\n  showStats,\n}) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const armyCompositionString = armyCompositionName\n    ? `, ${armyCompositionName}`\n    : \"\";\n  let listString = \"\";\n\n  // HEADER\n  // prettier-ignore\n  if (!isCompactList) {\n    listString += `===\n${list.name}${isShowList ? '' : ' [' + allPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${game.name}, ${armyName}${armyCompositionString}\n===\n\n`;\n  }\n\n  // CHARACTERS\n  // prettier-ignore\n  if (list.characters?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})}${isShowList ? '' : ' [' + charactersPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.characters,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // LORDS\n  // prettier-ignore\n  if (list.lords?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})}${isShowList ? '' : ' [' + lordsPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.lords,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // HEROES\n  // prettier-ignore\n  if (list.heroes?.length) {\n      listString += `++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})}${isShowList ? '' : ' [' + heroesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.heroes,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // CORE\n  // prettier-ignore\n  if (list.core.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.core\",\n})}${isShowList ? '' : ' [' + corePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.core,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // SPECIAL\n  // prettier-ignore\n  if (list.special.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.special\",\n})}${isShowList ? '' : ' [' + specialPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.special,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // RARE\n  // prettier-ignore\n  if (list.rare.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})}${isShowList ? '' : ' [' + rarePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.rare,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // MERCENARIES\n  // prettier-ignore\n  if (list.mercenaries?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})}${isShowList ? '' : ' [' + mercenariesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.mercenaries,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // ALLIES\n  // prettier-ignore\n  if (list.allies?.length) {\n  listString += `++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})}${isShowList ? '' : ' [' + alliesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n\n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.allies,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  listString += `---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n\n  return listString;\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport { getListAsText } from \"./get-list-as-text\";\n// import { getListAsMarkdown } from \"./get-list-as-markdown\";\nimport \"./Export.css\";\n\nconst getFile = ({ list, listText, asText }) => {\n  const fileName = `${list?.name\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/,/g, \"\")}.${asText ? \"txt\" : \"owb.json\"}`;\n  const file = new File([asText ? listText : JSON.stringify(list)], fileName, {\n    type: asText ? \"text/plain\" : \"application/json\",\n  });\n  const fileUrl = URL.createObjectURL(file);\n\n  return {\n    file,\n    fileUrl,\n    fileName,\n  };\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const { listId } = useParams();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [shareOwbError, setOwbShareError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showStats, setShowStats] = useState(false);\n  const [isCompactList, setIsCompactList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  // const [isMarkdownList, setIsMarkdownList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({\n        list,\n        isShowList,\n        isCompactList,\n        showSpecialRules,\n        intl,\n        language,\n        showStats,\n      })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const { file, fileUrl, fileName } = getFile({ list });\n  const { fileName: textFileName, fileUrl: textFileUrl } = getFile({\n    list,\n    listText,\n    asText: true,\n  });\n  const share = async ({ asText }) => {\n    const shareData = {};\n\n    asText ? setShareError(false) : setOwbShareError(false);\n\n    if (asText) {\n      shareData.text = listText;\n    } else {\n      shareData.title = list.name;\n      shareData.files = [file];\n      shareData.text = list.description;\n    }\n\n    if (!navigator.canShare) {\n      asText ? setShareError(true) : setOwbShareError(true);\n      return;\n    }\n\n    try {\n      await navigator.share(shareData);\n    } catch (error) {\n      asText ? setShareError(true) : setOwbShareError(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.copyTitle\" />\n        </h2>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"compact\"\n            onChange={() => setIsCompactList(!isCompactList)}\n            checked={isCompactList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"compact\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.compactList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.compactListDescription\" />\n          </i>\n        </p>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.visibleListDescription\" />\n          </i>\n        </p>\n        {/* <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"forum\"\n            onChange={() => setIsForumList(!isForumList)}\n            checked={isForumList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"forum\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.forumText\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.forumTextDescription\" />\n          </i>\n        </p> */}\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"specialRules\"\n            onChange={() => setShowSpecialRules(!showSpecialRules)}\n            checked={showSpecialRules}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.specialRules\" />\n          </label>\n        </div>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"showStats\"\n            onChange={() => setShowStats(!showStats)}\n            checked={showStats}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"showStats\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.showStats\" />\n          </label>\n        </div>\n        <p className=\"export__description\"></p>\n        <Expandable headline={<FormattedMessage id=\"export.preview\" />}>\n          <textarea className=\"export__text\" value={listText} readOnly />\n        </Expandable>\n        <Button icon=\"share\" onClick={() => share({ asText: true })}>\n          <FormattedMessage id=\"export.shareText\" />\n        </Button>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          onClick={copyText}\n          spaceTop\n          spaceBottom\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        <br />\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button icon=\"download\" href={textFileUrl} download={textFileName}>\n          <FormattedMessage id=\"export.downloadAsText\" />\n        </Button>\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.owbTitle\" />\n        </h2>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.dowloadInfo\" />\n          </i>\n        </p>\n        <Button\n          icon=\"download\"\n          href={fileUrl}\n          download={fileName}\n          spaceBottom\n          spaceTop\n        >\n          <FormattedMessage id=\"export.download\" />\n        </Button>\n        <br />\n        <Button icon=\"share\" onClick={share}>\n          <FormattedMessage id=\"export.shareOwb\" />\n        </Button>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareOwbError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport \"./Stats.css\";\n\nexport const Stats = ({ values, isPrintPage }) => {\n  return (\n    <table className={classNames(\"stats\", isPrintPage && \"stats--print-page\")}>\n      <thead>\n        <tr>\n          <th>\n            <FormattedMessage id=\"unit.model\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.m\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.ws\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.bs\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.s\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.t\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.w\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.i\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.a\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"unit.ld\" />\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{values.name}</td>\n          <td>{values.M}</td>\n          <td>{values.WS}</td>\n          <td>{values.BS}</td>\n          <td>{values.S}</td>\n          <td>{values.T}</td>\n          <td>{values.W}</td>\n          <td>{values.I}</td>\n          <td>{values.A}</td>\n          <td>{values.LD}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStats.propTypes = {\n  values: PropTypes.object,\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Stats } from \"../../components/stats\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { nameMap } from \"../magic\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(true);\n  const [showStats, setShowStats] = useState(true);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return (\n      <Header\n        headline={intl.formatMessage({\n          id: \"print.title\",\n        })}\n      />\n    );\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const filters = [\n    {\n      name: intl.formatMessage({\n        id: \"export.specialRules\",\n      }),\n      id: \"specialRules\",\n      checked: showSpecialRules,\n      callback: () => {\n        setShowSpecialRules(!showSpecialRules);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showStats\",\n      }),\n      id: \"stats\",\n      checked: showStats,\n      callback: () => {\n        setShowStats(!showStats);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.visibleList\",\n      }),\n      description: intl.formatMessage({\n        id: \"export.visibleListDescription\",\n      }),\n      id: \"isShowList\",\n      checked: isShowList,\n      callback: () => {\n        setIsShowList(!isShowList);\n      },\n    },\n  ];\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n  const getSection = ({ type }) => {\n    const units = list[type];\n\n    return (\n      <ul>\n        {units.map((unit) => (\n          <li key={unit.id}>\n            <h3>\n              {unit.strength || unit.minimum ? (\n                <span className=\"print__strength\">\n                  {`${unit.strength || unit.minimum} `}\n                </span>\n              ) : null}\n              {unit[`name_${language}`] || unit.name_en}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h3>\n            {getAllOptions(unit, { noMagic: isShowList })}\n            {showSpecialRules && unit.specialRules ? (\n              <p className=\"print__special-rules\">\n                <i>\n                  <b>\n                    <FormattedMessage id=\"unit.specialRules\" />:\n                  </b>{\" \"}\n                  {unit.specialRules[`name_${language}`] ||\n                    unit.specialRules.name_en}\n                </i>\n              </p>\n            ) : null}\n            {showStats && (\n              <Stats\n                isPrintPage\n                values={{\n                  name: \"\",\n                  M: \"\",\n                  WS: \"\",\n                  BS: \"\",\n                  S: \"\",\n                  T: \"\",\n                  W: \"\",\n                  I: \"\",\n                  A: \"\",\n                  LD: \"\",\n                }}\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"print.title\",\n          })}\n          filters={filters}\n        />\n\n        <Button\n          onClick={handlePrintClick}\n          centered\n          icon=\"print\"\n          spaceTop\n          spaceBottom\n          size=\"large\"\n          disabled={isPrinting}\n        >\n          {isPrinting ? (\n            <FormattedMessage id=\"print.printing\" />\n          ) : (\n            <FormattedMessage id=\"misc.print\" />\n          )}\n        </Button>\n        <h2>\n          <FormattedMessage id=\"print.preview\" />\n        </h2>\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n          {armyCompositionName ? `, ${armyCompositionName}` : \"\"}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          list.characters.length > 0 && (\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              {getSection({ type: \"characters\" })}\n            </section>\n          )\n        ) : (\n          <>\n            {list.lords.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.lords\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"lords\" })}\n              </section>\n            )}\n\n            {list.heroes.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"heroes\" })}\n              </section>\n            )}\n          </>\n        )}\n\n        {list.core.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.core\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{corePoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"core\" })}\n          </section>\n        )}\n\n        {list.special.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.special\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{specialPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"special\" })}\n          </section>\n        )}\n\n        {list.rare.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{rarePoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"rare\" })}\n          </section>\n        )}\n\n        {list.game === \"the-old-world\" && (\n          <>\n            {list.allies.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.allies\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"allies\" })}\n              </section>\n            )}\n\n            {list.mercenaries.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"mercenaries\" })}\n              </section>\n            )}\n          </>\n        )}\n        <div className=\"print-footer\">\n          <p>\n            <FormattedMessage id=\"export.createdWith\" />{\" \"}\n            <b>\"Old World Builder\"</b>\n          </p>\n          <p>\n            [\n            <a href=\"https://old-world-builder.com\">\n              <i>old-world-builder.com</i>\n            </a>\n            ]\n          </p>\n        </div>\n      </main>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list?.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <Button centered icon=\"duplicate\" submitButton size=\"large\">\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[`name_${language}`] || unit.name_en : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  name_es: \"\",\n  name_fr: \"\",\n  name_it: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  regimentalUnit: false,\n  detachment: false,\n  command: [],\n  equipment: [],\n  armor: [],\n  options: [],\n  mounts: [],\n  items: [],\n  lores: [],\n  specialRules: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n  notes: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"armor-mages\",\n  \"talisman\",\n  \"banner\",\n  \"arcane-item\",\n  \"enchanted-item\",\n  \"weapon-runes\",\n  \"armor-runes\",\n  \"banner-runes\",\n  \"talismanic-runes\",\n  \"engineering-runes\",\n  \"triptych\",\n  \"knightly-virtue\",\n  \"knightly-virtue-character\",\n  \"chaos-mutation\",\n  \"chaos-mutation-character\",\n  \"chaos-mutation-chieftain\",\n  \"gift-of-chaos\",\n  \"forest-spite\",\n  \"vampiric-power\",\n  \"daemonic-gift\",\n];\nconst loresOfMagic = [\n  \"daemonology\",\n  \"dark-magic\",\n  \"elementalism\",\n  \"battle-magic\",\n  \"high-magic\",\n  \"illusion\",\n  \"necromancy\",\n  \"waaagh-magic\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleSpecialRulesChange = ({ field, key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        [field]: value,\n      },\n    });\n  };\n  const handleSpecialRulesBlur = ({ key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        name_de: !unit[key].name_de ? value : unit[key].name_de,\n        name_es: !unit[key].name_es ? value : unit[key].name_es,\n        name_fr: !unit[key].name_fr ? value : unit[key].name_fr,\n        name_it: !unit[key].name_it ? value : unit[key].name_it,\n      },\n    });\n  };\n  const handleCheckboxChange = ({ field, value }) => {\n    setUnit({\n      ...unit,\n      [field]: value,\n    });\n  };\n  const handleLoresOfMagicChange = ({ lore }) => {\n    if (unit.lores.includes(lore)) {\n      setUnit({\n        ...unit,\n        lores: unit.lores.filter((loreName) => loreName !== lore),\n      });\n    } else {\n      setUnit({\n        ...unit,\n        lores: [...unit.lores, lore],\n      });\n    }\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n      name_es: !unit.name_es ? unit.name_en : unit.name_es,\n      name_fr: !unit.name_fr ? unit.name_en : unit.name_fr,\n      name_it: !unit.name_it ? unit.name_en : unit.name_it,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelDelete = ({ index, key }) => {\n    setUnit({\n      ...unit,\n      [key]: unit[key].filter((_, entryIndex) => entryIndex !== index),\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n          name_es: !entry.name_es ? value : entry.name_es,\n          name_fr: !entry.name_fr ? value : entry.name_fr,\n          name_it: !entry.name_it ? value : entry.name_it,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleItemsChange = ({ value, type, itemIndex }) => {\n    const newEntries = unit.items.map((entry, entryIndex) => {\n      if (itemIndex === entryIndex) {\n        return {\n          ...entry,\n          types:\n            value === \"on\"\n              ? [...unit.items[itemIndex].types, type]\n              : unit.items[itemIndex].types.filter((name) => name !== type),\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      items: newEntries,\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewArmor = () => {\n    setUnit({\n      ...unit,\n      armor: [\n        ...unit.armor,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewMagicItemCategory = () => {\n    setUnit({\n      ...unit,\n      items: [\n        ...unit.items,\n        {\n          name_en: \"Magic Items\",\n          name_de: \"Magische Gegenstände\",\n          name_es: \"Objetos mágicos\",\n          name_fr: \"Objets magiques\",\n          name_it: \"Oggetti magici\",\n          types: [],\n          selected: [],\n          maxPoints: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_es-${randomId}`}>Name Spanish</label>\n      <input\n        type=\"text\"\n        id={`name_es-${randomId}`}\n        className=\"input\"\n        value={unit.name_es}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_fr-${randomId}`}>Name French</label>\n      <input\n        type=\"text\"\n        id={`name_fr-${randomId}`}\n        className=\"input\"\n        value={unit.name_fr}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_it-${randomId}`}>Name Italian</label>\n      <input\n        type=\"text\"\n        id={`name_it-${randomId}`}\n        className=\"input\"\n        value={unit.name_it}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>\n        {type === \"characters\" ? \"Points\" : \"Points per model\"}\n      </label>\n      <NumberInput\n        id={`points-${randomId}`}\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`regimentalUnit-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"regimentalUnit\",\n                  value: !unit.regimentalUnit,\n                })\n              }\n              checked={unit.regimentalUnit}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`regimentalUnit-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit can have detachments\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`detachment-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"detachment\",\n                  value: !unit.detachment,\n                })\n              }\n              checked={unit.detachment}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`detachment-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit is a detachment\n            </label>\n          </div>\n        </>\n      )}\n      {type === \"characters\" && (\n        <Expandable headline=\"Allowed Lores of Magic\">\n          {loresOfMagic.map((lore, loreIndex) => (\n            <div className=\"checkbox\" key={lore}>\n              <input\n                type=\"checkbox\"\n                id={`${lore}-${loreIndex}-${randomId}`}\n                onChange={() =>\n                  handleLoresOfMagicChange({\n                    lore,\n                  })\n                }\n                checked={unit.lores.includes(lore)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${lore}-${loreIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {lore}\n              </label>\n            </div>\n          ))}\n        </Expandable>\n      )}\n      <Expandable headline=\"Special Rules\">\n        <label htmlFor={`specialRules-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`specialRules-en-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`specialRules-de-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`specialRules-es-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`specialRules-fr-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`specialRules-it-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n      <Expandable headline=\"Notes\">\n        <label htmlFor={`notes-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`notes-en-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`notes-de-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`notes-es-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`notes-fr-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`notes-it-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command?.magic?.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command?.magic?.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  min={0}\n                  value={command?.magic?.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"command\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Weapon</h3>\n      <p className=\"datasets__paragraph\">\n        All weapon options are mutually exclusive and please add a default\n        weapon.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`equipment-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"equipment\",\n                    field: \"perModel\",\n                    value: !equipment.perModel,\n                  })\n                }\n                checked={equipment.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`equipment-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              icon=\"delete\"\n              spaceTop\n              onClick={() =>\n                handleSecondLevelDelete({ index, key: \"equipment\" })\n              }\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New weapon\n      </Button>\n\n      <hr />\n\n      <h3>Armor</h3>\n      <p className=\"datasets__paragraph\">\n        All armor options are mutually exclusive and please add a default armor.\n        <br />\n        <i>(e.g. \"Light armour\" or \"Heavy armour\")</i>\n      </p>\n      {unit.armor.map((armor, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`armor-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"armor\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`armor-points${index}-${randomId}`}\n            value={armor.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`armor-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"armor\",\n                    field: \"perModel\",\n                    value: !armor.perModel,\n                  })\n                }\n                checked={armor.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`armor-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`armor-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"armor\",\n                  field: \"active\",\n                  value: !armor.active,\n                })\n              }\n              checked={armor.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`armor-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Light armour\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"armor\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewArmor}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New armor\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`options-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"perModel\",\n                    value: !option.perModel,\n                  })\n                }\n                checked={option.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`options-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"options\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      {type === \"characters\" ? (\n        <>\n          <hr />\n\n          <h3>Mounts</h3>\n          <p className=\"datasets__paragraph\">\n            All mount options are mutually exclusive and please add a default\n            mount.\n            <br />\n            <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n          </p>\n          {unit.mounts.map((mount, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"mounts\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`mounts-points${index}-${randomId}`}\n                value={mount.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mounts-active${index}-${randomId}`}\n                  onChange={() =>\n                    handleSecondLevelFieldChange({\n                      index,\n                      key: \"mounts\",\n                      field: \"active\",\n                      value: !mount.active,\n                    })\n                  }\n                  checked={mount.active}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mounts-active${index}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Selected by default\n                </label>\n              </div>\n              <p>\n                <i>(e.g. when \"On foot\" is the default mount)</i>\n              </p>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  spaceTop\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"mounts\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewMount}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New mount\n          </Button>\n        </>\n      ) : null}\n      <hr />\n\n      <h3>(Magic) items</h3>\n      <p className=\"datasets__paragraph\">\n        Specify what types of items are allowed. Can also be used for chaos\n        mutations, knightly vitues or similar.\n      </p>\n      {unit.items && unit.items.length\n        ? unit.items.map((item, itemIndex) => (\n            <div className=\"entity__second-level\" key={itemIndex}>\n              <label htmlFor={`magic-name_en-${itemIndex}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_en-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_de-${itemIndex}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_de-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_es-${itemIndex}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_es-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_fr-${itemIndex}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_fr-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_it-${itemIndex}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_it-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <Expandable headline=\"Allowed (magic) item types\">\n                {magicItemTypes.map((type, typeIndex) => (\n                  <div className=\"checkbox\" key={type}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleItemsChange({\n                          value: item.types.includes(type) ? \"off\" : \"on\",\n                          type,\n                          itemIndex,\n                        })\n                      }\n                      checked={item.types.includes(type)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {type}\n                    </label>\n                  </div>\n                ))}\n              </Expandable>\n              <label htmlFor={`magic-points-${randomId}`}>Max. points</label>\n              <NumberInput\n                id={`magic-points-${itemIndex}-${randomId}`}\n                min={0}\n                value={item.maxPoints}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"maxPoints\",\n                    value: Number(event.target.value),\n                  })\n                }\n              />\n            </div>\n          ))\n        : null}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMagicItemCategory}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New category\n      </Button>\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n    </form>\n  );\n};\n","import { Fragment } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./UnitPreview.css\";\n\nexport const UnitPreview = ({ unit, coreUnits, onClose }) => {\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const detachments = coreUnits.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n\n  return (\n    <>\n      <button onClick={onClose} className=\"unit-preview-background\" />\n      <div className=\"unit-preview\">\n        <>\n          <Header\n            isSection\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n          <Button\n            className=\"unit-preview__close\"\n            icon=\"close\"\n            type=\"text\"\n            label=\"Close preview\"\n            color=\"dark\"\n            onClick={onClose}\n          />\n\n          {!unit.minimum &&\n            (!unit.lores || (unit.lores && !unit.lores.length)) &&\n            (!unit.command || (unit.command && !unit.command.length)) &&\n            (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n            (!unit.armor || (unit.armor && !unit.armor.length)) &&\n            (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n            (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n            (!unit.items || (unit.items && !unit.items.length)) &&\n            (!unit.options || (unit.options && !unit.options.length)) && (\n              <i className=\"unit__empty\">\n                <FormattedMessage id=\"unit.noOptions\" />\n              </i>\n            )}\n          {unit.notes && unit.notes.name_en ? (\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              {unit.notes[`name_${language}`] || unit.notes.name_en}\n            </p>\n          ) : null}\n          {unit.minimum ? (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                <FormattedMessage id=\"unit.unitSize\" />\n              </label>\n              <NumberInput\n                id=\"strength\"\n                min={unit.minimum}\n                max={unit.maximum}\n                value={unit.strength}\n                onChange={() => {}}\n                noError\n              />\n            </>\n          ) : null}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n              {unit.command.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    active = false,\n                    magic,\n                    ...command\n                  },\n                  index\n                ) => {\n                  let commandMagicPoints = 0;\n\n                  if (unit.magic && unit.magic.items) {\n                    unit.magic.items\n                      .filter((item) => item.command === index)\n                      .forEach(({ points }) => {\n                        commandMagicPoints = commandMagicPoints + points;\n                      });\n                  }\n\n                  return (\n                    <Fragment key={index}>\n                      <div className=\"checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          id={`command-${index}`}\n                          defaultChecked={active}\n                          className=\"checkbox__input\"\n                        />\n                        <label\n                          htmlFor={`command-${index}`}\n                          className=\"checkbox__label\"\n                        >\n                          {command[`name_${language}`] || name_en}\n                          <i className=\"checkbox__points\">\n                            {`${points} ${\n                              points === 1\n                                ? intl.formatMessage({\n                                    id: \"app.point\",\n                                  })\n                                : intl.formatMessage({\n                                    id: \"app.points\",\n                                  })\n                            }`}\n                            {perModel &&\n                              ` ${intl.formatMessage({\n                                id: \"unit.perModel\",\n                              })}`}\n                          </i>\n                        </label>\n                      </div>\n                      {magic?.maxPoints && active ? (\n                        <ListItem\n                          className=\"editor__list unit__link\"\n                          active={false}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (type) =>\n                                    nameMap[type][`name_${language}`] ||\n                                    nameMap[type].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {getUnitCommandPoints(\n                                  unit?.magic?.selected.filter(\n                                    ({ command }) => command === index\n                                  )\n                                )}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {unit?.magic?.items && (\n                            <p>\n                              {unit.magic.items\n                                .filter(({ command }) => command === index)\n                                .map(\n                                  ({ name_en, ...item }) =>\n                                    item[`name_${language}`] || name_en\n                                )\n                                .join(\", \")}\n                            </p>\n                          )}\n                        </ListItem>\n                      ) : null}\n                    </Fragment>\n                  );\n                }\n              )}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.equipment\" />\n              </h2>\n              {unit.equipment.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${index}`}\n                      name=\"equipment\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label\n                      htmlFor={`equipment-${index}`}\n                      className=\"radio__label\"\n                    >\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.armor && unit.armor.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.armor\" />\n              </h2>\n              {unit.armor.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`armor-${index}`}\n                      name=\"armor\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`armor-${index}`} className=\"radio__label\">\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.options\" />\n              </h2>\n              {unit.options.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    stackable,\n                    maximum,\n                    minimum = 0,\n                    stackableCount = minimum || 0,\n                    active = false,\n                    ...equipment\n                  },\n                  index\n                ) =>\n                  !stackable ? (\n                    <div className=\"checkbox\" key={index}>\n                      <input\n                        type=\"checkbox\"\n                        id={`options-${index}`}\n                        defaultChecked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"checkbox__label\"\n                      >\n                        {equipment[`name_${language}`] || name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                  ) : (\n                    <Fragment key={index}>\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"unit__special-option\"\n                      >\n                        {equipment[`name_${language}`] || name_en}:\n                        <i className=\"checkbox__points\">\n                          {`${points} ${intl.formatMessage({\n                            id: \"app.points\",\n                          })} ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                        </i>\n                      </label>\n                      <NumberInput\n                        id={`options-${index}`}\n                        min={minimum}\n                        max={maximum}\n                        value={stackableCount}\n                        onChange={() => {}}\n                      />\n                    </Fragment>\n                  )\n              )}\n            </>\n          )}\n          {unit.regimentalUnit && (\n            <>\n              <h2 className=\"unit__subline unit__detachments-headline\">\n                <FormattedMessage id=\"unit.detachments\" />\n              </h2>\n              {detachments.map(({ name_en, id, ...regiment }) => (\n                <>\n                  <div className=\"list\" key={id}>\n                    <div className=\"list__inner unit__detachments-header\">\n                      <b className=\"unit__magic-headline\">\n                        {regiment[`name_${language}`] || name_en}\n                      </b>\n                      <Button\n                        type=\"secondary\"\n                        icon=\"add\"\n                        label={intl.formatMessage({ id: \"editor.add\" })}\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                  {unit.detachments &&\n                    unit.detachments\n                      .filter(\n                        (detachment) =>\n                          detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                      )\n                      .map(\n                        ({ name_en, strength, id, points, ...detachment }) => (\n                          <div className=\"list\" key={id}>\n                            <div className=\"list__inner unit__detachments\">\n                              <NumberInput\n                                id={`strength-${id}`}\n                                min={5}\n                                value={strength}\n                                onChange={() => {}}\n                              />\n                              <span>\n                                <b>\n                                  {detachment[`name_${language}`] || name_en}\n                                </b>\n                                <i>{`${getUnitPoints({\n                                  strength,\n                                  points,\n                                })} ${intl.formatMessage({\n                                  id: \"app.points\",\n                                })}`}</i>\n                              </span>\n                              <Button\n                                type=\"secondary\"\n                                icon=\"close\"\n                                label={intl.formatMessage({\n                                  id: \"misc.remove\",\n                                })}\n                                size=\"small\"\n                              />\n                            </div>\n                          </div>\n                        )\n                      )}\n                </>\n              ))}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.mount\" />\n              </h2>\n              {unit.mounts.map(\n                ({ name_en, points, active = false, ...mounts }, index) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`mounts-${index}`}\n                      name=\"mounts\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`mounts-${index}`} className=\"radio__label\">\n                      {mounts[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                        {\n                          id: \"app.points\",\n                        }\n                      )}`}</i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.lores && unit.lores.length ? (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.lore\" />\n              </h2>\n              {unit.lores.map((lore) => (\n                <div className=\"radio\" key={lore}>\n                  <input\n                    type=\"radio\"\n                    id={`lore-${lore}`}\n                    name=\"lores\"\n                    value={lore}\n                    onChange={() => {}}\n                    checked={(unit.activeLore || unit.lores[0]) === lore}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                    {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  </label>\n                </div>\n              ))}\n            </>\n          ) : null}\n          {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n          {unit.items && unit.items.length\n            ? unit.items.map((item, itemIndex) => (\n                <ListItem\n                  className=\"editor__list unit__link\"\n                  active={false}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span>{magicPoints}</span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                  </div>\n                  {item.items && (\n                    <p>\n                      {item.items\n                        .map(\n                          ({ name_en, ...entity }) =>\n                            entity[`name_${language}`] || name_en\n                        )\n                        .join(\", \")}\n                    </p>\n                  )}\n                </ListItem>\n              ))\n            : null}\n          {unit.specialRules && unit.specialRules.name_en ? (\n            <>\n              <h2 className=\"unit__subline unit__subline--space-before\">\n                <FormattedMessage id=\"unit.specialRules\" />\n              </h2>\n              <p>\n                {unit.specialRules[`name_${language}`] ||\n                  unit.specialRules.name_en}\n              </p>\n            </>\n          ) : null}\n        </>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport { UnitPreview } from \"./UnitPreview\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUnit, setPreviewUnit] = useState(null);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"empire-of-man\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handlePreview = ({ unit }) => {\n    setPreviewUnit(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/datasets\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main className=\"datasets\">\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually).\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"empire-of-man\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <>\n                {dataset.characters.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Characters</h3>\n                )}\n                <ul>\n                  {dataset.characters.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({\n                                  type: \"characters\",\n                                  id: unit.id,\n                                })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"characters\"\n                        onSubmit={handleSubmit}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.core.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Core Units</h3>\n                )}\n                <ul>\n                  {dataset.core.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"core\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"core\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.special.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Special Units</h3>\n                )}\n                <ul>\n                  {dataset.special.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"special\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"special\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.rare.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n                )}\n                <ul>\n                  {dataset.rare.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"rare\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"rare\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n              </>\n            )}\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy JSON\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p className=\"datasets__paragraph\">\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n            <textarea\n              className=\"datasets__output\"\n              rows=\"10\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n          </section>\n        </div>\n\n        {previewUnit ? (\n          <UnitPreview\n            unit={{ ...previewUnit, strength: 0 }}\n            onClose={() => setPreviewUnit(null)}\n            coreUnits={dataset.core}\n          />\n        ) : null}\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n// import { loadScript } from \"../../utils/script\";\n\n// window[\"stg\"] = window[\"stg\"] || {};\n// window[\"stg\"].optedOutCheckboxText = \"You're opted out. Uncheck to opt in.\";\n// window[\"stg\"].optedInCheckboxText = \"Opt out of data collection and usage\";\n// window[\"stg\"].isGlobal = false;\n// window[\"stg\"].instanceHostname = \"https://owb.containers.piwik.pro\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n  // const handleOptOut = () => {\n  //   window.parent.storeUserOptOutPreferences();\n  // };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // loadScript(\"https://owb.containers.piwik.pro/privacy/script.v2.js\");\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/privacy\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>{\" \"}\n            (Android App)\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>{\" \"}\n            (error tracking)\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        {/* <h3>Piwik PRO Analytics</h3>\n        <p>\n          We use Piwik PRO Analytics Suite as our website/app analytics\n          software. The collected information may include an anonymized\n          visitor's IP address, operating system, browser ID, browsing activity\n          and other information. See the{\" \"}\n          <a\n            href=\"https://help.piwik.pro/support/getting-started/what-data-does-piwik-pro-collect/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            scope of data collected by Piwik PRO\n          </a>\n          .\n        </p>\n        <p>\n          We calculate metrics like bounce rate, page views, sessions and the\n          like to understand how our website/app is used.\n        </p>\n        <p>\n          We host our solution on Microsoft Azure in Germany/Netherlands/United\n          States/Hong Kong/ElastX in Sweden, and the data is stored for 14/25\n          months.\n        </p>\n        <p>\n          The purpose of data processing: analytics. Legal basis: Art. 6 (1)(a)\n          GDPR.\n        </p>\n        <p>\n          Piwik PRO does not send the data about you to any other sub-processors\n          or third parties and does not use it for its own purposes. For more,\n          read{\" \"}\n          <a\n            href=\"https://piwik.pro/privacy-policy/?pk_vid=b9514cbe42ac928e17075637164eac6f#product\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Piwik PRO's privacy policy\n          </a>\n          .\n        </p> */}\n\n        {/* <div id=\"_stg_opt_out_iframe_content\" style={{ display: \"none\" }}>\n          <p>\n            Privacy on this site: We collect and process your data on this site\n            to better understand how it is used. You can opt-in or opt-out at\n            any time.\n          </p>\n          <div className=\"checkbox\">\n            <input\n              id=\"_stg_optout_checkbox\"\n              onChange={handleOptOut}\n              type=\"checkbox\"\n              className=\"checkbox__input\"\n            />\n            <label\n              className=\"checkbox__label\"\n              id=\"_stg_optout_checkbox_label\"\n              htmlFor=\"_stg_optout_checkbox\"\n            ></label>\n          </div>\n        </div> */}\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/changelog\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact className=\"changelog\">\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n\n        <hr />\n\n        <h3>v1.0</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change28\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change29\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change30\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change31\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change32\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change33\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change34\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change35\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.14</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-04 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change26\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change27\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.13</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-02 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change24\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change25\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.12</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-31 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change22\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                rulesIndex: (\n                  <a\n                    href=\"https://www.whfb.app/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <b>Online Rules Index</b>\n                  </a>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change23\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.11</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-28 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change21\" />\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"changelog.change17\" />\n          </b>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change18\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change19\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change20\" />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.10</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-22 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change12\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change13\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change14\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change15\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change16\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.8</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change11\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.7</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-17 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change9\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change10\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                about: (\n                  <Link to=\"/about\">\n                    <FormattedMessage id=\"footer.about\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.6</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-14 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change8\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.5</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-13 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change4\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change5\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change6\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n        <p>\n          <i>\n            <FormattedMessage\n              id=\"changelog.change7\"\n              values={{\n                discord: (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://discord.gg/87nUyjUxTU\"\n                  >\n                    Discord\n                  </a>\n                ),\n              }}\n            />\n          </i>\n        </p>\n\n        <hr />\n\n        <h3>v0.4</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, createRef, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Import.css\";\n\nexport const Import = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(false);\n  const [typeError, setTypeError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const fileInput = createRef();\n  const handleListChange = () => {\n    const files = fileInput.current.files;\n\n    if (files.length > 0) {\n      if (\"application/json\" === files[0].type) {\n        setTypeError(false);\n        setList(files[0]);\n      } else {\n        setTypeError(true);\n      }\n    }\n  };\n  const handleSubmit = (event) => {\n    const reader = new FileReader();\n\n    setError(false);\n    reader.readAsText(list, \"UTF-8\");\n    reader.onload = (event) => {\n      const newId = getRandomId();\n      const importedList = { ...JSON.parse(event.target.result), id: newId };\n      const newLists = [...lists, importedList];\n\n      localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n      dispatch(setLists(newLists));\n      setRedirect(importedList.id);\n    };\n    reader.onerror = () => {\n      setError(true);\n    };\n\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"import.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"import.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"import\">\n          <label htmlFor=\"list\">\n            <FormattedMessage id=\"import.description\" />\n          </label>\n          <input\n            type=\"file\"\n            accept=\".json, application/json\"\n            id=\"list\"\n            className=\"input\"\n            onChange={handleListChange}\n            autoComplete=\"off\"\n            required\n            ref={fileInput}\n          />\n          {typeError && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"import.typeError\" />\n            </p>\n          )}\n          {error && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"export.error\" />\n            </p>\n          )}\n          <Button centered icon=\"add-list\" submitButton spaceTop size=\"large\">\n            <FormattedMessage id=\"import.button\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Stats } from \"../../components/stats\";\nimport {\n  RulesIndex,\n  RulesLinksText,\n  RulesWithIcon,\n} from \"../../components/rules-index\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./GameView.css\";\n\nexport const GameView = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [showPoints, setShowPoints] = useState(true);\n  const [showSpecialRules, setShowSpecialRules] = useState(true);\n  const [showStats, setShowStats] = useState(true);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const filters = [\n    {\n      name: intl.formatMessage({\n        id: \"export.specialRules\",\n      }),\n      id: \"specialRules\",\n      checked: showSpecialRules,\n      callback: () => {\n        setShowSpecialRules(!showSpecialRules);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showStats\",\n      }),\n      id: \"stats\",\n      checked: showStats,\n      callback: () => {\n        setShowStats(!showStats);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showPoints\",\n      }),\n      id: \"points\",\n      checked: showPoints,\n      callback: () => {\n        setShowPoints(!showPoints);\n      },\n    },\n  ];\n  const getSection = ({ type }) => {\n    const units = list[type];\n\n    return (\n      <ul>\n        {units.map((unit, index) => (\n          <li key={index} className=\"list\">\n            <div className=\"list__inner game-view__list-inner\">\n              <h3>\n                {unit.strength || unit.minimum ? (\n                  <span className=\"game-view__strength\">\n                    {`${unit.strength || unit.minimum} `}\n                  </span>\n                ) : null}\n                {unit[`name_${language}`] || unit.name_en}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h3>\n              <div className=\"game-view__details\">\n                <RulesWithIcon\n                  textObject={{\n                    name_en: getAllOptions(unit, {\n                      language: \"en\",\n                      asString: true,\n                    }),\n                    name_de: getAllOptions(unit, { asString: true }),\n                  }}\n                />\n                {showSpecialRules && unit.specialRules ? (\n                  <p className=\"game-view__special-rules\">\n                    <b>\n                      <i>\n                        <FormattedMessage id=\"unit.specialRules\" />:\n                      </i>\n                    </b>{\" \"}\n                    <RulesLinksText textObject={unit.specialRules} />\n                  </p>\n                ) : null}\n                {showStats && (\n                  <Stats\n                    values={{\n                      name: \"\",\n                      M: \"\",\n                      WS: \"\",\n                      BS: \"\",\n                      S: \"\",\n                      T: \"\",\n                      W: \"\",\n                      I: \"\",\n                      A: \"\",\n                      LD: \"\",\n                    }}\n                  />\n                )}\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      <RulesIndex />\n\n      <Header\n        to={`/editor/${listId}`}\n        headline={intl.formatMessage({\n          id: \"misc.gameView\",\n        })}\n        subheadline={`${armyName} [${allPoints} ${intl.formatMessage({\n          id: \"app.points\",\n        })}]`}\n        filters={filters}\n      />\n\n      <Main className=\"game-view\">\n        {list.game === \"the-old-world\" ? (\n          list.characters.length > 0 && (\n            <section className=\"game-view__section\">\n              <header className=\"editor__header\">\n                <h2>\n                  <FormattedMessage id=\"editor.characters\" />{\" \"}\n                  {showPoints && (\n                    <span className=\"game-view__points\">\n                      [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n              </header>\n              {getSection({ type: \"characters\" })}\n            </section>\n          )\n        ) : (\n          <>\n            {list.lords.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.lords\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"lords\" })}\n              </section>\n            )}\n\n            {list.heroes.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"heroes\" })}\n              </section>\n            )}\n          </>\n        )}\n\n        {list.core.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.core\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{corePoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"core\" })}\n          </section>\n        )}\n\n        {list.special.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.special\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{specialPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"special\" })}\n          </section>\n        )}\n\n        {list.rare.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.rare\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{rarePoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"rare\" })}\n          </section>\n        )}\n\n        {list.game === \"the-old-world\" && (\n          <>\n            {list.allies.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.allies\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"allies\" })}\n              </section>\n            )}\n\n            {list.mercenaries.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{mercenariesPoints}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"mercenaries\" })}\n              </section>\n            )}\n          </>\n        )}\n      </Main>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { Import } from \"./pages/import\";\nimport { GameView } from \"./pages/game-view\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1279px)\");\n\n    if (mediaQuery?.addEventListener) {\n      mediaQuery.addEventListener(\"change\", (event) =>\n        setIsMobile(event.matches)\n      );\n    } else {\n      mediaQuery.addListener((event) => setIsMobile(event.matches));\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/import\">{<Import isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/game-view/:listId\">{<GameView />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/game-view/:listId\">{<GameView />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/import\">{<Import />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\nimport rulesIndexReducer from \"./state/rules-index\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n    rulesIndex: rulesIndexReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as Sentry from \"@sentry/react\";\n// import PiwikPro from \"@piwikpro/react-piwik-pro\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\nimport Spanish from \"./i18n/es.json\";\nimport French from \"./i18n/fr.json\";\nimport Italian from \"./i18n/it.json\";\n\n// Sentry error tracking\nif (process.env.NODE_ENV !== \"development\") {\n  Sentry.init({\n    dsn: \"https://3947feb62e2f5348c1759e8d4d9ed084@o314295.ingest.sentry.io/4506569636642816\",\n    integrations: [],\n    environment: process.env.NODE_ENV,\n    release: `owb@${process.env.REACT_APP_VERSION}`,\n  });\n}\n\n// Analytics\n// PiwikPro.initialize(\n//   \"b926228f-3567-4df1-b4e5-5ea40019bffb\",\n//   \"https://owb.piwik.pro\"\n// );\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Costruttore di eserciti per Warhammer: The Old World e Warhammer Fantasy Battles.\",\n  fr: \"Un créateur de liste d'armée pour les jeux Games Workshop 'Warhammer: The Old World' et 'Warhammer Fantaisie'.\",\n  es: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n  it: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\", \"fr\", \"es\", \"it\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else if (language === \"es\") {\n  messages = Spanish;\n} else if (language === \"fr\") {\n  messages = French;\n} else if (language === \"it\") {\n  messages = Italian;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","href","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","download","value","Component","Link","buttonProps","aria-label","title","defaultProps","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","armor","armorData","mounts","mountsData","options","optionsData","useLanguage","language","localStorage","getItem","Header","headline","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","hasHomeButton","filters","intl","useIntl","useLocation","useState","showMenu","setShowMenu","handleMenuClick","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","description","checked","onChange","htmlFor","Spinner","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","reload","defaultChecked","width","height","alt","src","usa","germany","france","spain","italy","Select","required","selected","defaultValue","optionValue","option","name_en","ErrorMessage","NumberInput","max","min","readOnly","noError","interval","pattern","newValue","Number","maxValue","preventDefault","values","swap","list","index1","index2","result","splice","removed","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","Object","keys","forEach","key","undefined","deleteList","filter","addUnit","newUnit","strength","minimum","moveUnit","sourceIndex","destinationIndex","duplicateUnit","unitId","find","split","editUnit","magic","items","detachments","activeLore","name_de","data","removeUnit","actions","duplicateList","getUnitPoints","detachmentActive","length","active","unitPoints","stackable","stackableCount","perModel","amount","commandOption","item","getUnitMagicPoints","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","Dialog","open","onClose","dialogRef","useRef","handleClose","current","close","showModal","ref","normalizeRuleName","string","toLowerCase","rulesIndexSlice","activeRule","openRulesIndex","closeRulesIndex","rulesMap","brayhorn","gorefeast","guardians","oathstone","netters","forgefire","handler","cannonade","pavise","skullcracker","ambushers","ghostsight","entrenchment","daemonic","bully","quake","venerable","murderous","peasantry","choppas","backstab","drunken","cumbersome","temperamental","feed","hellbound","detachment","stampede","aquatic","helblaster","slayer","drilled","ethereal","helstorm","infested","evasive","warpaint","deathblow","indomitable","khopesh","fear","resolute","flammable","fly","frenzy","hatred","horde","howdah","impetuous","levies","loner","mercenaries","ponderous","regeneration","scouts","shieldwall","skirmishers","stubborn","stupidity","swiftstride","terror","unbreakable","unstable","vanguard","veteran","warband","braystaff","blunderbuss","blowpipe","bloodflail","polearm","bombard","greatbow","drakegun","strangleroots","doomfire","bilesword","flail","plagueflail","halberd","clattergun","whip","chaintrap","fireglaive","lance","warpflame","ironfist","longbow","hellblade","shortbow","warbow","plaguesword","handgun","pistol","crossbow","javelin","sling","shield","barding","daemonology","elementalism","illusion","necromancy","beastkiller","beguile","bloodcleaver","daemonsword","dawnstone","deathcheater","dreadlance","foebreaker","frostblade","giantbreaker","glamourweave","hellheart","hellshard","kineater","lifetaker","longstrider","loremaster","luckstone","mangelder","mawseeker","mountaineater","runefang","skalm","skavenbrew","skullplucker","spangleshard","spellshield","tenderiser","thundermace","wraithstone","halberds","flails","whips","spears","blowpipes","handguns","lances","shortbows","javelins","longbows","pistols","warbows","hellblades","drakeguns","clatterguns","crossbows","slings","blunderbusses","shields","ironfists","general","ancient","boss","marksman","preceptor","seneschal","kastellan","sharpshooter","hellwraith","crusher","vargoyle","bladesinger","plagueridden","heartseeker","alluress","sergeant","bloodreaper","nymph","guardian","harbinger","groinbiter","snarefinger","thunderfist","nightleader","assassin","greyback","champion","gutlord","desperado","esquire","elder","sentinel","yeoman","gallant","pyroclaster","villein","paragon","warden","ironbeard","prospector","ironwarden","overseer","deathmask","fangleader","clawleader","musician","bellower","RulesIndex","useSelector","rulesIndex","isLoading","setIsLoading","dispatch","useDispatch","normalizedRuleName","rulePath","onLoad","RulesLinksText","textObject","textEn","ruleButtons","rule","RulesWithIcon","itemsSlice","setItems","updateLocalList","updatedList","localLists","JSON","parse","updatedLists","stringify","isMultipleAllowedItem","maximum","nameMap","greenskins","heirlooms","dwarfs","weapon","talisman","banner","artifact","triptych","triptychs","skaven","lizardmen","Magic","prevItemType","isFirstItemType","isMobile","MainComponent","Fragment","useParams","group","lists","units","armyId","army","gameSystems","game","armies","maxMagicPoints","scrollTo","allItems","conditional","conditionalItem","conditionalIndex","getCheckbox","isChecked","selectedAmount","magicItem","itemGroup","isConditional","isTypeLimitReached","isCommand","types","unitPointsRemaining","pointsRemainingMax","floor","maxAllowedOfItem","magicItems","inputType","newCommand","entry","entryIndex","newItems","handleMagicChange","handleRulesClick","parentId","handleAmountChange","unitMagicPoints","hasCommandMagicItems","hasMagicItems","maxPoints","commandMagicItems","includes","itemGroupItems","armyComposition","unitSelectedItems","selectedItem","runesAmountInCategory","itemType","isRune","nonExclusive","some","NewList","setGame","setArmy","setName","setDescription","setPoints","setArmyComposition","redirect","setRedirect","journalArmies","listsPoints","reverse","quickActions","Set","slice","handleSystemChange","handleQuickActionClick","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","allies","newLists","createList","warhammerFantasy","warhammerTheOldWorld","journalArmy","name_es","name_fr","autoComplete","maxLength","rules","maxPercent","minPercent","perPoints","ids","getMaxPercentData","armyPoints","categoryData","overLimit","diff","ceil","ListItem","forwardRef","attributes","OrderableList","onMoved","onDragEnd","destination","source","droppableId","provided","_snapshot","droppableProps","innerRef","React","Children","child","isValidElement","draggableId","snapshot","style","draggableProps","transform","cloneElement","isDragging","isDropAnimating","dragging","dragHandleProps","placeholder","getAllOptions","lores","asString","noMagic","overrideLanguage","allCommand","commandEntry","selectedOptions","push","join","allEquipment","equippedDefault","allArmor","allOptions","allStackableOptions","allMounts","allDetachments","equipmentSelection","lore","allOptionsArray","allOptionsString","Editor","isDialogOpen","setIsDialogOpen","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeFromLocalList","OrderableUnitList","indexes","armySlice","armyIconMap","theEmpire","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","vampireCounts","chaosDeamons","ogres","chaosDwarfs","Home","resetState","rel","forg3dBanner","Unit","handleCommandChange","optionIndex","getPointsText","handleDuplicate","handleRemove","notes","commandMagicPoints","exclusiveCheckedOption","exclusiveOption","exclusive","handleEquipmentChange","handleArmorChange","handleStackableOptionChange","handleOptionsChange","mount","handleMountsChange","handleLoresChange","itemIndex","itemsPoints","specialRules","EditList","About","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","PayPal","Donation","env","hosted_button_id","image","render","owb","datasets","discord","github","gameIcons","license","getArmyData","specialToCore","category","rareToCore","rareToSpecial","coreToSpecial","specialToRare","allCore","allSpecial","allRare","allAllies","allMercenaries","Add","alliesLoaded","setAlliesLoaded","mercenariesLoaded","setMercenariesLoaded","armyData","getUnit","ally","handleAdd","mercenary","mercenaryUnits","mercenaryUnit","Help","Expandable","notBold","noMargin","getUnitsString","isShowList","isCompactList","showSpecialRules","showStats","optionsString","getFile","listText","asText","fileName","file","File","fileUrl","URL","createObjectURL","Export","copied","setCopied","copyError","setCopyError","shareError","setShareError","shareOwbError","setOwbShareError","setIsShowList","setShowStats","setIsCompactList","setShowSpecialRules","armyName","armyCompositionName","armyCompositionString","listString","getListAsText","textFileName","textFileUrl","share","a","shareData","text","files","canShare","clipboard","writeText","Stats","isPrintPage","M","WS","BS","S","T","W","I","A","LD","Print","isPrinting","setIsPrinting","getSection","onafterprint","print","DuplicateList","Rename","initialUnitState","name_it","regimentalUnit","magicItemTypes","loresOfMagic","Entity","existingUnit","randomId","setUnit","handleFieldChange","handleSpecialRulesChange","field","handleSpecialRulesBlur","handleCheckboxChange","handleSecondLevelFieldChange","newEntries","handleSecondLevelDelete","_","handleSecondLevelNameBlur","isNew","onBlur","loreIndex","loreName","handleLoresOfMagicChange","newCommandEntries","commandIndex","handleCommandMagicChange","handleCommandMagicPointsChange","typeIndex","handleItemsChange","UnitPreview","coreUnits","coreUnit","regiment","Datasets","previewUnit","setPreviewUnit","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","handlePreview","existingDataset","onDelete","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","b","msg","about","privacy","Import","setList","setError","typeError","setTypeError","fileInput","createRef","reader","FileReader","readAsText","importedList","accept","GameView","showPoints","setShowPoints","App","matchMedia","matches","setIsMobile","mediaQuery","addListener","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","rulesIndexReducer","Sentry","dsn","integrations","environment","release","messages","locale","userLanguage","indexOf","documentElement","setAttribute","querySelector","de","en","fr","es","it","German","Spanish","French","Italian","English","ReactDOM","store","StrictMode","getElementById","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","debug_id":"76882938-41bd-5d37-a3b1-864aff80c0b8"}
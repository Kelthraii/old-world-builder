{"version":3,"file":"static/js/main.0b494bad.chunk.js","sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/useLanguage.js","components/page/Header.js","components/spinner/Spinner.js","assets/germany.svg","assets/usa.svg","assets/spain.svg","assets/france.svg","assets/italy.svg","components/page/Page.js","components/select/Select.js","components/error-message/ErrorMessage.js","components/number-input/NumberInput.js","utils/fetcher.js","utils/collection.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","utils/points.js","components/dialog/Dialog.js","utils/string.js","state/rules-index.js","components/rules-index/rules-map.js","components/rules-index/RulesIndex.js","components/rules-index/RulesLinksText.js","components/rules-index/RulesWithIcon.js","components/rules-index/RuleWithIcon.js","state/items.js","utils/list.js","utils/magic-item-limitations.js","pages/magic/name-map.js","pages/magic/Magic.js","pages/new-list/NewList.js","utils/rules.js","components/list/ListItem.js","components/list/OrderableList.js","utils/unit.js","pages/editor/Editor.js","utils/throttle.js","state/army.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","assets/forg3d.jpg","pages/home/Home.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","utils/script.js","pages/add/Add.js","pages/help/Help.js","components/expandable/Expandable.js","pages/export/get-list-as-text.js","pages/export/Export.js","components/stats/Stats.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","pages/datasets/Entity.js","pages/datasets/UnitPreview.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","pages/import/Import.js","pages/game-view/GameView.js","App.js","state/errors.js","store.js","index.js"],"sourceRoot":"","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.030e8464.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  href,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n  download,\n  value,\n}) => {\n  const Component = to || href ? (to ? Link : \"a\") : \"button\";\n  const buttonProps = {};\n\n  if (!to && !href) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      href={href}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      download={download}\n      value={value}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n  download: PropTypes.string,\n  value: PropTypes.oneOfType(PropTypes.string, PropTypes.number),\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"medium\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      armor: unit.armor\n        ? unit.armor.map((armorData, index) => ({\n            ...armorData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  headlineIcon,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n  hasHomeButton,\n  filters,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n      icon: \"about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n      icon: \"help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n      icon: \"datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n      icon: \"news\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>\n          {hasHomeButton && (\n            <Button\n              type=\"text\"\n              to=\"/\"\n              label={intl.formatMessage({ id: \"misc.startpage\" })}\n              color=\"light\"\n              icon=\"home\"\n            />\n          )}\n          {navigation && !hasHomeButton && (\n            <div className=\"header__empty-icon\" />\n          )}\n        </>\n      )}\n      <div className=\"header__text\">\n        {headline && (\n          <>\n            {headline === \"Old World Builder\" ? (\n              <h1 className=\"header__name\">\n                <Link className=\"header__name-link\" to=\"/\">\n                  {headline}\n                </Link>\n              </h1>\n            ) : (\n              <h1 className=\"header__name\">\n                {headlineIcon && headlineIcon}\n                <span className=\"header__name-text\">{headline}</span>\n              </h1>\n            )}\n          </>\n        )}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && !filters && <div className=\"header__empty-icon\" />}</>\n      )}\n      {filters && (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.filter\" })}\n          icon=\"filter\"\n          onClick={handleMenuClick}\n        />\n      )}\n      {showMenu && navigation && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n      {showMenu && filters && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {filters.map(({ callback, name, description, id, checked }) => (\n            <li key={id}>\n              <div className=\"checkbox header__checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={id}\n                  onChange={callback}\n                  checked={checked}\n                  className=\"checkbox__input\"\n                />\n                <label htmlFor={id} className=\"checkbox__label\">\n                  {name}\n                </label>\n              </div>\n              {description && (\n                <i className=\"header__filter-description\">{description}</i>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  headlineIcon: PropTypes.node,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  filters: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n  hasHomeButton: PropTypes.bool,\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = ({ className }) => {\n  return <Icon symbol=\"spinner\" className={classNames(\"spinner\", className)} />;\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","export default __webpack_public_path__ + \"static/media/spain.fe46f7a7.svg\";","export default __webpack_public_path__ + \"static/media/france.bf26b172.svg\";","export default __webpack_public_path__ + \"static/media/italy.bb2033dc.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\nimport spain from \"../../assets/spain.svg\";\nimport france from \"../../assets/france.svg\";\nimport italy from \"../../assets/italy.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"french\"\n                name=\"languages\"\n                value=\"fr\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"fr\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"french\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={france}\n                  className=\"footer__language-icon\"\n                />\n                Français\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"spanish\"\n                name=\"languages\"\n                value=\"es\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"es\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"spanish\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={spain}\n                  className=\"footer__language-icon\"\n                />\n                Español\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"italian\"\n                name=\"languages\"\n                value=\"it\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"it\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"italian\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={italy}\n                  className=\"footer__language-icon\"\n                />\n                Italiano\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ id: optionValue, ...option }) => (\n        <option key={optionValue} value={optionValue}>\n          {option[`name_${language}`] || option.name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./ErrorMessage.css\";\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <p className=\"error-message\">\n      <Icon symbol=\"error\" color=\"red\" className=\"error-message__icon\" />\n      {children || <FormattedMessage id=\"misc.minError\" />}\n    </p>\n  );\n};\n\nErrorMessage.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { ErrorMessage } from \"../error-message\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = ({\n  onChange,\n  value,\n  id,\n  max,\n  min,\n  readOnly,\n  required,\n  noError,\n  interval,\n}) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) + (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) - (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnChange = (event) => {\n    let newValue = Number(event.target.value);\n    const maxValue = max > 0 ? max : 100000;\n\n    if (newValue > maxValue) {\n      newValue = maxValue;\n    }\n\n    onChange({\n      target: {\n        value: newValue,\n        id,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          min={0}\n          max={max > 0 ? max : 100000}\n          value={value}\n          onChange={handleOnChange}\n          id={id}\n          readOnly={readOnly}\n          required={required}\n          className=\"input\"\n        />\n        <Button\n          onClick={handleOnUpClick}\n          type=\"secondary\"\n          icon=\"up\"\n          label={intl.formatMessage({ id: \"misc.increase\" })}\n          disabled={value >= max && max !== 0}\n          className=\"number-input__button number-input__button--up\"\n        />\n        <Button\n          onClick={handleOnDownClick}\n          type=\"secondary\"\n          icon=\"down\"\n          label={intl.formatMessage({ id: \"misc.decrease\" })}\n          disabled={value <= min}\n          className=\"number-input__button number-input__button--down\"\n        />\n      </div>\n      {value < min && !noError && (\n        <ErrorMessage>\n          <FormattedMessage\n            id=\"misc.minError\"\n            values={{\n              min,\n            }}\n          />\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number,\n  id: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  noError: PropTypes.bool,\n};\n\nNumberInput.defaultProps = {\n  min: 0,\n  max: 100000,\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","/**\n * Swaps two elements in a list by their indexes.\n *\n * @template T\n * @param {T[]} list\n * @param {number} index1\n * @param {number} index2\n * @returns {T[]}\n */\nexport const swap = (list, index1, index2) => {\n  const result = [...list];\n  const [removed] = result.splice(index1, 1);\n  result.splice(index2, 0, removed);\n\n  return result;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\nimport { swap } from \"../utils/collection\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    moveUnit: (state, { payload }) => {\n      const { listId, type, sourceIndex, destinationIndex } = payload;\n\n      return state.map((list) => {\n        if (listId === list.id) {\n          return {\n            ...list,\n            [type]: swap([...list[type]], sourceIndex, destinationIndex),\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        name,\n        detachments,\n        activeLore,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        detachments,\n        activeLore,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  moveUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","export const getUnitPoints = (unit) => {\n  const detachmentActive =\n    unit?.options?.length > 0 &&\n    Boolean(\n      unit.options.find(\n        (option) => option.name_en === \"Detachment\" && option.active\n      )\n    );\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.armor) {\n    unit.armor.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command && !detachmentActive) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n      if (option.active && option.magic && option.magic?.selected?.length) {\n        option.magic.selected.forEach((selected) => {\n          unitPoints += selected.amount\n            ? selected.amount * selected.points\n            : selected.points;\n        });\n      }\n      if (option.active && option.options && option.options.length > 0) {\n        option.options.forEach((commandOption) => {\n          if (commandOption.active) {\n            unitPoints += commandOption.points;\n          }\n        });\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.items && unit?.items.length) {\n    unit.items.forEach((item) => {\n      (item.selected || []).forEach((selected) => {\n        unitPoints += selected.amount\n          ? selected.amount * selected.points\n          : selected.points;\n      });\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach(\n      ({ strength, points, equipment, armor, options }) => {\n        unitPoints += strength * points;\n\n        if (equipment && equipment.length) {\n          equipment.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (armor && armor.length) {\n          armor.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (options && options.length) {\n          options.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n      }\n    );\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ selected }) => {\n  let unitPoints = 0;\n\n  selected &&\n    selected.forEach((option) => {\n      unitPoints += option.amount\n        ? option.amount * option.points\n        : option.points;\n    });\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./Dialog.css\";\n\nexport const Dialog = ({ open, onClose, children }) => {\n  const dialogRef = useRef(null);\n  const intl = useIntl();\n  const handleClose = () => {\n    dialogRef?.current?.close && dialogRef.current.close();\n    onClose();\n  };\n  useEffect(() => {\n    if (open) {\n      dialogRef?.current?.showModal && dialogRef.current.showModal();\n    } else {\n      dialogRef?.current?.close && dialogRef.current.close();\n    }\n  }, [open]);\n\n  return (\n    <dialog className=\"dialog\" ref={dialogRef} onClose={handleClose}>\n      <Button\n        className=\"dialog__close\"\n        icon=\"close\"\n        type=\"text\"\n        label={intl.formatMessage({ id: \"header.close\" })}\n        color=\"dark\"\n        onClick={handleClose}\n      />\n      {children}\n    </dialog>\n  );\n};\n\nDialog.propTypes = {\n  open: PropTypes.bool,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","export const normalizeRuleName = (string = \"\") => {\n  return string\n    .toLowerCase()\n    .replace(/ *\\([^)]*\\) */g, \"\")\n    .replace(/\\*/g, \"\")\n    .replace(/^[0-9]x /g, \"\")\n    .replace(/“/g, '\"')\n    .replace(/”/g, '\"');\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const rulesIndexSlice = createSlice({\n  name: \"rulesIndex\",\n  initialState: {\n    activeRule: \"\",\n    open: false,\n  },\n  reducers: {\n    openRulesIndex: (state, { payload }) => {\n      return {\n        ...state,\n        activeRule: payload.activeRule,\n        open: true,\n      };\n    },\n    closeRulesIndex: (state) => {\n      return { ...state, activeRule: \"\", open: false };\n    },\n  },\n});\n\nexport const { openRulesIndex, closeRulesIndex } = rulesIndexSlice.actions;\n\nexport default rulesIndexSlice.reducer;\n","import rulesIndexExport from \"./rules-index-export.json\";\n\nconst additionalOWBRules = {\n  \"throwing spears\": { url: \"weapons-of-war/throwing-spear\" },\n  halberds: { url: \"weapons-of-war/halberd\" },\n  \"additional hand weapons\": {\n    url: \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  },\n  \"cavalry spears\": { url: \"weapons-of-war/cavalry-spear\" },\n  \"repeater handguns\": { url: \"weapons-of-war/repeater-handgun\" },\n  \"hand weapons\": { url: \"weapons-of-war/hand-weapon\" },\n  flails: { url: \"weapons-of-war/flail\" },\n  \"plague censers\": { url: \"weapons-of-war/plague-censer\" },\n  \"great weapons\": { url: \"weapons-of-war/great-weapon\" },\n  whips: { url: \"weapons-of-war/whip\" },\n  spears: { url: \"weapons-of-war/spears\" },\n  \"morning stars\": { url: \"weapons-of-war/morning-star\" },\n  blowpipes: { url: \"weapons-of-war/blowpipe\" },\n  \"warplock jezzails\": { url: \"weapons-of-war/warplock-jezzail\" },\n  handguns: { url: \"weapons-of-war/handgun\" },\n  lances: { url: \"weapons-of-war/lance\" },\n  shortbows: { url: \"weapons-of-war/shortbow\" },\n  \"thrusting spears\": { url: \"weapons-of-war/thrusting-spear\" },\n  javelins: { url: \"weapons-of-war/javelin\" },\n  longbows: { url: \"weapons-of-war/longbow\" },\n  pistols: { url: \"weapons-of-war/pistol\" },\n  \"throwing axes\": { url: \"weapons-of-war/throwing-axe\" },\n  warbows: { url: \"weapons-of-war/warbow\" },\n  hellblades: { url: \"weapons-of-war/hellblade\" },\n  \"repeater pistols\": { url: \"weapons-of-war/repeater-pistol\" },\n  \"blackbriar javelins\": { url: \"weapons-of-war/blackbriar-javelin\" },\n  drakeguns: { url: \"weapons-of-war/drakegun\" },\n  \"great hammers\": { url: \"weapons-of-war/great-hammer\" },\n  \"brimstone guns\": { url: \"weapons-of-war/brimstone-gun\" },\n  clatterguns: { url: \"weapons-of-war/clattergun\" },\n  \"steam guns\": { url: \"weapons-of-war/steam-gun-dwarfs\" },\n  crossbows: { url: \"weapons-of-war/crossbow\" },\n  \"throwing weapons\": { url: \"weapons-of-war/throwing-weapons\" },\n  slings: { url: \"weapons-of-war/sling\" },\n  blunderbusses: { url: \"weapons-of-war/blunderbuss\" },\n  \"repeater handbows\": { url: \"weapons-of-war/repeater-handbow\" },\n  \"repeater crossbows\": { url: \"weapons-of-war/repeater-crossbow\" },\n  \"daemons of khorne\": { url: \"special-rules/daemon-of-khorne\" },\n  \"daemons of tzeentch\": { url: \"special-rules/daemon-of-tzeentch\" },\n  \"daemons of nurgle\": { url: \"special-rules/daemon-of-nurgle\" },\n  \"daemons of slaanesh\": { url: \"special-rules/daemon-of-slaanesh\" },\n  \"asrai spears\": { url: \"weapons-of-war/asrai-spear\" },\n  \"asrai longbows\": { url: \"weapons-of-war/asrai-longbow\" },\n  shield: { url: \"weapons-of-war/shield\" },\n  shields: { url: \"weapons-of-war/shield\" },\n  ironfists: { url: \"weapons-of-war/ironfist\" },\n  general: { url: \"characters/the-general-characters\" },\n  \"moonfire shots\": { url: \"weapons-of-war/moonfire-shot\" },\n  \"battle standard bearer\": { url: \"characters/the-battle-standard\" },\n  \"revered guardian\": { url: \"characters/the-battle-standard\" },\n  \"patrol leader\": { url: \"characters/the-battle-standard\" },\n  ancient: { url: \"characters/the-battle-standard\" },\n  \"sky leader\": { url: \"characters/the-battle-standard\" },\n  champions: { url: \"command-groups/champions\" },\n  \"standard bearer\": { url: \"command-groups/standard-bearers\" },\n  musician: { url: \"command-groups/musicians\" },\n  bellower: { url: \"special-rules/bellowers-and-musicians\" },\n  \"level 1 wizard\": { url: \"magic/levels-of-wizardry\" },\n  \"level 2 wizard\": { url: \"magic/levels-of-wizardry\" },\n  \"level 3 wizard\": { url: \"magic/levels-of-wizardry\" },\n  \"level 4 wizard\": { url: \"magic/levels-of-wizardry\" },\n};\n\nexport const synonyms = {\n  boss: \"champions\",\n  marksman: \"champions\",\n  preceptor: \"champions\",\n  seneschal: \"champions\",\n  \"skeleton champion\": \"champions\",\n  \"inner circle preceptor\": \"champions\",\n  \"doom wolf\": \"champions\",\n  \"crypt haunter\": \"champions\",\n  \"crypt ghast\": \"champions\",\n  \"glade knight\": \"champions\",\n  kastellan: \"champions\",\n  sharpshooter: \"champions\",\n  hellwraith: \"champions\",\n  crusher: \"champions\",\n  \"demigryph preceptor\": \"champions\",\n  \"count's champion\": \"champions\",\n  vargoyle: \"champions\",\n  \"wildwood warden\": \"champions\",\n  \"first knight\": \"champions\",\n  bladesinger: \"champions\",\n  \"handmaiden of the thorn\": \"champions\",\n  \"hell knight\": \"champions\",\n  plagueridden: \"champions\",\n  \"spawn leader\": \"champions\",\n  \"iridescent horror\": \"champions\",\n  \"ectoplasmic horror\": \"champions\",\n  heartseeker: \"champions\",\n  alluress: \"champions\",\n  \"master moulder\": \"champions\",\n  sergeant: \"champions\",\n  bloodreaper: \"champions\",\n  nymph: \"champions\",\n  guardian: \"champions\",\n  harbinger: \"champions\",\n  \"high sister\": \"champions\",\n  groinbiter: \"champions\",\n  snarefinger: \"champions\",\n  \"high helm\": \"champions\",\n  bloodkine: \"champions\",\n  \"gouge-horn\": \"champions\",\n  \"true-horn\": \"champions\",\n  \"half-horn\": \"champions\",\n  gorehoof: \"champions\",\n  shartak: \"champions\",\n  \"maneater captain\": \"champions\",\n  thunderfist: \"champions\",\n  \"keeper of the flame\": \"champions\",\n  nightleader: \"champions\",\n  assassin: \"champions\",\n  greyback: \"champions\",\n  \"sea master\": \"champions\",\n  \"pack leader\": \"champions\",\n  \"grail guardian\": \"champions\",\n  champion: \"champions\",\n  gutlord: \"champions\",\n  desperado: \"champions\",\n  \"wild hunter\": \"champions\",\n  \"wind rider\": \"champions\",\n  esquire: \"champions\",\n  elder: \"champions\",\n  \"lord's bowmen\": \"champions\",\n  \"ol' deadeye\": \"champions\",\n  \"royal champion\": \"champions\",\n  sentinel: \"champions\",\n  yeoman: \"champions\",\n  gallant: \"champions\",\n  pyroclaster: \"champions\",\n  villein: \"champions\",\n  paragon: \"champions\",\n  warden: \"champions\",\n  \"militia leader\": \"champions\",\n  ironbeard: \"champions\",\n  \"ripperdactyl champion\": \"champions\",\n  prospector: \"champions\",\n  \"eternal warden\": \"champions\",\n  ironwarden: \"champions\",\n  \"prophet of doom\": \"champions\",\n  overseer: \"champions\",\n  deathmask: \"champions\",\n  \"plague deacon\": \"champions\",\n  fangleader: \"champions\",\n  clawleader: \"champions\",\n  \"boar chariot\": \"orc boar chariot\",\n  \"wolf chariot\": \"goblin wolf chariot\",\n};\n\nexport const rulesMap = {\n  ...rulesIndexExport,\n  ...additionalOWBRules,\n};\n","import React, { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { Dialog } from \"../../components/dialog\";\nimport { Spinner } from \"../../components/spinner\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { closeRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap, synonyms } from \"./rules-map\";\nimport \"./RulesIndex.css\";\n\nexport const RulesIndex = () => {\n  const { open, activeRule } = useSelector((state) => state.rulesIndex);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setIsLoading(true);\n    dispatch(closeRulesIndex());\n  };\n  const normalizedName = normalizeRuleName(activeRule);\n  const synonym = synonyms[normalizedName];\n  const ruleData = rulesMap[normalizedName] || rulesMap[synonym];\n  const rulePath = ruleData?.url;\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {rulePath ? (\n        <>\n          <iframe\n            onLoad={() => setIsLoading(false)}\n            className={classNames(\n              \"rules-index__iframe\",\n              !isLoading && \"rules-index__iframe--show\"\n            )}\n            src={`https://tow.whfb.app/${rulePath}?minimal=true&utm_source=owb&utm_medium=referral`}\n            title=\"test\"\n            height=\"500\"\n            width=\"500\"\n          />\n          {isLoading && <Spinner className=\"rules-index__spinner\" />}\n        </>\n      ) : (\n        <p>\n          <FormattedMessage id=\"editor.noRuleFound\" />\n        </p>\n      )}\n    </Dialog>\n  );\n};\n","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { openRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap, synonyms } from \"./rules-map\";\n\nexport const RulesLinksText = ({ textObject }) => {\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n\n  if (!textObject.name_en) {\n    return [];\n  }\n\n  const textEn = textObject.name_en.split(\", \");\n  const ruleString = textObject[`name_${language}`] || textObject.name_en;\n  let ruleButtons = ruleString.split(\", \");\n\n  return ruleButtons.map((rule, index) => (\n    <Fragment key={rule}>\n      {rulesMap[normalizeRuleName(textEn[index])] ||\n      rulesMap[synonyms[normalizeRuleName(textEn[index])]] ? (\n        <button\n          className=\"unit__rule\"\n          onClick={() =>\n            dispatch(openRulesIndex({ activeRule: textEn[index] }))\n          }\n        >\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </button>\n      ) : (\n        <>\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </>\n      )}\n    </Fragment>\n  ));\n};\n","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { openRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap, synonyms } from \"./rules-map\";\n\nexport const RulesWithIcon = ({ textObject }) => {\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const intl = useIntl();\n\n  if (!textObject.name_en) {\n    return [];\n  }\n\n  const textEn = textObject.name_en.split(\", \");\n  const ruleString = textObject[`name_${language}`] || textObject.name_en;\n  let ruleButtons = ruleString.split(\", \");\n\n  return ruleButtons.map((rule, index) => (\n    <Fragment key={rule}>\n      {rulesMap[normalizeRuleName(textEn[index])] ||\n      rulesMap[synonyms[normalizeRuleName(textEn[index])]] ? (\n        <span className=\"unit__rule-wrapper\">\n          {rule}\n          <Button\n            type=\"text\"\n            className=\"unit__rules\"\n            color=\"dark\"\n            label={intl.formatMessage({ id: \"misc.showRules\" })}\n            icon=\"preview\"\n            onClick={() => dispatch(openRulesIndex({ activeRule: rule }))}\n          />\n          {index !== ruleButtons.length - 1 && \",\"}\n        </span>\n      ) : (\n        <>\n          {rule}\n          {index !== ruleButtons.length - 1 && \", \"}\n        </>\n      )}\n    </Fragment>\n  ));\n};\n","import { useDispatch } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { openRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap, synonyms } from \"./rules-map\";\nimport \"./RuleWithIcon.css\";\n\nexport const RuleWithIcon = ({ name, isDark }) => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  if (!name) {\n    return null;\n  }\n\n  const normalizedName = normalizeRuleName(name);\n  const synonym = synonyms[normalizedName];\n\n  return rulesMap[normalizedName] || rulesMap[synonym] ? (\n    <Button\n      type=\"text\"\n      className=\"rule-icon\"\n      color={isDark ? \"dark\" : \"light\"}\n      label={intl.formatMessage({ id: \"misc.showRules\" })}\n      icon=\"preview\"\n      onClick={() => dispatch(openRulesIndex({ activeRule: name }))}\n    />\n  ) : null;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const updateLocalList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists =\n    localLists &&\n    localLists.map((list) => {\n      if (list.id === updatedList.id) {\n        return updatedList;\n      } else {\n        return list;\n      }\n    });\n\n  localLists && localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeFromLocalList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","/**\n * Returns whether the magic item can be taken multiple times.\n *\n * Typically, these are common potions, scrolls or runes\n *\n * @param {object} magicItem\n * @param {string} magicItem.type\n * @param {boolean} [magicItem.stackable]\n * @param {number} [magicItem.maximum]\n * @returns {boolean}\n */\nexport const isMultipleAllowedItem = ({ type, stackable, maximum }) =>\n  Boolean(stackable || maximum);\n\n/**\n * Calculates the maximum amount of a magic item that can be taken given the remaining points.\n *\n * @param {object} magicItem\n * @param {number} selectedAmount\n * @param {number} unitPointsRemaining\n * @returns\n */\nexport const maxAllowedOfItem = (\n  magicItem,\n  selectedAmount,\n  unitPointsRemaining\n) => {\n  if (!magicItem.stackable && !magicItem.maximum) {\n    return 1;\n  }\n\n  const pointsRemainingMax =\n    Math.floor(unitPointsRemaining / magicItem.points) + selectedAmount;\n\n  if (magicItem.maximum) {\n    return Math.min(magicItem.maximum, pointsRemainingMax);\n  }\n\n  return pointsRemainingMax;\n};\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Gewöhnliche Magische Gegenstände\",\n    name_en: \"Common Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  \"armor-mages\": {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    // deprecated\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"arcane-item\": {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  triptychs: {\n    name_de: \"Triptychs\",\n    name_en: \"Triptychs\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n  \"chaos-mutations\": {\n    name_de: \"Chaos Mutations\",\n    name_en: \"Chaos Mutations\",\n  },\n  \"chaos-mutation\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-character\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-chieftain\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"gifts-of-chaos\": {\n    name_de: \"Gifts of Chaos\",\n    name_en: \"Gifts of Chaos\",\n  },\n  \"gift-of-chaos\": {\n    name_de: \"Gift of Chaos\",\n    name_en: \"Gift of Chaos\",\n  },\n  \"forest-spites\": {\n    name_de: \"Forest Spites\",\n    name_en: \"Forest Spites\",\n  },\n  \"forest-spite\": {\n    name_de: \"Forest Spite\",\n    name_en: \"Forest Spite\",\n  },\n  \"beastmen-brayherds\": {\n    name_de: \"Beastmen Brayherds\",\n    name_en: \"Beastmen Brayherds\",\n  },\n  \"orc-and-goblin-tribes\": {\n    name_de: \"Orc & Goblin Tribes\",\n    name_en: \"Orc & Goblin Tribes\",\n  },\n  \"dwarfen-mountain-holds\": {\n    name_de: \"Dwarfen Mountain Holds\",\n    name_en: \"Dwarfen Mountain Holds\",\n  },\n  \"empire-of-man\": {\n    name_de: \"Empire of Man\",\n    name_en: \"Empire of Man\",\n  },\n  \"wood-elf-realms\": {\n    name_de: \"Wood Elf Realms\",\n    name_en: \"Wood Elf Realms\",\n  },\n  \"high-elf-realms\": {\n    name_de: \"High Elf Realms\",\n    name_en: \"High Elf Realms\",\n  },\n  \"tomb-kings-of-khemri\": {\n    name_de: \"Tomb Kings of Khemri\",\n    name_en: \"Tomb Kings of Khemri\",\n  },\n  \"warriors-of-chaos\": {\n    name_de: \"Warriors of Chaos\",\n    name_en: \"Warriors of Chaos\",\n  },\n  \"knightly-virtues\": {\n    name_de: \"Knightly Virtues\",\n    name_en: \"Knightly Virtues\",\n  },\n  \"knightly-virtue\": {\n    name_de: \"Knightly Virtue\",\n    name_en: \"Knightly Virtue\",\n  },\n  \"knightly-virtue-character\": {\n    name_de: \"Knightly Virtue (Characters only)\",\n    name_en: \"Knightly Virtue (Characters only)\",\n  },\n  \"elven-honours\": {\n    name_de: \"Elven Honours\",\n    name_en: \"Elven Honours\",\n  },\n  \"elven-honour\": {\n    name_de: \"Elven Honour\",\n    name_en: \"Elven Honour\",\n  },\n  daemonology: {\n    name_de: \"Daemonology\",\n    name_en: \"Daemonology\",\n  },\n  \"dark-magic\": {\n    name_de: \"Dark Magic\",\n    name_en: \"Dark Magic\",\n  },\n  elementalism: {\n    name_de: \"Elementalism\",\n    name_en: \"Elementalism\",\n  },\n  \"battle-magic\": {\n    name_de: \"Battle Magic\",\n    name_en: \"Battle Magic\",\n  },\n  \"high-magic\": {\n    name_de: \"High Magic\",\n    name_en: \"High Magic\",\n  },\n  illusion: {\n    name_de: \"Illusion\",\n    name_en: \"Illusion\",\n  },\n  necromancy: {\n    name_de: \"Necromancy\",\n    name_en: \"Necromancy\",\n  },\n  \"waaagh-magic\": {\n    name_de: \"Waaagh! Magic\",\n    name_en: \"Waaagh! Magic\",\n  },\n  \"errantry-crusades\": {\n    name_en: \"Errantry Crusades\",\n    name_de: \"Errantry Crusades\",\n  },\n  \"bretonnian-exiles\": {\n    name_en: \"Bretonnian Exiles\",\n    name_de: \"Bretonnian Exiles\",\n  },\n  \"nehekharan-royal-hosts\": {\n    name_en: \"Nehekharan Royal Hosts\",\n    name_de: \"Nehekharan Royal Hosts\",\n  },\n  \"mortuary-cults\": {\n    name_en: \"Mortuary Cults\",\n    name_de: \"Mortuary Cults\",\n  },\n  \"nomadic-waaagh\": {\n    name_en: \"Nomadic Waaagh!\",\n    name_de: \"Nomadic Waaagh!\",\n  },\n  \"troll-horde\": {\n    name_en: \"Troll Horde\",\n    name_de: \"Troll Horde\",\n  },\n  \"chaos-dwarfs\": {\n    name_en: \"Chaos Dwarfs\",\n    name_de: \"Chaos Dwarfs\",\n  },\n  \"vampire-counts\": {\n    name_en: \"Vampire Counts\",\n    name_de: \"Vampire Counts\",\n  },\n  \"vampiric-powers\": {\n    name_en: \"Vampiric Powers\",\n    name_de: \"Vampiric Powers\",\n  },\n  \"vampiric-power\": {\n    name_en: \"Vampiric Power\",\n    name_de: \"Vampiric Power\",\n  },\n  \"dark-elves\": {\n    name_en: \"Dark Elves\",\n    name_de: \"Dark Elves\",\n  },\n  skaven: {\n    name_en: \"Skaven\",\n    name_de: \"Skaven\",\n  },\n  \"daemons-of-chaos\": {\n    name_en: \"Daemons of Chaos\",\n    name_de: \"Daemons of Chaos\",\n  },\n  \"daemonic-gifts-common\": {\n    name_en: \"Chaotic Gifts\",\n    name_de: \"Chaotic Gifts\",\n  },\n  \"daemonic-gift-common\": {\n    name_en: \"Chaotic Gift\",\n    name_de: \"Chaotic Gift\",\n  },\n  \"daemonic-icons-common\": {\n    name_en: \"Chaotic Icons\",\n    name_de: \"Chaotic Icons\",\n  },\n  \"daemonic-icon-common\": {\n    name_en: \"Chaotic Icon\",\n    name_de: \"Chaotic Icon\",\n  },\n  \"daemonic-gifts-khorne\": {\n    name_en: \"Gifts Of Khorne\",\n    name_de: \"Gifts Of Khorne\",\n  },\n  \"daemonic-gift-khorne\": {\n    name_en: \"Gift Of Khorne\",\n    name_de: \"Gift Of Khorne\",\n  },\n  \"daemonic-icons-khorne\": {\n    name_en: \"Icons Of Khorne\",\n    name_de: \"Icons Of Khorne\",\n  },\n  \"daemonic-icon-khorne\": {\n    name_en: \"Icon Of Khorne\",\n    name_de: \"Icon Of Khorne\",\n  },\n  \"daemonic-gifts-nurgle\": {\n    name_en: \"Gifts Of Nurgle\",\n    name_de: \"Gifts Of Nurgle\",\n  },\n  \"daemonic-gift-nurgle\": {\n    name_en: \"Gift Of Nurgle\",\n    name_de: \"Gift Of Nurgle\",\n  },\n  \"daemonic-icons-nurgle\": {\n    name_en: \"Icons Of Nurgle\",\n    name_de: \"Icons Of Nurgle\",\n  },\n  \"daemonic-icon-nurgle\": {\n    name_en: \"Icon Of Nurgle\",\n    name_de: \"Icon Of Nurgle\",\n  },\n  \"daemonic-gifts-slaanesh\": {\n    name_en: \"Gifts Of Slaanesh\",\n    name_de: \"Gifts Of Slaanesh\",\n  },\n  \"daemonic-gift-slaanesh\": {\n    name_en: \"Gift Of Slaanesh\",\n    name_de: \"Gift Of Slaanesh\",\n  },\n  \"daemonic-icons-slaanesh\": {\n    name_en: \"Icons Of Slaanesh\",\n    name_de: \"Icons Of Slaanesh\",\n  },\n  \"daemonic-icon-slaanesh\": {\n    name_en: \"Icon Of Slaanesh\",\n    name_de: \"Icon Of Slaanesh\",\n  },\n  \"daemonic-gifts-tzeentch\": {\n    name_en: \"Gifts Of Tzeentch\",\n    name_de: \"Gifts Of Tzeentch\",\n  },\n  \"daemonic-gift-tzeentch\": {\n    name_en: \"Gift Of Tzeentch\",\n    name_de: \"Gift Of Tzeentch\",\n  },\n  \"daemonic-icons-tzeentch\": {\n    name_en: \"Icons Of Tzeentch\",\n    name_de: \"Icons Of Tzeentch\",\n  },\n  \"daemonic-icon-tzeentch\": {\n    name_en: \"Icon Of Tzeentch\",\n    name_de: \"Icon Of Tzeentch\",\n  },\n  \"forbidden-poisons\": {\n    name_en: \"Forbidden Poisons\",\n    name_de: \"Forbidden Poisons\",\n  },\n  \"gifts-of-khaine\": {\n    name_en: \"Gifts of Khaine\",\n    name_de: \"Gifts of Khaine\",\n  },\n  \"forbidden-poison\": {\n    name_en: \"Forbidden Poison\",\n    name_de: \"Forbidden Poison\",\n  },\n  \"gift-of-khaine\": {\n    name_en: \"Gift of Khaine\",\n    name_de: \"Gift of Khaine\",\n  },\n  \"ogre-kingdoms\": {\n    name_en: \"Ogre Kingdoms\",\n    name_de: \"Ogre Kingdoms\",\n  },\n  \"big-names\": {\n    name_en: \"Big Names\",\n    name_de: \"Big Names\",\n  },\n  \"big-name\": {\n    name_en: \"Big Name\",\n    name_de: \"Big Name\",\n  },\n  \"disciplines-old-ones\": {\n    name_en: \"Disciplines Of The Old Ones\",\n    name_de: \"Disciplines Of The Old Ones\",\n  },\n  \"discipline-old-ones\": {\n    name_en: \"Discipline Of The Old Ones\",\n    name_de: \"Discipline Of The Old Ones\",\n  },\n  lizardmen: {\n    name_en: \"Lizardmen\",\n    name_de: \"Lizardmen\",\n  },\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { RulesIndex, rulesMap } from \"../../components/rules-index\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport gameSystems from \"../../assets/armies.json\";\nimport {\n  isMultipleAllowedItem,\n  maxAllowedOfItem,\n} from \"../../utils/magic-item-limitations\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  let prevItemType, isFirstItemType;\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const { listId, type, unitId, command, group } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const armyId = unit?.army || list?.army;\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => armyId === id);\n  const items = useSelector((state) => state.items);\n  let maxMagicPoints = 0;\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleMagicChange = (event, magicItem, isCommand) => {\n    let magicItems;\n    const inputType = event.target.type;\n\n    if (event.target.checked) {\n      if (isCommand) {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.command[command].magic.selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      } else {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.items[group].selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      }\n    } else {\n      if (isCommand) {\n        magicItems = unit.command[command].magic.selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      } else {\n        magicItems = unit.items[group].selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      }\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n  const handleAmountChange = ({ event, parentId, isCommand }) => {\n    let magicItems;\n\n    if (isCommand) {\n      magicItems = (unit.command[command].magic.selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    } else {\n      magicItems = (unit.items[group].selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      list &&\n      unit &&\n      (!items || unit.army !== list.army) &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, list, unit, items, dispatch]);\n\n  if (!unit || !army || !items) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({\n    isChecked,\n    selectedAmount,\n    magicItem,\n    itemGroup,\n    isConditional,\n    isTypeLimitReached,\n  }) => {\n    const isCommand = Boolean(unit?.command[command]?.magic?.types.length);\n\n    const max = !maxMagicPoints\n      ? // No maximum of this item if there is no point max.\n        undefined\n      : maxAllowedOfItem(magicItem, selectedAmount, unitPointsRemaining);\n\n    return (\n      <Fragment key={magicItem.id}>\n        <div\n          className={classNames(\n            \"checkbox\",\n            isConditional && \"checkbox--conditional\"\n          )}\n        >\n          <input\n            type=\"checkbox\"\n            id={`${itemGroup.id}-${magicItem.id}`}\n            value={`${itemGroup.id}-${magicItem.id}`}\n            onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n            checked={isChecked}\n            className=\"checkbox__input\"\n            disabled={\n              !isChecked &&\n              // Sometimes there is no limit (often for magic banners),\n              // otherwise we need to check if the unit has enough points left.\n              ((maxMagicPoints && magicItem.points > unitPointsRemaining) ||\n                isTypeLimitReached)\n            }\n          />\n          <label\n            htmlFor={`${itemGroup.id}-${magicItem.id}`}\n            className=\"checkbox__label\"\n          >\n            <span className=\"magic__label-text\">\n              {magicItem[`name_${language}`] || magicItem.name_en}\n            </span>\n            <i className=\"checkbox__points\">\n              {magicItem.points === 0\n                ? intl.formatMessage({\n                    id: \"app.free\",\n                  })\n                : `${magicItem.points} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}\n            </i>\n            {rulesMap[normalizeRuleName(magicItem.name_en)] ? (\n              <Button\n                type=\"text\"\n                className=\"magic__rules\"\n                color=\"dark\"\n                label={intl.formatMessage({ id: \"misc.showRules\" })}\n                icon=\"preview\"\n                onClick={() =>\n                  handleRulesClick({\n                    name: magicItem.name_en,\n                  })\n                }\n              />\n            ) : null}\n          </label>\n        </div>\n\n        {isMultipleAllowedItem(magicItem) && isChecked && max !== 1 && (\n          <NumberInput\n            id={`${itemGroup.id}-${magicItem.id}-amount`}\n            min={1}\n            max={isTypeLimitReached ? selectedAmount : max}\n            value={selectedAmount}\n            onChange={(event) => {\n              handleAmountChange({\n                parentId: `${itemGroup.id}-${magicItem.id}`,\n                event,\n                isCommand,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  let unitMagicPoints = 0;\n  const hasCommandMagicItems = Boolean(\n    unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.types.length\n  );\n  const hasMagicItems = Boolean(unit?.items?.length);\n\n  if (hasCommandMagicItems) {\n    maxMagicPoints = unit.command[command].magic.maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.command[command].magic.selected,\n    });\n  } else if (hasMagicItems) {\n    maxMagicPoints = unit.items[group].maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.items[group].selected,\n    });\n  }\n\n  const unitPointsRemaining = maxMagicPoints - unitMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <>\n          <Header\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n          <RulesIndex />\n        </>\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n        )}\n        {items.map((itemGroup) => {\n          const commandMagicItems = itemGroup.items.filter(\n            (item) =>\n              hasCommandMagicItems &&\n              unit.command[command].magic.types.includes(item.type)\n          );\n          const magicItems = itemGroup.items.filter(\n            (item) =>\n              hasMagicItems &&\n              !command &&\n              unit.items[group].types.includes(item.type)\n          );\n          const itemGroupItems = (\n            hasCommandMagicItems ? commandMagicItems : magicItems\n          ).filter(\n            (item) =>\n              (!maxMagicPoints || item.points <= maxMagicPoints) &&\n              (item?.armyComposition === list?.armyComposition ||\n                !item.armyComposition)\n          );\n\n          if (itemGroupItems.length > 0) {\n            prevItemType = null;\n            isFirstItemType = false;\n          }\n\n          const unitSelectedItems = hasCommandMagicItems\n            ? unit.command[command].magic.selected ?? []\n            : unit.items[group].selected ?? [];\n\n          return (\n            <Fragment key={itemGroup.name_de}>\n              {itemGroupItems.length > 0 && (\n                <h2 className=\"unit__subline\">\n                  {itemGroup[`name_${language}`] || itemGroup.name_en}\n                </h2>\n              )}\n              {itemGroupItems.map((magicItem) => {\n                if (prevItemType !== magicItem.type) {\n                  prevItemType = magicItem.type;\n                  isFirstItemType = true;\n                } else {\n                  isFirstItemType = false;\n                }\n\n                const selectedItem = unitSelectedItems.find(\n                  ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                );\n                let runesAmountInCategory = 0;\n\n                unitSelectedItems.forEach(({ type: itemType, amount }) => {\n                  if (itemType === magicItem.type) {\n                    runesAmountInCategory += amount ?? 1;\n                  }\n                });\n                const selectedAmount = selectedItem?.amount ?? 1;\n                const isChecked = Boolean(selectedItem);\n                const isRune = Boolean(magicItem.type.includes(\"runes\"));\n\n                const isTypeLimitReached = magicItem.nonExclusive\n                  ? false\n                  : unitSelectedItems.some(\n                      (item) =>\n                        (!magicItem.stackable &&\n                          !item.stackable &&\n                          item.type === magicItem.type &&\n                          !isRune) ||\n                        (isRune && runesAmountInCategory >= 3)\n                    );\n\n                return (\n                  <Fragment key={magicItem.name_de}>\n                    {isFirstItemType && (\n                      <h3 className=\"magic__type\">\n                        {nameMap[magicItem.type][`name_${language}`] ||\n                          nameMap[magicItem.type].name_en}\n                      </h3>\n                    )}\n                    {getCheckbox({\n                      magicItem,\n                      itemGroup,\n                      selectedAmount,\n                      isChecked,\n                      isTypeLimitReached,\n                    })}\n\n                    {magicItem.conditional && isChecked\n                      ? magicItem.conditional.map((conditionalItem) =>\n                          getCheckbox({\n                            magicItem: conditionalItem,\n                            itemGroup,\n                            selectedAmount,\n                            isChecked,\n                            isConditional: true,\n                            isTypeLimitReached,\n                          })\n                        )\n                      : null}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        })}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\nimport { nameMap } from \"../magic\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [armyComposition, setArmyComposition] = useState(\"empire-of-man\");\n  const [redirect, setRedirect] = useState(null);\n  const armies = gameSystems.filter(({ id }) => id === game)[0].armies;\n  const journalArmies = armies.find(({ id }) => army === id)?.armyComposition;\n  const listsPoints = [...lists.map((list) => list.points)].reverse();\n  const quickActions = lists.length\n    ? [...new Set([...listsPoints, 500, 1000, 1500, 2000, 2500])].slice(0, 5)\n    : [500, 1000, 1500, 2000, 2500];\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name || nameMap[army][language] || nameMap[army].name_en,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name || nameMap[army][language] || nameMap[army].name_en,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n        armyComposition: armyComposition,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n    setArmyComposition(value);\n  };\n  const handleArcaneJournalChange = (value) => {\n    setArmyComposition(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n  const handleQuickActionClick = (event) => {\n    event.preventDefault();\n    setPoints(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n                disabled={id === \"warhammer-fantasy\"}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <>\n                    <img height=\"20\" src={warhammerFantasy} alt={name} />\n                    <p className=\"new-list__beta\">\n                      <FormattedMessage id=\"new.8th\" />\n                    </p>\n                  </>\n                )}\n                {id === \"the-old-world\" && (\n                  <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={armies}\n            onChange={handleArmyChange}\n            selected=\"empire-of-man\"\n            spaceBottom\n            required\n          />\n          {journalArmies ? (\n            <>\n              <label htmlFor=\"arcane-journal\">\n                <FormattedMessage id=\"new.armyComposition\" />\n              </label>\n              <Select\n                id=\"arcane-journal\"\n                options={[\n                  {\n                    id: army,\n                    name_en: intl.formatMessage({ id: \"new.grandArmy\" }),\n                  },\n                  ...journalArmies.map((journalArmy) => ({\n                    id: journalArmy,\n                    name_en: nameMap[journalArmy].name_en,\n                    name_de: nameMap[journalArmy].name_de,\n                    name_es: nameMap[journalArmy].name_es,\n                    name_fr: nameMap[journalArmy].name_fr,\n                  })),\n                ]}\n                onChange={handleArcaneJournalChange}\n                selected={army}\n                spaceBottom\n              />\n            </>\n          ) : null}\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <p className=\"new-list__quick-actions\">\n            <i className=\"new-list__quick-actions-label\">\n              <FormattedMessage id=\"misc.suggestions\" />\n              {\": \"}\n            </i>\n            {quickActions.map((points, index) => (\n              <Button\n                type=\"tertiary\"\n                size=\"small\"\n                color=\"dark\"\n                className=\"new-list__quick-action\"\n                value={points}\n                onClick={handleQuickActionClick}\n                key={index}\n              >\n                {points}\n              </Button>\n            ))}\n          </p>\n\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <Button\n            centered\n            icon=\"add-list\"\n            submitButton\n            spaceBottom\n            size=\"large\"\n          >\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  \"grand-army\": {\n    lords: { maxPercent: 25 },\n    heroes: { maxPercent: 25 },\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: { maxPercent: 25 },\n  },\n  \"kingdom-of-bretonnia\": {\n    characters: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"duke\",\n          min: 0,\n          max: 1,\n        },\n        {\n          id: \"baron\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n        {\n          id: \"prophetees\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    core: {\n      minPercent: 25,\n      units: [\n        {\n          ids: [\"knights-of-the-realm\", \"mounted-knights-of-the-realm\"],\n          min: 1,\n        },\n        {\n          ids: [\"men-at-arms\", \"peasant-bowmen\"],\n          min: 1,\n        },\n      ],\n    },\n    special: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"battle-pilgrims\",\n          min: 0,\n          max: 2,\n          perPoints: 1000,\n        },\n      ],\n    },\n    rare: {\n      maxPercent: 25,\n      units: [\n        {\n          id: \"field-trebuchet\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: {\n      maxPercent: 25,\n      armies: [\n        \"errantry-crusades\",\n        \"bretonnian-exiles\",\n        \"dwarfen-mountain-holds\",\n        \"empire-of-man\",\n        \"high-elf-realms\",\n        \"wood-elf-realms\",\n      ],\n    },\n  },\n  \"errantry-crusades\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Empire Knights & Empire Inner Circle Knights ...\",\n    },\n  },\n  \"bretonnian-exiles\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 33,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Free Company Militia & Empire Archers ...\",\n    },\n  },\n  \"tomb-kings-of-khemri\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: {\n      maxPercent: 20,\n    },\n    allies: {\n      maxPercent: 25,\n    },\n  },\n  \"nehekharan-royal-hosts\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n  },\n  \"mortuary-cults\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n  },\n};\n\nexport const getMaxPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const categoryData = rules[armyComposition]\n    ? rules[armyComposition][type]\n    : rules[\"grand-army\"][type];\n\n  if (!categoryData) {\n    return null;\n  }\n\n  const maxPercent = categoryData.maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const minPercent = rules[armyComposition]\n    ? rules[armyComposition][type].minPercent\n    : rules[\"grand-army\"][type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const ListItem = forwardRef(\n  (\n    { to, onClick, children, className, active, disabled, ...attributes },\n    ref\n  ) => {\n    const Component = to ? Link : \"button\";\n\n    return (\n      <li\n        {...attributes}\n        ref={ref}\n        className={classNames(\"list\", active && \"list--active\", className)}\n      >\n        <Component\n          to={to}\n          className={classNames(\n            \"list__inner\",\n            disabled && \"list__inner--disabled\"\n          )}\n          onClick={onClick}\n        >\n          {children}\n        </Component>\n      </li>\n    );\n  }\n);\n\nListItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n/**\n * A list that allows its children to be reordered by dragging and dropping.\n *\n * @example\n * ```jsx\n * <OrderableList\n *    id=\"items\"\n *    onMoved={({sourceIndex, destinationIndex}) =>\n *      swap(items, sourceIndex, destinationIndex)}\n * >\n *   {items.map((item) => (\n *      <li>{item}</li>\n *   ))}\n * </OrderableList>\n * ```\n *\n * @param {object} props\n * @param {React.ReactElement[]} props.children\n * @param {string} props.id\n */\nexport const OrderableList = ({ id, children, onMoved }) => {\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    onMoved({\n      sourceIndex: result.source.index,\n      destinationIndex: result.destination.index,\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId={`droppable-${id}`}>\n        {(provided, _snapshot) => (\n          <ol {...provided.droppableProps} ref={provided.innerRef}>\n            {/* We clone the children and add the drag handlers props */}\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child) ? (\n                <Draggable\n                  key={child.key}\n                  draggableId={child.key}\n                  index={index}\n                >\n                  {(provided, snapshot) => {\n                    // Block horizontal movement\n                    const style = provided.draggableProps.style;\n                    if (style.transform) {\n                      style.transform = style.transform.replace(/\\d+/, \"0\");\n                    }\n\n                    return React.cloneElement(child, {\n                      // Add a dragging attribute for styling\n                      ...(snapshot.isDragging && !snapshot.isDropAnimating\n                        ? { dragging: \"\" }\n                        : {}),\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                    });\n                  }}\n                </Draggable>\n              ) : (\n                child\n              )\n            )}\n            {provided.placeholder}\n          </ol>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { nameMap } from \"../pages/magic\";\n\nexport const getAllOptions = (\n  {\n    mounts,\n    equipment,\n    armor,\n    options,\n    command,\n    items,\n    detachments,\n    activeLore,\n    lores,\n  },\n  { asString, noMagic, language: overrideLanguage } = {}\n) => {\n  const language = overrideLanguage || localStorage.getItem(\"lang\");\n  const detachmentActive =\n    options?.length > 0 &&\n    Boolean(\n      options.find((option) => option.name_en === \"Detachment\" && option.active)\n    );\n  const allCommand = [];\n\n  if (command && !detachmentActive) {\n    command.forEach(({ active, magic, name_en, options, ...entry }) => {\n      if (active) {\n        let commandEntry = entry[`name_${language}`] || name_en;\n        const selectedOptions = [];\n\n        if (options && options.length > 0) {\n          options.forEach((option) => {\n            if (option.active) {\n              selectedOptions.push(option.name_en);\n            }\n          });\n        }\n\n        if (magic && magic?.selected?.length && !noMagic) {\n          magic.selected.forEach((selectedItem) => {\n            selectedOptions.push(\n              selectedItem.amount > 1\n                ? `${selectedItem.amount}x ` +\n                    selectedItem[`name_${language}`] || selectedItem.name_en\n                : selectedItem[`name_${language}`] || selectedItem.name_en\n            );\n          });\n        }\n\n        if (selectedOptions.length) {\n          commandEntry += ` [${selectedOptions.join(\" + \")}]`;\n        }\n\n        allCommand.push(commandEntry);\n      }\n    });\n  }\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active, equippedDefault }) => active || equippedDefault)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allArmor = armor\n    ? armor\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_en, stackableCount, ...item }) =>\n            `${stackableCount} ${item[`name_${language}`] || name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allItems = [];\n  if (items?.length) {\n    items.forEach((item) => {\n      (item.selected || []).forEach((selectedItem) => {\n        allItems.push(\n          selectedItem.amount > 1\n            ? `${selectedItem.amount}x ` +\n                (selectedItem[`name_${language}`] || selectedItem.name_en)\n            : selectedItem[`name_${language}`] || selectedItem.name_en\n        );\n      });\n    });\n  }\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(({ name_en, strength, equipment, armor, options, ...item }) => {\n          let equipmentSelection = [];\n\n          if (equipment && equipment.length) {\n            equipment.forEach((option) => {\n              (option.active || option.equippedDefault) &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (armor && armor.length) {\n            armor.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (options && options.length) {\n            options.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n\n          return `${strength} ${item[`name_${language}`] || name_en}${\n            equipmentSelection.length\n              ? ` [${equipmentSelection\n                  .map((option) => option.replace(\", \", \" + \"))\n                  .join(\" + \")}]`\n              : \"\"\n          }`;\n        })\n    : [];\n  const lore = [];\n  if (activeLore) {\n    lore.push(\n      nameMap[activeLore][`name_${language}`] || nameMap[activeLore].name_en\n    );\n  } else if (lores?.length) {\n    lore.push(\n      nameMap[lores[0]][`name_${language}`] || nameMap[lores[0]].name_en\n    );\n  }\n\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allArmor,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allItems : []),\n    ...allDetachments,\n    ...lore,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \").replace(/\\*/g, \"\");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { Dialog } from \"../../components/dialog\";\nimport { ListItem } from \"../../components/list/ListItem\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList, moveUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeFromLocalList, updateLocalList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const location = useLocation();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault();\n    setIsDialogOpen(false);\n  };\n\n  const handleDeleteConfirm = () => {\n    setIsDialogOpen(false);\n    dispatch(deleteList(listId));\n    removeFromLocalList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"lords\",\n      armyPoints: list.points,\n      points: lordsPoints,\n      armyComposition: list.armyComposition,\n    });\n  const heroesData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"heroes\",\n      armyPoints: list.points,\n      points: heroesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const charactersData =\n    list.characters &&\n    getMaxPercentData({\n      type: \"characters\",\n      armyPoints: list.points,\n      points: charactersPoints,\n      armyComposition: list.armyComposition,\n    });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n    armyComposition: list.armyComposition,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n    armyComposition: list.armyComposition,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n    armyComposition: list.armyComposition,\n  });\n  const mercenariesData =\n    list.mercenaries &&\n    getMaxPercentData({\n      type: \"mercenaries\",\n      armyPoints: list.points,\n      points: mercenariesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const alliesData =\n    list.allies &&\n    getMaxPercentData({\n      type: \"allies\",\n      armyPoints: list.points,\n      points: alliesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.gameView\",\n      }),\n      icon: \"shield\",\n      to: `/game-view/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: () => setIsDialogOpen(true),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>\n        <p>\n          <FormattedMessage\n            id=\"editor.confirmDelete\"\n            values={{\n              list: <b>{list.name}</b>,\n            }}\n          />\n        </p>\n        <div className=\"editor__delete-dialog\">\n          <Button\n            type=\"text\"\n            onClick={handleDeleteClick}\n            icon=\"close\"\n            spaceTop\n            color=\"dark\"\n          >\n            <FormattedMessage id=\"misc.cancel\" />\n          </Button>\n          <Button\n            type=\"primary\"\n            submitButton\n            onClick={handleDeleteConfirm}\n            icon=\"delete\"\n            spaceTop\n          >\n            <FormattedMessage id=\"misc.delete\" />\n          </Button>\n        </div>\n      </Dialog>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.lords}\n              type=\"lords\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.heroes}\n              type=\"heroes\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.characters}\n              type=\"characters\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.core} type=\"core\" listId={listId} />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList\n            units={list.special}\n            type=\"special\"\n            listId={listId}\n          />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.rare} type=\"rare\" listId={listId} />\n\n          <Button\n            type=\"primary\"\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.allies && alliesData && list?.army !== \"daemons-of-chaos\" && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.allies}\n              type=\"allies\"\n              listId={listId}\n            />\n\n            <Button\n              type=\"primary\"\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.mercenaries &&\n          mercenariesData &&\n          list.armyComposition &&\n          list.army !== list.armyComposition && (\n            <section className=\"editor__section\">\n              <header className=\"editor__header\">\n                <h2>\n                  <FormattedMessage id=\"editor.mercenaries\" />\n                </h2>\n                <p className=\"editor__points\">\n                  {mercenariesData.diff > 0 ? (\n                    <>\n                      <strong>{mercenariesData.diff}</strong>\n                      <FormattedMessage id=\"editor.tooManyPoints\" />\n                      <Icon symbol=\"error\" color=\"red\" />\n                    </>\n                  ) : (\n                    <>\n                      <strong>\n                        {mercenariesData.points - mercenariesPoints}\n                      </strong>\n                      <FormattedMessage id=\"editor.availablePoints\" />\n                      <Icon symbol=\"check\" />\n                    </>\n                  )}\n                </p>\n              </header>\n\n              <OrderableUnitList\n                units={list.mercenaries}\n                type=\"mercenaries\"\n                listId={listId}\n              />\n\n              <Button\n                type=\"primary\"\n                centered\n                to={`/editor/${listId}/add/mercenaries`}\n                icon=\"add\"\n                spaceTop\n              >\n                <FormattedMessage id=\"editor.add\" />\n              </Button>\n            </section>\n          )}\n      </MainComponent>\n    </>\n  );\n};\n\n/**\n * @param {object} props\n * @param {object[]} props.units\n * @param {string} props.type\n * @param {string} props.listId\n */\nexport const OrderableUnitList = ({ units, type, listId }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n\n  const handleMoved = (indexes) =>\n    dispatch(\n      moveUnit({\n        listId,\n        type,\n        ...indexes,\n      })\n    );\n\n  return (\n    <OrderableList id={type} onMoved={handleMoved}>\n      {units.map((unit, index) => (\n        <ListItem\n          key={index}\n          to={`/editor/${listId}/${type}/${unit.id}`}\n          className=\"editor__list\"\n          active={location.pathname.includes(unit.id)}\n        >\n          <div className=\"editor__list-inner\">\n            {unit.strength || unit.minimum ? (\n              <span>{`${unit.strength || unit.minimum}`}</span>\n            ) : null}\n            <b>{unit[`name_${language}`] || unit.name_en}</b>\n            <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n          </div>\n          {getAllOptions(unit)}\n        </ListItem>\n      ))}\n    </OrderableList>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","export default __webpack_public_path__ + \"static/media/forg3d.33b515df.jpg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n// import { CustomEvent } from \"@piwikpro/react-piwik-pro\";\n\nimport { Button } from \"../../components/button\";\nimport { ListItem, OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport { setArmy } from \"../../state/army\";\nimport { setItems } from \"../../state/items\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\nimport forg3dBanner from \"../../assets/forg3d.jpg\";\nimport { swap } from \"../../utils/collection\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblin-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const resetState = () => {\n    dispatch(setArmy(null));\n    dispatch(setItems(null));\n  };\n  const handleListMoved = ({ sourceIndex, destinationIndex }) => {\n    const newLists = swap(lists, sourceIndex, destinationIndex);\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    return dispatch(setLists(newLists));\n  };\n  const handleForg3dClick = () => {\n    // CustomEvent.trackEvent(\"affiliate_link\", \"click\", \"forg3d\");\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer: The Old World and\n          Warhammer Fantasy Battles\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/\" />\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <OrderableList id=\"armies\" onMoved={handleListMoved}>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <ListItem\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n                onClick={resetState}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </ListItem>\n            )\n          )}\n        </OrderableList>\n        <Button\n          centered\n          to=\"/new\"\n          icon=\"new-list\"\n          spaceTop\n          onClick={resetState}\n          size=\"large\"\n        >\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n        <Button\n          centered\n          to=\"/import\"\n          type=\"text\"\n          icon=\"import\"\n          color=\"dark\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.import\" />\n        </Button>\n\n        <hr />\n\n        <p>\n          <b>\n            <i>\n              <FormattedMessage id=\"home.sponsored\" />\n            </i>\n          </b>\n        </p>\n        <a\n          className=\"home__banner-link\"\n          href=\"https://tinyurl.com/Forg3dOWB\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={handleForg3dClick}\n        >\n          <img\n            src={forg3dBanner}\n            className=\"home__banner-image\"\n            alt={intl.formatMessage({ id: \"home.forg3d\" })}\n            loading=\"lazy\"\n          />\n        </a>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitMagicPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport {\n  RulesIndex,\n  rulesMap,\n  RulesLinksText,\n  RulesWithIcon,\n  RuleWithIcon,\n} from \"../../components/rules-index\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { updateIds } from \"../../utils/id\";\nimport { normalizeRuleName } from \"../../utils/string\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachmentActive =\n    unit &&\n    unit?.options?.length > 0 &&\n    Boolean(\n      unit.options.find(\n        (option) => option.name_en === \"Detachment\" && option.active\n      )\n    );\n  // const detachments =\n  //   army &&\n  //   [...army.core, ...army.special, ...army.rare].filter(\n  //     (coreUnit) => coreUnit.detachment\n  //   );\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  // const handleAddDetachmentClick = ({ id }) => {\n  //   const detachment = detachments.find((detachment) => detachment.id === id);\n  //   const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n  //   unitDetachments.push({\n  //     id: `${id}.${getRandomId()}`,\n  //     name_de: detachment.name_de,\n  //     name_en: detachment.name_en,\n  //     points: detachment.points,\n  //     strength: detachment.minDetachmentSize || 5,\n  //     minDetachmentSize: detachment.minDetachmentSize || 5,\n  //     maxDetachmentSize: detachment.maxDetachmentSize,\n  //     equipment: detachment.equipment,\n  //     armor: detachment.armor,\n  //     options: detachment.options,\n  //   });\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDeleteDetachmentClick = ({ id }) => {\n  //   const unitDetachments = [...unit.detachments].filter(\n  //     (detachment) => detachment.id !== id\n  //   );\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDetachmentStrengthClick = ({ id, strength }) => {\n  //   const unitDetachments = [...unit.detachments].map((detachment) =>\n  //     detachment.id === id ? { ...detachment, strength } : detachment\n  //   );\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  // const handleDetachmentEquipmentChange = ({\n  //   detachmentId,\n  //   equipmentId,\n  //   category,\n  //   isCheckbox,\n  // }) => {\n  //   const unitDetachments = [...unit.detachments].map((detachment) => {\n  //     if (detachment.id === detachmentId) {\n  //       const equipment = detachment[category].map((item) => {\n  //         let active = false;\n\n  //         if (isCheckbox && item.id === equipmentId) {\n  //           active = !item.active;\n  //         } else if (item.id === equipmentId) {\n  //           active = true;\n  //         } else if (isCheckbox) {\n  //           active = item.active;\n  //         }\n\n  //         return {\n  //           ...item,\n  //           active,\n  //         };\n  //       });\n\n  //       return { ...detachment, [category]: equipment };\n  //     }\n\n  //     return detachment;\n  //   });\n\n  //   dispatch(\n  //     editUnit({\n  //       listId,\n  //       type,\n  //       unitId,\n  //       detachments: unitDetachments,\n  //     })\n  //   );\n  // };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id, optionIndex) => {\n    let magicItems = unit.magic?.items || [];\n    let command;\n\n    if (optionIndex !== undefined) {\n      command = unit.command.map((commandOption) => {\n        if (commandOption.id === id) {\n          const options = commandOption.options.map((option, index) => {\n            if (index === optionIndex) {\n              return {\n                ...option,\n                active: option.active ? false : true,\n              };\n            }\n\n            return option;\n          });\n\n          return {\n            ...commandOption,\n            options,\n          };\n        }\n        return commandOption;\n      });\n    } else {\n      command = unit.command.map((option, index) => {\n        if (option.id === id) {\n          // Also remove banner runes\n          if (option.active) {\n            magicItems = magicItems.filter(({ command }) => command !== index);\n          }\n\n          return {\n            ...option,\n            active: option.active ? false : true,\n          };\n        }\n        return option;\n      });\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleArmorChange = (id) => {\n    const armor = unit.armor.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        armor,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n  const handleLoresChange = (lore) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        activeLore: lore,\n      })\n    );\n  };\n  const getPointsText = ({ points, perModel }) => {\n    if (points === 0) {\n      return intl.formatMessage({\n        id: \"app.free\",\n      });\n    }\n\n    return (\n      <>\n        {`${points} ${\n          points === 1\n            ? intl.formatMessage({\n                id: \"app.point\",\n              })\n            : intl.formatMessage({\n                id: \"app.points\",\n              })\n        }`}\n        {perModel &&\n          type !== \"characters\" &&\n          ` ${intl.formatMessage({\n            id: \"unit.perModel\",\n          })}`}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`] || unit.name_en}\n          headlineIcon={<RuleWithIcon name={unit.name_en} />}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <RulesIndex />\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`] || unit.name_en}\n            headlineIcon={<RuleWithIcon name={unit.name_en} isDark />}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          (!unit.lores || (unit.lores && !unit.lores.length)) &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.armor || (unit.armor && !unit.armor.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic ||\n            (unit.magic && !unit.magic.maxPoints && !unit.items?.length)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.notes && unit.notes.name_en ? (\n          <p className=\"unit__notes\">\n            <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n            {unit.notes[`name_${language}`] || unit.notes.name_en}\n          </p>\n        ) : null}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              min={\n                detachmentActive && unit.minDetachmentSize\n                  ? unit.minDetachmentSize\n                  : unit.minimum\n              }\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            {type !== \"characters\" && (\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n            )}\n            {unit.command.map(\n              (\n                {\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                  options,\n                  ...command\n                },\n                index\n              ) => {\n                const commandMagicPoints = getUnitMagicPoints({\n                  selected: magic?.selected,\n                });\n\n                return (\n                  <Fragment key={id}>\n                    <div\n                      className={classNames(\n                        \"checkbox\",\n                        type === \"characters\" && \"unit__bsb\"\n                      )}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                        disabled={detachmentActive}\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        <span className=\"unit__label-text\">\n                          <RulesWithIcon textObject={command} />\n                        </span>\n                        <i className=\"checkbox__points\">\n                          {getPointsText({ points })}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.types && magic.types.length && active ? (\n                      <>\n                        <hr className=\"unit__hr\" />\n                        <ListItem\n                          to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link unit__command-list\"\n                          active={location.pathname.includes(`magic/${index}`)}\n                          disabled={detachmentActive}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (itemType) =>\n                                    nameMap[itemType][`name_${language}`] ||\n                                    nameMap[itemType].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    unit.command[index].magic.maxPoints > 0 &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {commandMagicPoints}\n                              </span>{\" \"}\n                              {unit.command[index].magic.maxPoints > 0 && (\n                                <>{` / ${unit.command[index].magic.maxPoints}`}</>\n                              )}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints &&\n                              unit.command[index].magic.maxPoints > 0 && (\n                                <Icon\n                                  symbol=\"error\"\n                                  color=\"red\"\n                                  className=\"unit__magic-icon\"\n                                />\n                              )}\n                          </div>\n                          {magic?.selected && (\n                            <p>\n                              {magic.selected\n                                .map((selectedItem) =>\n                                  selectedItem.amount > 1\n                                    ? `${selectedItem.amount}x ` +\n                                      (selectedItem[`name_${language}`] ||\n                                        selectedItem.name_en)\n                                    : selectedItem[`name_${language}`] ||\n                                      selectedItem.name_en\n                                )\n                                .join(\", \")\n                                .replace(/\\*/g, \"\")}\n                            </p>\n                          )}\n                        </ListItem>\n                      </>\n                    ) : null}\n                    {options?.length > 0 && active && (\n                      <Fragment>\n                        {options.map((option, optionIndex) => {\n                          const exclusiveCheckedOption = options.find(\n                            (exclusiveOption) =>\n                              exclusiveOption.exclusive &&\n                              exclusiveOption.active\n                          );\n\n                          return (\n                            <div\n                              className=\"checkbox checkbox--conditional\"\n                              key={option.name_en}\n                            >\n                              <input\n                                type=\"checkbox\"\n                                id={`command-${id}-option-${optionIndex}`}\n                                value={`${id}-${optionIndex}`}\n                                onChange={() =>\n                                  handleCommandChange(id, optionIndex)\n                                }\n                                checked={Boolean(option.active)}\n                                className=\"checkbox__input\"\n                                disabled={\n                                  (exclusiveCheckedOption &&\n                                    option.exclusive &&\n                                    !option.active) ||\n                                  detachmentActive\n                                }\n                              />\n                              <label\n                                htmlFor={`command-${id}-option-${optionIndex}`}\n                                className=\"checkbox__label\"\n                              >\n                                <span className=\"unit__label-text\">\n                                  <RulesWithIcon textObject={option} />\n                                </span>\n                                <i className=\"checkbox__points\">\n                                  {getPointsText({ points: option.points })}\n                                </i>\n                              </label>\n                            </div>\n                          );\n                        })}\n                        <hr className=\"unit__command-option-hr\" />\n                      </Fragment>\n                    )}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      <RulesWithIcon textObject={equipment} />\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.armor && unit.armor.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.armor\" />\n            </h2>\n            {unit.armor.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`armor-${id}`}\n                    name=\"armor\"\n                    value={id}\n                    onChange={() => handleArmorChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`armor-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      <RulesWithIcon textObject={equipment} />\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n                ...equipment\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      <span className=\"unit__label-text\">\n                        <RulesWithIcon textObject={equipment} />\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      <span className=\"unit__label-text\">\n                        <RulesWithIcon textObject={equipment} />\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {/* {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_en, id, ...detachment }) => (\n              <Fragment key={id}>\n                <div className=\"list\">\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {detachment[`name_${language}`] || name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                      disabled={\n                        unit?.detachments?.length >= unit.maxDetachments\n                      }\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(\n                      ({\n                        name_en,\n                        strength,\n                        id,\n                        points,\n                        minDetachmentSize,\n                        maxDetachmentSize,\n                        equipment: detachmentEquipment,\n                        armor: detachmentArmor,\n                        options: detachmentOptions,\n                        ...detachment\n                      }) => (\n                        <div\n                          className=\"list unit__detachments-wrapper\"\n                          key={id}\n                        >\n                          <div className=\"list__inner unit__detachments\">\n                            <NumberInput\n                              noError\n                              id={`strength-${id}`}\n                              min={minDetachmentSize || 5}\n                              max={\n                                maxDetachmentSize ||\n                                Math.floor(unit.strength / 2)\n                              }\n                              value={strength}\n                              onChange={(event) =>\n                                handleDetachmentStrengthClick({\n                                  id,\n                                  strength: event.target.value,\n                                })\n                              }\n                            />\n                            <span>\n                              <b>{detachment[`name_${language}`] || name_en}</b>\n                              <i>{getPointsText({ points })}</i>\n                            </span>\n                            <Button\n                              onClick={() =>\n                                handleDeleteDetachmentClick({\n                                  id,\n                                })\n                              }\n                              type=\"secondary\"\n                              icon=\"close\"\n                              label={intl.formatMessage({ id: \"misc.remove\" })}\n                              size=\"small\"\n                            />\n                          </div>\n                          <div className=\"unit__detachments-section\">\n                            {detachmentEquipment &&\n                              detachmentEquipment.length > 0 && (\n                                <>\n                                  <h3 className=\"unit__subline\">\n                                    <FormattedMessage id=\"unit.equipment\" />\n                                  </h3>\n                                  {detachmentEquipment.map((equipment) => (\n                                    <div className=\"radio\" key={equipment.id}>\n                                      <input\n                                        type=\"radio\"\n                                        id={`equipment-${id}-${equipment.id}`}\n                                        name={`equipment-${id}`}\n                                        value={equipment.id}\n                                        onChange={() =>\n                                          handleDetachmentEquipmentChange({\n                                            detachmentId: id,\n                                            equipmentId: equipment.id,\n                                            category: \"equipment\",\n                                          })\n                                        }\n                                        checked={equipment.active || false}\n                                        className=\"radio__input\"\n                                      />\n                                      <label\n                                        htmlFor={`equipment-${id}-${equipment.id}`}\n                                        className=\"radio__label\"\n                                      >\n                                        <span className=\"unit__label-text\">\n                                          <RulesWithIcon\n                                            textObject={equipment}\n                                          />\n                                        </span>\n                                        <i className=\"checkbox__points\">\n                                          {getPointsText({\n                                            points: equipment.points,\n                                            perModel: equipment.perModel,\n                                          })}\n                                        </i>\n                                      </label>\n                                    </div>\n                                  ))}\n                                </>\n                              )}\n                            {detachmentArmor && detachmentArmor.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.armor\" />\n                                </h3>\n                                {detachmentArmor.map((armor) => (\n                                  <div className=\"radio\" key={armor.id}>\n                                    <input\n                                      type=\"radio\"\n                                      id={`armor-${id}-${armor.id}`}\n                                      name={`armor-${id}`}\n                                      value={armor.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: armor.id,\n                                          category: \"armor\",\n                                        })\n                                      }\n                                      checked={armor.active}\n                                      className=\"radio__input\"\n                                    />\n                                    <label\n                                      htmlFor={`armor-${id}-${armor.id}`}\n                                      className=\"radio__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        <RulesWithIcon textObject={armor} />\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: armor.points,\n                                          perModel: armor.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                            {detachmentOptions && detachmentOptions.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.options\" />\n                                </h3>\n                                {detachmentOptions.map((option) => (\n                                  <div className=\"checkbox\" key={option.id}>\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`options-${id}-${option.id}`}\n                                      value={option.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: option.id,\n                                          category: \"options\",\n                                          isCheckbox: true,\n                                        })\n                                      }\n                                      checked={option.active || false}\n                                      className=\"checkbox__input\"\n                                    />\n                                    <label\n                                      htmlFor={`options-${id}-${option.id}`}\n                                      className=\"checkbox__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        <RulesWithIcon textObject={option} />\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: option.points,\n                                          perModel: option.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )\n                    )}\n              </Fragment>\n            ))}\n          </>\n        )} */}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(({ points, id, active = false, ...mount }) => (\n              <div className=\"radio\" key={id}>\n                <input\n                  type=\"radio\"\n                  id={`mounts-${id}`}\n                  name=\"mounts\"\n                  value={id}\n                  onChange={() => handleMountsChange(id)}\n                  checked={active}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                  <span className=\"unit__label-text\">\n                    <RulesWithIcon textObject={mount} />\n                  </span>\n                  <i className=\"checkbox__points\">\n                    {getPointsText({ points })}\n                  </i>\n                </label>\n              </div>\n            ))}\n          </>\n        )}\n        {unit.lores && unit.lores.length ? (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.lore\" />\n            </h2>\n            {unit.lores.map((lore) => (\n              <div className=\"radio\" key={lore}>\n                <input\n                  type=\"radio\"\n                  id={`lore-${lore}`}\n                  name=\"lores\"\n                  value={lore}\n                  onChange={() => handleLoresChange(lore)}\n                  checked={(unit.activeLore || unit.lores[0]) === lore}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                  {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  {rulesMap[normalizeRuleName(nameMap[lore].name_en)] ? (\n                    <Button\n                      type=\"text\"\n                      className=\"unit__rules\"\n                      color=\"dark\"\n                      label={intl.formatMessage({ id: \"misc.showRules\" })}\n                      icon=\"preview\"\n                      onClick={() =>\n                        handleRulesClick({\n                          name: nameMap[lore].name_en,\n                        })\n                      }\n                    />\n                  ) : null}\n                </label>\n              </div>\n            ))}\n          </>\n        ) : null}\n        {unit.items && unit.items.length ? (\n          <hr className=\"unit__hr unit__hr--space-top\" />\n        ) : null}\n        {unit.items && unit.items.length\n          ? unit.items.map((item, itemIndex) => {\n              const itemsPoints = getUnitMagicPoints({\n                selected: item.selected,\n              });\n\n              return (\n                <ListItem\n                  to={`/editor/${listId}/${type}/${unitId}/items/${itemIndex}`}\n                  className=\"editor__list unit__link\"\n                  active={location.pathname.includes(`items/${itemIndex}`)}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span\n                        className={classNames(\n                          itemsPoints > item.maxPoints &&\n                            item.maxPoints > 0 &&\n                            \"editor__error\"\n                        )}\n                      >\n                        {itemsPoints}\n                      </span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                    {itemsPoints > item.maxPoints && item.maxPoints > 0 && (\n                      <Icon\n                        symbol=\"error\"\n                        color=\"red\"\n                        className=\"unit__magic-icon\"\n                      />\n                    )}\n                  </div>\n                  {item.selected && (\n                    <p>\n                      {item.selected\n                        .map((selectedItem) =>\n                          selectedItem.amount > 1\n                            ? `${selectedItem.amount}x ` +\n                              (selectedItem[`name_${language}`] ||\n                                selectedItem.name_en)\n                            : selectedItem[`name_${language}`] ||\n                              selectedItem.name_en\n                        )\n                        .join(\", \")\n                        .replace(/\\*/g, \"\")}\n                    </p>\n                  )}\n                </ListItem>\n              );\n            })\n          : null}\n        {unit.specialRules && unit.specialRules.name_en ? (\n          <>\n            <h2 className=\"unit__subline unit__subline--space-before\">\n              <FormattedMessage id=\"unit.specialRules\" />\n            </h2>\n            <p>\n              <RulesLinksText textObject={unit.specialRules} />\n            </p>\n          </>\n        ) : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n          interval={50}\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { loadScript } from \"../../utils/script\";\n\nimport \"./About.css\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    loadScript(\"https://www.paypalobjects.com/donate/sdk/donate-sdk.js\", () => {\n      window.PayPal.Donation.Button({\n        env: \"production\",\n        hosted_button_id: \"VU2Z6Q32Q656A\",\n        image: {\n          src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\",\n          alt: \"Donate with PayPal button\",\n          title: \"PayPal - The safer, easier way to pay online!\",\n        },\n      }).render(\"#donate-button\");\n    });\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/about\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.donation\" />\n        </p>\n        <div id=\"donate-button-container\" className=\"about__donation\">\n          <div id=\"donate-button\"></div>\n        </div>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.community\" />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.rulesIndex\"\n            values={{\n              rulesIndex: (\n                <a\n                  href=\"https://www.whfb.app/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Online Rules Index\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <br />\n        <p>\n          <b>\n            <FormattedMessage id=\"about.disclaimer\" />\n          </b>\n        </p>\n        <p>\n          Warhammer: the Old World, Citadel, Forge World, Games Workshop, GW,\n          Warhammer, the 'winged-hammer' Warhammer logo, the Chaos devices, the\n          Chaos logo, Citadel Device, the Double-Headed/Imperial Eagle device,\n          'Eavy Metal, Games Workshop logo, Golden Demon, Great Unclean One, the\n          Hammer of Sigmar logo, Horned Rat logo, Keeper of Secrets, Khemri,\n          Khorne, Lord of Change, Nurgle, Skaven, the Skaven symbol devices,\n          Slaanesh, Tomb Kings, Trio of Warriors, Twin Tailed Comet Logo,\n          Tzeentch, Warhammer Online, Warhammer World logo, White Dwarf, the\n          White Dwarf logo, and all associated logos, marks, names, races, race\n          insignia, characters, vehicles, locations, units, illustrations and\n          images from the Warhammer world are either ®, TM and/or © Copyright\n          Games Workshop Ltd 2000-2024, variably registered in the UK and other\n          countries around the world. Used without permission. No challenge to\n          their status intended. All Rights Reserved to their respective owners.\n        </p>\n      </Main>\n    </>\n  );\n};\n","export const loadScript = (src, done) => {\n  const js = document.createElement(\"script\");\n\n  js.src = src;\n  js.onload = function () {\n    done && done();\n  };\n  js.onerror = function () {\n    done && done(new Error(\"Failed to load script \" + src));\n  };\n  document.head.appendChild(js);\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { ListItem } from \"../../components/list\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nconst getArmyData = ({ data, armyComposition }) => {\n  // Remove units that don't belong to the army composition\n  const characters = data.characters.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const core = data.core.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const special = data.special.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const rare = data.rare.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n\n  // Get units moving category\n  const specialToCore = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"core\"\n  );\n  const rareToCore = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n  const rareToSpecial = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const coreToSpecial = core.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const specialToRare = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n\n  // Remove units from old category\n  const allCore = [...core, ...specialToCore, ...rareToCore].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"core\") ||\n      !unit.armyComposition\n  );\n  const allSpecial = [...special, ...coreToSpecial, ...rareToSpecial].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"special\") ||\n      !unit.armyComposition\n  );\n  const allRare = [...rare, ...specialToRare].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"rare\") ||\n      !unit.armyComposition\n  );\n\n  return {\n    lords: updateIds(data.lords),\n    heroes: updateIds(data.heroes),\n    characters: updateIds(characters),\n    core: updateIds(allCore),\n    special: updateIds(allSpecial),\n    rare: updateIds(allRare),\n    mercenaries: updateIds(data.mercenaries),\n    allies: updateIds(data.allies),\n  };\n};\n\nlet allAllies = [];\nlet allMercenaries = [];\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const [alliesLoaded, setAlliesLoaded] = useState(0);\n  const [mercenariesLoaded, setMercenariesLoaded] = useState(0);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const game = gameSystems.find((game) => game.id === list?.game);\n  const armyData = game?.armies.find((army) => army.id === list.army);\n  const allies = armyData?.allies;\n  const mercenaries = armyData?.mercenaries;\n  const handleAdd = (unit, ally) => {\n    const newUnit = {\n      ...unit,\n      army: ally,\n      id: `${unit.id}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit: newUnit }));\n    setRedirect(newUnit.id);\n  };\n  const getUnit = (unit, ally) => (\n    <ListItem key={unit.id} onClick={() => handleAdd(unit, ally)}>\n      <span className=\"unit__name\">\n        {unit.minimum ? `${unit.minimum} ` : null}\n        <b>{unit[`name_${language}`] || unit.name_en}</b>\n      </span>\n      <i className=\"unit__points\">{`${\n        unit.minimum ? unit.points * unit.minimum : unit.points\n      } ${intl.formatMessage({\n        id: \"app.points\",\n      })}`}</i>\n    </ListItem>\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    allAllies = [];\n    allMercenaries = [];\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list && !army && type !== \"allies\") {\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          const armyData = getArmyData({\n            data,\n            armyComposition: list.armyComposition || list.army,\n          });\n          dispatch(setArmy(armyData));\n        },\n      });\n    } else if (list && type === \"allies\" && allAllies.length === 0 && allies) {\n      setAlliesLoaded(false);\n      allies.forEach((ally, index) => {\n        fetcher({\n          url: `games/${list.game}/${ally}`,\n          onSuccess: (data) => {\n            const armyData = getArmyData({\n              data,\n              armyComposition: ally,\n            });\n            allAllies = [...allAllies, { ...armyData, ally }];\n            setAlliesLoaded(index + 1);\n          },\n        });\n      });\n    } else if (\n      list &&\n      type === \"mercenaries\" &&\n      allMercenaries.length === 0 &&\n      mercenaries\n    ) {\n      setMercenariesLoaded(false);\n      mercenaries[list.armyComposition] &&\n        mercenaries[list.armyComposition].forEach((mercenary, index) => {\n          fetcher({\n            url: `games/${list.game}/${mercenary.army}`,\n            onSuccess: (data) => {\n              const armyData = getArmyData({\n                data,\n                armyComposition: mercenary.army,\n              });\n              const allUnits = [\n                ...armyData.characters,\n                ...armyData.core,\n                ...armyData.special,\n                ...armyData.rare,\n              ];\n              const mercenaryUnits = allUnits.filter((unit) =>\n                mercenary.units.includes(unit.id)\n              );\n              allMercenaries = [...allMercenaries, ...mercenaryUnits].map(\n                (mercenaryUnit) => ({ ...mercenaryUnit, army: mercenary.army })\n              );\n              setMercenariesLoaded(index + 1);\n            },\n          });\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list, army, allies, type]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect}`} />;\n  }\n\n  if (\n    (!army && type !== \"allies\" && type !== \"mercenaries\") ||\n    (type === \"allies\" &&\n      !allies &&\n      alliesLoaded === 0 &&\n      allAllies.length !== allies?.length) ||\n    (type === \"mercenaries\" &&\n      !mercenaries &&\n      mercenariesLoaded === 0 &&\n      allMercenaries.length !== mercenaries?.length)\n  ) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        {type === \"allies\" && (\n          <>\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              <FormattedMessage id=\"add.alliesInfo\" />\n            </p>\n            <ul>\n              {allAllies.map(\n                ({ characters, core, special, rare, ally }, index) => (\n                  <Fragment key={index}>\n                    <header className=\"editor__header\">\n                      <h2>\n                        {game?.armies.find((army) => army.id === ally)[\n                          `name_${language}`\n                        ] ||\n                          game?.armies.find((army) => army.id === ally).name_en}\n                      </h2>\n                    </header>\n                    {characters.map((unit) => getUnit(unit, ally))}\n                    {core.map((unit) => getUnit(unit, ally))}\n                    {special.map((unit) => getUnit(unit, ally))}\n                    {rare.map((unit) => getUnit(unit, ally))}\n                  </Fragment>\n                )\n              )}\n            </ul>\n          </>\n        )}\n        {type === \"mercenaries\" && (\n          <ul>{allMercenaries.map((unit) => getUnit(unit, unit.army))}</ul>\n        )}\n        {type !== \"allies\" && type !== \"mercenaries\" && (\n          <ul>{army[type].map((unit) => getUnit(unit))}</ul>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/help\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import { rulesMap, synonyms } from \"../../components/rules-index\";\n\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { nameMap } from \"../magic\";\n\nconst getUnitsString = ({\n  units,\n  isShowList,\n  isCompactList,\n  showSpecialRules,\n  intl,\n  language,\n  showStats,\n}) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n      let optionsString = \"\";\n\n      if (allOptions) {\n        if (isCompactList) {\n          optionsString = `(${allOptions})\\n`;\n        } else {\n          optionsString = `- ${allOptions.split(\", \").join(\"\\n- \")}\\n`;\n        }\n      }\n      if (showSpecialRules && unit.specialRules) {\n        optionsString += `${intl.formatMessage({\n          id: \"unit.specialRules\",\n        })}: ${\n          unit.specialRules[`name_${language}`] || unit.specialRules.name_en\n        }\\n`;\n      }\n      if (showStats) {\n        const normalizedName = normalizeRuleName(unit.name_en);\n        const synonym = synonyms[normalizedName];\n        const stats = rulesMap[synonym || normalizedName]?.stats;\n\n        if (stats?.length > 0) {\n          stats.forEach((unitStats, index) => {\n            // prettier-ignore\n            optionsString += `\n[${unitStats.Name.replace(/ /g, '\\xa0')}]\\xa0${intl.formatMessage({id: \"unit.m\"})}(${unitStats.M})\\xa0${intl.formatMessage({id: \"unit.ws\"})}(${unitStats.WS})\\xa0${intl.formatMessage({id: \"unit.bs\"})}(${unitStats.BS})\\xa0${intl.formatMessage({id: \"unit.s\"})}(${unitStats.S})\\xa0${intl.formatMessage({id: \"unit.t\"})}(${unitStats.T})\\xa0${intl.formatMessage({id: \"unit.w\"})}(${unitStats.W})\\xa0${intl.formatMessage({id: \"unit.i\"})}(${unitStats.I})\\xa0${intl.formatMessage({id: \"unit.a\"})}(${unitStats.A})\\xa0${intl.formatMessage({id: \"unit.ld\"})}(${unitStats.Ld})\n`;\n          });\n        } else {\n          // prettier-ignore\n          optionsString += `\n${intl.formatMessage({id: \"unit.m\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.ws\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.bs\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.s\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.t\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.w\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.i\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.a\"})}(${'\\xa0'})\\xa0${intl.formatMessage({id: \"unit.ld\"})}(${'\\xa0'})\n`;\n        }\n      }\n\n      // prettier-ignore\n      return `${unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n}${unit[`name_${language}`] || unit.name_en}${isShowList ? '' : ' [' + getUnitPoints(unit) + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${optionsString}\n`;\n    })\n    .join(\"\");\n};\n\nexport const getListAsText = ({\n  list,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n  showSpecialRules,\n  showStats,\n}) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const armyCompositionString = armyCompositionName\n    ? `, ${armyCompositionName}`\n    : \"\";\n  let listString = \"\";\n\n  // HEADER\n  // prettier-ignore\n  if (!isCompactList) {\n    listString += `===\n${list.name}${isShowList ? '' : ' [' + allPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${game.name}, ${armyName}${armyCompositionString}\n===\n\n`;\n  }\n\n  // CHARACTERS\n  // prettier-ignore\n  if (list.characters?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})}${isShowList ? '' : ' [' + charactersPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.characters,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // LORDS\n  // prettier-ignore\n  if (list.lords?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})}${isShowList ? '' : ' [' + lordsPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.lords,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // HEROES\n  // prettier-ignore\n  if (list.heroes?.length) {\n      listString += `++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})}${isShowList ? '' : ' [' + heroesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.heroes,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // CORE\n  // prettier-ignore\n  if (list.core.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.core\",\n})}${isShowList ? '' : ' [' + corePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.core,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // SPECIAL\n  // prettier-ignore\n  if (list.special.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.special\",\n})}${isShowList ? '' : ' [' + specialPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.special,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // RARE\n  // prettier-ignore\n  if (list.rare.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})}${isShowList ? '' : ' [' + rarePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.rare,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // MERCENARIES\n  // prettier-ignore\n  if (list.mercenaries?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})}${isShowList ? '' : ' [' + mercenariesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.mercenaries,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  // ALLIES\n  // prettier-ignore\n  if (list.allies?.length) {\n  listString += `++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})}${isShowList ? '' : ' [' + alliesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n\n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.allies,\n      isShowList,\n      intl,\n      language,showStats\n    })}`;\n  }\n\n  listString += `---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n\n  return listString;\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport { getListAsText } from \"./get-list-as-text\";\n// import { getListAsMarkdown } from \"./get-list-as-markdown\";\nimport \"./Export.css\";\n\nconst getFile = ({ list, listText, asText }) => {\n  const fileName = `${list?.name\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/,/g, \"\")}.${asText ? \"txt\" : \"owb.json\"}`;\n  const file = new File([asText ? listText : JSON.stringify(list)], fileName, {\n    type: asText ? \"text/plain\" : \"application/json\",\n  });\n  const fileUrl = URL.createObjectURL(file);\n\n  return {\n    file,\n    fileUrl,\n    fileName,\n  };\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const { listId } = useParams();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [shareOwbError, setOwbShareError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showStats, setShowStats] = useState(false);\n  const [isCompactList, setIsCompactList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  // const [isMarkdownList, setIsMarkdownList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({\n        list,\n        isShowList,\n        isCompactList,\n        showSpecialRules,\n        intl,\n        language,\n        showStats,\n      })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const { file, fileUrl, fileName } = getFile({ list });\n  const { fileName: textFileName, fileUrl: textFileUrl } = getFile({\n    list,\n    listText,\n    asText: true,\n  });\n  const share = async ({ asText }) => {\n    const shareData = {};\n\n    asText ? setShareError(false) : setOwbShareError(false);\n\n    if (asText) {\n      shareData.text = listText;\n    } else {\n      shareData.title = list.name;\n      shareData.files = [file];\n      shareData.text = list.description;\n    }\n\n    if (!navigator.canShare) {\n      asText ? setShareError(true) : setOwbShareError(true);\n      return;\n    }\n\n    try {\n      await navigator.share(shareData);\n    } catch (error) {\n      asText ? setShareError(true) : setOwbShareError(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.copyTitle\" />\n        </h2>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"compact\"\n            onChange={() => setIsCompactList(!isCompactList)}\n            checked={isCompactList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"compact\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.compactList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.compactListDescription\" />\n          </i>\n        </p>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.visibleListDescription\" />\n          </i>\n        </p>\n        {/* <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"forum\"\n            onChange={() => setIsForumList(!isForumList)}\n            checked={isForumList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"forum\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.forumText\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.forumTextDescription\" />\n          </i>\n        </p> */}\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"specialRules\"\n            onChange={() => setShowSpecialRules(!showSpecialRules)}\n            checked={showSpecialRules}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.specialRules\" />\n          </label>\n        </div>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"showStats\"\n            onChange={() => setShowStats(!showStats)}\n            checked={showStats}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"showStats\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.showStats\" />\n          </label>\n        </div>\n        <p className=\"export__description\"></p>\n        <Expandable headline={<FormattedMessage id=\"export.preview\" />}>\n          <textarea className=\"export__text\" value={listText} readOnly />\n        </Expandable>\n        <Button icon=\"share\" onClick={() => share({ asText: true })}>\n          <FormattedMessage id=\"export.shareText\" />\n        </Button>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          onClick={copyText}\n          spaceTop\n          spaceBottom\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        <br />\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button icon=\"download\" href={textFileUrl} download={textFileName}>\n          <FormattedMessage id=\"export.downloadAsText\" />\n        </Button>\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.owbTitle\" />\n        </h2>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.dowloadInfo\" />\n          </i>\n        </p>\n        <Button\n          icon=\"download\"\n          href={fileUrl}\n          download={fileName}\n          spaceBottom\n          spaceTop\n        >\n          <FormattedMessage id=\"export.download\" />\n        </Button>\n        <br />\n        <Button icon=\"share\" onClick={share}>\n          <FormattedMessage id=\"export.shareOwb\" />\n        </Button>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareOwbError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport \"./Stats.css\";\n\nexport const Stats = ({ values, isPrintPage }) => {\n  return (\n    <div className=\"stats-wrapper\">\n      <table\n        className={classNames(\"stats\", isPrintPage && \"stats--print-page\")}\n      >\n        <thead>\n          <tr>\n            <th>\n              <FormattedMessage id=\"unit.model\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.m\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.ws\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.bs\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.s\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.t\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.w\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.i\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.a\" />\n            </th>\n            <th>\n              <FormattedMessage id=\"unit.ld\" />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {values.map((stats, index) => (\n            <tr key={`${stats.name}${index}`}>\n              <td>{stats.Name}</td>\n              <td>{stats.M}</td>\n              <td>{stats.WS}</td>\n              <td>{stats.BS}</td>\n              <td>{stats.S}</td>\n              <td>{stats.T}</td>\n              <td>{stats.W}</td>\n              <td>{stats.I}</td>\n              <td>{stats.A}</td>\n              <td>{stats.Ld}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  values: PropTypes.array,\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Stats } from \"../../components/stats\";\nimport { rulesMap, synonyms } from \"../../components/rules-index\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { nameMap } from \"../magic\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(true);\n  const [showStats, setShowStats] = useState(true);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return (\n      <Header\n        headline={intl.formatMessage({\n          id: \"print.title\",\n        })}\n      />\n    );\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const filters = [\n    {\n      name: intl.formatMessage({\n        id: \"export.specialRules\",\n      }),\n      id: \"specialRules\",\n      checked: showSpecialRules,\n      callback: () => {\n        setShowSpecialRules(!showSpecialRules);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showStats\",\n      }),\n      id: \"stats\",\n      checked: showStats,\n      callback: () => {\n        setShowStats(!showStats);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.visibleList\",\n      }),\n      description: intl.formatMessage({\n        id: \"export.visibleListDescription\",\n      }),\n      id: \"isShowList\",\n      checked: isShowList,\n      callback: () => {\n        setIsShowList(!isShowList);\n      },\n    },\n  ];\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n  const getSection = ({ type }) => {\n    const units = list[type];\n\n    return (\n      <ul>\n        {units.map((unit) => {\n          const normalizedName = normalizeRuleName(unit.name_en);\n          const synonym = synonyms[normalizedName];\n          const stats = rulesMap[synonym || normalizedName]?.stats;\n\n          return (\n            <li key={unit.id}>\n              <h3>\n                {unit.strength || unit.minimum ? (\n                  <span className=\"print__strength\">\n                    {`${unit.strength || unit.minimum} `}\n                  </span>\n                ) : null}\n                {unit[`name_${language}`] || unit.name_en}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h3>\n              {getAllOptions(unit, { noMagic: isShowList })}\n              {showSpecialRules && unit.specialRules ? (\n                <p className=\"print__special-rules\">\n                  <i>\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    {unit.specialRules[`name_${language}`] ||\n                      unit.specialRules.name_en}\n                  </i>\n                </p>\n              ) : null}\n              {showStats &&\n                (stats?.length > 0 ? (\n                  <Stats isPrintPage values={stats} />\n                ) : (\n                  <Stats\n                    isPrintPage\n                    values={[\n                      {\n                        name: \"\",\n                        M: \"\",\n                        WS: \"\",\n                        BS: \"\",\n                        S: \"\",\n                        T: \"\",\n                        W: \"\",\n                        I: \"\",\n                        A: \"\",\n                        LD: \"\",\n                      },\n                    ]}\n                  />\n                ))}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"print.title\",\n          })}\n          filters={filters}\n        />\n\n        <Button\n          onClick={handlePrintClick}\n          centered\n          icon=\"print\"\n          spaceTop\n          spaceBottom\n          size=\"large\"\n          disabled={isPrinting}\n        >\n          {isPrinting ? (\n            <FormattedMessage id=\"print.printing\" />\n          ) : (\n            <FormattedMessage id=\"misc.print\" />\n          )}\n        </Button>\n        <h2>\n          <FormattedMessage id=\"print.preview\" />\n        </h2>\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n          {armyCompositionName ? `, ${armyCompositionName}` : \"\"}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          list.characters.length > 0 && (\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              {getSection({ type: \"characters\" })}\n            </section>\n          )\n        ) : (\n          <>\n            {list.lords.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.lords\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"lords\" })}\n              </section>\n            )}\n\n            {list.heroes.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"heroes\" })}\n              </section>\n            )}\n          </>\n        )}\n\n        {list.core.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.core\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{corePoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"core\" })}\n          </section>\n        )}\n\n        {list.special.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.special\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{specialPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"special\" })}\n          </section>\n        )}\n\n        {list.rare.length > 0 && (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{rarePoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            {getSection({ type: \"rare\" })}\n          </section>\n        )}\n\n        {list.game === \"the-old-world\" && (\n          <>\n            {list.allies.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.allies\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"allies\" })}\n              </section>\n            )}\n\n            {list.mercenaries.length > 0 && (\n              <section>\n                <h2>\n                  <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n                {getSection({ type: \"mercenaries\" })}\n              </section>\n            )}\n          </>\n        )}\n        <div className=\"print-footer\">\n          <p>\n            <FormattedMessage id=\"export.createdWith\" />{\" \"}\n            <b>\"Old World Builder\"</b>\n          </p>\n          <p>\n            [\n            <a href=\"https://old-world-builder.com\">\n              <i>old-world-builder.com</i>\n            </a>\n            ]\n          </p>\n        </div>\n      </main>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list?.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <Button centered icon=\"duplicate\" submitButton size=\"large\">\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[`name_${language}`] || unit.name_en : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  name_es: \"\",\n  name_fr: \"\",\n  name_it: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  regimentalUnit: false,\n  detachment: false,\n  command: [],\n  equipment: [],\n  armor: [],\n  options: [],\n  mounts: [],\n  items: [],\n  lores: [],\n  specialRules: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n  notes: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"armor-mages\",\n  \"talisman\",\n  \"banner\",\n  \"arcane-item\",\n  \"enchanted-item\",\n  \"weapon-runes\",\n  \"armor-runes\",\n  \"banner-runes\",\n  \"talismanic-runes\",\n  \"engineering-runes\",\n  \"triptych\",\n  \"knightly-virtue\",\n  \"knightly-virtue-character\",\n  \"chaos-mutation\",\n  \"chaos-mutation-character\",\n  \"chaos-mutation-chieftain\",\n  \"gift-of-chaos\",\n  \"forest-spite\",\n  \"vampiric-power\",\n  \"daemonic-gift\",\n];\nconst loresOfMagic = [\n  \"daemonology\",\n  \"dark-magic\",\n  \"elementalism\",\n  \"battle-magic\",\n  \"high-magic\",\n  \"illusion\",\n  \"necromancy\",\n  \"waaagh-magic\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleSpecialRulesChange = ({ field, key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        [field]: value,\n      },\n    });\n  };\n  const handleSpecialRulesBlur = ({ key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        name_de: !unit[key].name_de ? value : unit[key].name_de,\n        name_es: !unit[key].name_es ? value : unit[key].name_es,\n        name_fr: !unit[key].name_fr ? value : unit[key].name_fr,\n        name_it: !unit[key].name_it ? value : unit[key].name_it,\n      },\n    });\n  };\n  const handleCheckboxChange = ({ field, value }) => {\n    setUnit({\n      ...unit,\n      [field]: value,\n    });\n  };\n  const handleLoresOfMagicChange = ({ lore }) => {\n    if (unit.lores.includes(lore)) {\n      setUnit({\n        ...unit,\n        lores: unit.lores.filter((loreName) => loreName !== lore),\n      });\n    } else {\n      setUnit({\n        ...unit,\n        lores: [...unit.lores, lore],\n      });\n    }\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n      name_es: !unit.name_es ? unit.name_en : unit.name_es,\n      name_fr: !unit.name_fr ? unit.name_en : unit.name_fr,\n      name_it: !unit.name_it ? unit.name_en : unit.name_it,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelDelete = ({ index, key }) => {\n    setUnit({\n      ...unit,\n      [key]: unit[key].filter((_, entryIndex) => entryIndex !== index),\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n          name_es: !entry.name_es ? value : entry.name_es,\n          name_fr: !entry.name_fr ? value : entry.name_fr,\n          name_it: !entry.name_it ? value : entry.name_it,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleItemsChange = ({ value, type, itemIndex }) => {\n    const newEntries = unit.items.map((entry, entryIndex) => {\n      if (itemIndex === entryIndex) {\n        return {\n          ...entry,\n          types:\n            value === \"on\"\n              ? [...unit.items[itemIndex].types, type]\n              : unit.items[itemIndex].types.filter((name) => name !== type),\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      items: newEntries,\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewArmor = () => {\n    setUnit({\n      ...unit,\n      armor: [\n        ...unit.armor,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewMagicItemCategory = () => {\n    setUnit({\n      ...unit,\n      items: [\n        ...unit.items,\n        {\n          name_en: \"Magic Items\",\n          name_de: \"Magische Gegenstände\",\n          name_es: \"Objetos mágicos\",\n          name_fr: \"Objets magiques\",\n          name_it: \"Oggetti magici\",\n          types: [],\n          selected: [],\n          maxPoints: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_es-${randomId}`}>Name Spanish</label>\n      <input\n        type=\"text\"\n        id={`name_es-${randomId}`}\n        className=\"input\"\n        value={unit.name_es}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_fr-${randomId}`}>Name French</label>\n      <input\n        type=\"text\"\n        id={`name_fr-${randomId}`}\n        className=\"input\"\n        value={unit.name_fr}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_it-${randomId}`}>Name Italian</label>\n      <input\n        type=\"text\"\n        id={`name_it-${randomId}`}\n        className=\"input\"\n        value={unit.name_it}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>\n        {type === \"characters\" ? \"Points\" : \"Points per model\"}\n      </label>\n      <NumberInput\n        id={`points-${randomId}`}\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`regimentalUnit-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"regimentalUnit\",\n                  value: !unit.regimentalUnit,\n                })\n              }\n              checked={unit.regimentalUnit}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`regimentalUnit-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit can have detachments\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`detachment-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"detachment\",\n                  value: !unit.detachment,\n                })\n              }\n              checked={unit.detachment}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`detachment-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit is a detachment\n            </label>\n          </div>\n        </>\n      )}\n      {type === \"characters\" && (\n        <Expandable headline=\"Allowed Lores of Magic\">\n          {loresOfMagic.map((lore, loreIndex) => (\n            <div className=\"checkbox\" key={lore}>\n              <input\n                type=\"checkbox\"\n                id={`${lore}-${loreIndex}-${randomId}`}\n                onChange={() =>\n                  handleLoresOfMagicChange({\n                    lore,\n                  })\n                }\n                checked={unit.lores.includes(lore)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${lore}-${loreIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {lore}\n              </label>\n            </div>\n          ))}\n        </Expandable>\n      )}\n      <Expandable headline=\"Special Rules\">\n        <label htmlFor={`specialRules-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`specialRules-en-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`specialRules-de-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`specialRules-es-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`specialRules-fr-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`specialRules-it-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n      <Expandable headline=\"Notes\">\n        <label htmlFor={`notes-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`notes-en-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`notes-de-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`notes-es-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`notes-fr-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`notes-it-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command?.magic?.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command?.magic?.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  min={0}\n                  value={command?.magic?.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"command\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Weapon</h3>\n      <p className=\"datasets__paragraph\">\n        All weapon options are mutually exclusive and please add a default\n        weapon.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`equipment-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"equipment\",\n                    field: \"perModel\",\n                    value: !equipment.perModel,\n                  })\n                }\n                checked={equipment.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`equipment-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              icon=\"delete\"\n              spaceTop\n              onClick={() =>\n                handleSecondLevelDelete({ index, key: \"equipment\" })\n              }\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New weapon\n      </Button>\n\n      <hr />\n\n      <h3>Armor</h3>\n      <p className=\"datasets__paragraph\">\n        All armor options are mutually exclusive and please add a default armor.\n        <br />\n        <i>(e.g. \"Light armour\" or \"Heavy armour\")</i>\n      </p>\n      {unit.armor.map((armor, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`armor-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"armor\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`armor-points${index}-${randomId}`}\n            value={armor.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`armor-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"armor\",\n                    field: \"perModel\",\n                    value: !armor.perModel,\n                  })\n                }\n                checked={armor.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`armor-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`armor-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"armor\",\n                  field: \"active\",\n                  value: !armor.active,\n                })\n              }\n              checked={armor.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`armor-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Light armour\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"armor\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewArmor}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New armor\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`options-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"perModel\",\n                    value: !option.perModel,\n                  })\n                }\n                checked={option.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`options-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"options\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      {type === \"characters\" ? (\n        <>\n          <hr />\n\n          <h3>Mounts</h3>\n          <p className=\"datasets__paragraph\">\n            All mount options are mutually exclusive and please add a default\n            mount.\n            <br />\n            <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n          </p>\n          {unit.mounts.map((mount, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"mounts\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`mounts-points${index}-${randomId}`}\n                value={mount.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mounts-active${index}-${randomId}`}\n                  onChange={() =>\n                    handleSecondLevelFieldChange({\n                      index,\n                      key: \"mounts\",\n                      field: \"active\",\n                      value: !mount.active,\n                    })\n                  }\n                  checked={mount.active}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mounts-active${index}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Selected by default\n                </label>\n              </div>\n              <p>\n                <i>(e.g. when \"On foot\" is the default mount)</i>\n              </p>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  spaceTop\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"mounts\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewMount}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New mount\n          </Button>\n        </>\n      ) : null}\n      <hr />\n\n      <h3>(Magic) items</h3>\n      <p className=\"datasets__paragraph\">\n        Specify what types of items are allowed. Can also be used for chaos\n        mutations, knightly vitues or similar.\n      </p>\n      {unit.items && unit.items.length\n        ? unit.items.map((item, itemIndex) => (\n            <div className=\"entity__second-level\" key={itemIndex}>\n              <label htmlFor={`magic-name_en-${itemIndex}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_en-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_de-${itemIndex}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_de-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_es-${itemIndex}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_es-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_fr-${itemIndex}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_fr-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_it-${itemIndex}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_it-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <Expandable headline=\"Allowed (magic) item types\">\n                {magicItemTypes.map((type, typeIndex) => (\n                  <div className=\"checkbox\" key={type}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleItemsChange({\n                          value: item.types.includes(type) ? \"off\" : \"on\",\n                          type,\n                          itemIndex,\n                        })\n                      }\n                      checked={item.types.includes(type)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {type}\n                    </label>\n                  </div>\n                ))}\n              </Expandable>\n              <label htmlFor={`magic-points-${randomId}`}>Max. points</label>\n              <NumberInput\n                id={`magic-points-${itemIndex}-${randomId}`}\n                min={0}\n                value={item.maxPoints}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"maxPoints\",\n                    value: Number(event.target.value),\n                  })\n                }\n              />\n            </div>\n          ))\n        : null}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMagicItemCategory}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New category\n      </Button>\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n    </form>\n  );\n};\n","import { Fragment } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./UnitPreview.css\";\n\nexport const UnitPreview = ({ unit, coreUnits, onClose }) => {\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const detachments = coreUnits.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n\n  return (\n    <>\n      <button onClick={onClose} className=\"unit-preview-background\" />\n      <div className=\"unit-preview\">\n        <>\n          <Header\n            isSection\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n          <Button\n            className=\"unit-preview__close\"\n            icon=\"close\"\n            type=\"text\"\n            label=\"Close preview\"\n            color=\"dark\"\n            onClick={onClose}\n          />\n\n          {!unit.minimum &&\n            (!unit.lores || (unit.lores && !unit.lores.length)) &&\n            (!unit.command || (unit.command && !unit.command.length)) &&\n            (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n            (!unit.armor || (unit.armor && !unit.armor.length)) &&\n            (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n            (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n            (!unit.items || (unit.items && !unit.items.length)) &&\n            (!unit.options || (unit.options && !unit.options.length)) && (\n              <i className=\"unit__empty\">\n                <FormattedMessage id=\"unit.noOptions\" />\n              </i>\n            )}\n          {unit.notes && unit.notes.name_en ? (\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              {unit.notes[`name_${language}`] || unit.notes.name_en}\n            </p>\n          ) : null}\n          {unit.minimum ? (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                <FormattedMessage id=\"unit.unitSize\" />\n              </label>\n              <NumberInput\n                id=\"strength\"\n                min={unit.minimum}\n                max={unit.maximum}\n                value={unit.strength}\n                onChange={() => {}}\n                noError\n              />\n            </>\n          ) : null}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n              {unit.command.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    active = false,\n                    magic,\n                    ...command\n                  },\n                  index\n                ) => {\n                  let commandMagicPoints = 0;\n\n                  if (unit.magic && unit.magic.items) {\n                    unit.magic.items\n                      .filter((item) => item.command === index)\n                      .forEach(({ points }) => {\n                        commandMagicPoints = commandMagicPoints + points;\n                      });\n                  }\n\n                  return (\n                    <Fragment key={index}>\n                      <div className=\"checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          id={`command-${index}`}\n                          defaultChecked={active}\n                          className=\"checkbox__input\"\n                        />\n                        <label\n                          htmlFor={`command-${index}`}\n                          className=\"checkbox__label\"\n                        >\n                          {command[`name_${language}`] || name_en}\n                          <i className=\"checkbox__points\">\n                            {`${points} ${\n                              points === 1\n                                ? intl.formatMessage({\n                                    id: \"app.point\",\n                                  })\n                                : intl.formatMessage({\n                                    id: \"app.points\",\n                                  })\n                            }`}\n                            {perModel &&\n                              ` ${intl.formatMessage({\n                                id: \"unit.perModel\",\n                              })}`}\n                          </i>\n                        </label>\n                      </div>\n                      {magic?.maxPoints && active ? (\n                        <ListItem\n                          className=\"editor__list unit__link\"\n                          active={false}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (type) =>\n                                    nameMap[type][`name_${language}`] ||\n                                    nameMap[type].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {getUnitCommandPoints(\n                                  unit?.magic?.selected.filter(\n                                    ({ command }) => command === index\n                                  )\n                                )}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {unit?.magic?.items && (\n                            <p>\n                              {unit.magic.items\n                                .filter(({ command }) => command === index)\n                                .map(\n                                  ({ name_en, ...item }) =>\n                                    item[`name_${language}`] || name_en\n                                )\n                                .join(\", \")}\n                            </p>\n                          )}\n                        </ListItem>\n                      ) : null}\n                    </Fragment>\n                  );\n                }\n              )}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.equipment\" />\n              </h2>\n              {unit.equipment.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${index}`}\n                      name=\"equipment\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label\n                      htmlFor={`equipment-${index}`}\n                      className=\"radio__label\"\n                    >\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.armor && unit.armor.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.armor\" />\n              </h2>\n              {unit.armor.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`armor-${index}`}\n                      name=\"armor\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`armor-${index}`} className=\"radio__label\">\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.options\" />\n              </h2>\n              {unit.options.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    stackable,\n                    maximum,\n                    minimum = 0,\n                    stackableCount = minimum || 0,\n                    active = false,\n                    ...equipment\n                  },\n                  index\n                ) =>\n                  !stackable ? (\n                    <div className=\"checkbox\" key={index}>\n                      <input\n                        type=\"checkbox\"\n                        id={`options-${index}`}\n                        defaultChecked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"checkbox__label\"\n                      >\n                        {equipment[`name_${language}`] || name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                  ) : (\n                    <Fragment key={index}>\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"unit__special-option\"\n                      >\n                        {equipment[`name_${language}`] || name_en}:\n                        <i className=\"checkbox__points\">\n                          {`${points} ${intl.formatMessage({\n                            id: \"app.points\",\n                          })} ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                        </i>\n                      </label>\n                      <NumberInput\n                        id={`options-${index}`}\n                        min={minimum}\n                        max={maximum}\n                        value={stackableCount}\n                        onChange={() => {}}\n                      />\n                    </Fragment>\n                  )\n              )}\n            </>\n          )}\n          {unit.regimentalUnit && (\n            <>\n              <h2 className=\"unit__subline unit__detachments-headline\">\n                <FormattedMessage id=\"unit.detachments\" />\n              </h2>\n              {detachments.map(({ name_en, id, ...regiment }) => (\n                <>\n                  <div className=\"list\" key={id}>\n                    <div className=\"list__inner unit__detachments-header\">\n                      <b className=\"unit__magic-headline\">\n                        {regiment[`name_${language}`] || name_en}\n                      </b>\n                      <Button\n                        type=\"secondary\"\n                        icon=\"add\"\n                        label={intl.formatMessage({ id: \"editor.add\" })}\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                  {unit.detachments &&\n                    unit.detachments\n                      .filter(\n                        (detachment) =>\n                          detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                      )\n                      .map(\n                        ({ name_en, strength, id, points, ...detachment }) => (\n                          <div className=\"list\" key={id}>\n                            <div className=\"list__inner unit__detachments\">\n                              <NumberInput\n                                id={`strength-${id}`}\n                                min={5}\n                                value={strength}\n                                onChange={() => {}}\n                              />\n                              <span>\n                                <b>\n                                  {detachment[`name_${language}`] || name_en}\n                                </b>\n                                <i>{`${getUnitPoints({\n                                  strength,\n                                  points,\n                                })} ${intl.formatMessage({\n                                  id: \"app.points\",\n                                })}`}</i>\n                              </span>\n                              <Button\n                                type=\"secondary\"\n                                icon=\"close\"\n                                label={intl.formatMessage({\n                                  id: \"misc.remove\",\n                                })}\n                                size=\"small\"\n                              />\n                            </div>\n                          </div>\n                        )\n                      )}\n                </>\n              ))}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.mount\" />\n              </h2>\n              {unit.mounts.map(\n                ({ name_en, points, active = false, ...mounts }, index) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`mounts-${index}`}\n                      name=\"mounts\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`mounts-${index}`} className=\"radio__label\">\n                      {mounts[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                        {\n                          id: \"app.points\",\n                        }\n                      )}`}</i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.lores && unit.lores.length ? (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.lore\" />\n              </h2>\n              {unit.lores.map((lore) => (\n                <div className=\"radio\" key={lore}>\n                  <input\n                    type=\"radio\"\n                    id={`lore-${lore}`}\n                    name=\"lores\"\n                    value={lore}\n                    onChange={() => {}}\n                    checked={(unit.activeLore || unit.lores[0]) === lore}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                    {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  </label>\n                </div>\n              ))}\n            </>\n          ) : null}\n          {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n          {unit.items && unit.items.length\n            ? unit.items.map((item, itemIndex) => (\n                <ListItem\n                  className=\"editor__list unit__link\"\n                  active={false}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span>{magicPoints}</span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                  </div>\n                  {item.items && (\n                    <p>\n                      {item.items\n                        .map(\n                          ({ name_en, ...entity }) =>\n                            entity[`name_${language}`] || name_en\n                        )\n                        .join(\", \")}\n                    </p>\n                  )}\n                </ListItem>\n              ))\n            : null}\n          {unit.specialRules && unit.specialRules.name_en ? (\n            <>\n              <h2 className=\"unit__subline unit__subline--space-before\">\n                <FormattedMessage id=\"unit.specialRules\" />\n              </h2>\n              <p>\n                {unit.specialRules[`name_${language}`] ||\n                  unit.specialRules.name_en}\n              </p>\n            </>\n          ) : null}\n        </>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport { UnitPreview } from \"./UnitPreview\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUnit, setPreviewUnit] = useState(null);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"empire-of-man\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handlePreview = ({ unit }) => {\n    setPreviewUnit(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/datasets\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main className=\"datasets\">\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually).\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"empire-of-man\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <>\n                {dataset.characters.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Characters</h3>\n                )}\n                <ul>\n                  {dataset.characters.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({\n                                  type: \"characters\",\n                                  id: unit.id,\n                                })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"characters\"\n                        onSubmit={handleSubmit}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.core.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Core Units</h3>\n                )}\n                <ul>\n                  {dataset.core.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"core\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"core\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.special.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Special Units</h3>\n                )}\n                <ul>\n                  {dataset.special.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"special\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"special\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.rare.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n                )}\n                <ul>\n                  {dataset.rare.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"rare\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"rare\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n              </>\n            )}\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy JSON\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p className=\"datasets__paragraph\">\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n            <textarea\n              className=\"datasets__output\"\n              rows=\"10\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n          </section>\n        </div>\n\n        {previewUnit ? (\n          <UnitPreview\n            unit={{ ...previewUnit, strength: 0 }}\n            onClose={() => setPreviewUnit(null)}\n            coreUnits={dataset.core}\n          />\n        ) : null}\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n// import { loadScript } from \"../../utils/script\";\n\n// window[\"stg\"] = window[\"stg\"] || {};\n// window[\"stg\"].optedOutCheckboxText = \"You're opted out. Uncheck to opt in.\";\n// window[\"stg\"].optedInCheckboxText = \"Opt out of data collection and usage\";\n// window[\"stg\"].isGlobal = false;\n// window[\"stg\"].instanceHostname = \"https://owb.containers.piwik.pro\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n  // const handleOptOut = () => {\n  //   window.parent.storeUserOptOutPreferences();\n  // };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // loadScript(\"https://owb.containers.piwik.pro/privacy/script.v2.js\");\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/privacy\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>{\" \"}\n            (Android App)\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>{\" \"}\n            (error tracking)\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        {/* <h3>Piwik PRO Analytics</h3>\n        <p>\n          We use Piwik PRO Analytics Suite as our website/app analytics\n          software. The collected information may include an anonymized\n          visitor's IP address, operating system, browser ID, browsing activity\n          and other information. See the{\" \"}\n          <a\n            href=\"https://help.piwik.pro/support/getting-started/what-data-does-piwik-pro-collect/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            scope of data collected by Piwik PRO\n          </a>\n          .\n        </p>\n        <p>\n          We calculate metrics like bounce rate, page views, sessions and the\n          like to understand how our website/app is used.\n        </p>\n        <p>\n          We host our solution on Microsoft Azure in Germany/Netherlands/United\n          States/Hong Kong/ElastX in Sweden, and the data is stored for 14/25\n          months.\n        </p>\n        <p>\n          The purpose of data processing: analytics. Legal basis: Art. 6 (1)(a)\n          GDPR.\n        </p>\n        <p>\n          Piwik PRO does not send the data about you to any other sub-processors\n          or third parties and does not use it for its own purposes. For more,\n          read{\" \"}\n          <a\n            href=\"https://piwik.pro/privacy-policy/?pk_vid=b9514cbe42ac928e17075637164eac6f#product\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Piwik PRO's privacy policy\n          </a>\n          .\n        </p> */}\n\n        {/* <div id=\"_stg_opt_out_iframe_content\" style={{ display: \"none\" }}>\n          <p>\n            Privacy on this site: We collect and process your data on this site\n            to better understand how it is used. You can opt-in or opt-out at\n            any time.\n          </p>\n          <div className=\"checkbox\">\n            <input\n              id=\"_stg_optout_checkbox\"\n              onChange={handleOptOut}\n              type=\"checkbox\"\n              className=\"checkbox__input\"\n            />\n            <label\n              className=\"checkbox__label\"\n              id=\"_stg_optout_checkbox_label\"\n              htmlFor=\"_stg_optout_checkbox\"\n            ></label>\n          </div>\n        </div> */}\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/changelog\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation hasHomeButton />\n\n      <Main compact className=\"changelog\">\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n\n        <hr />\n\n        <h3>v1.0</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change28\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change29\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change30\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change31\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change32\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change33\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change34\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change35\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.14</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-04 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change26\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change27\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.13</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-02 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change24\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change25\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.12</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-31 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change22\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                rulesIndex: (\n                  <a\n                    href=\"https://www.whfb.app/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <b>Online Rules Index</b>\n                  </a>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change23\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.11</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-28 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change21\" />\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"changelog.change17\" />\n          </b>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change18\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change19\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change20\" />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.10</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-22 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change12\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change13\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change14\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change15\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change16\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.8</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change11\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.7</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-17 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change9\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change10\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                about: (\n                  <Link to=\"/about\">\n                    <FormattedMessage id=\"footer.about\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.6</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-14 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change8\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.5</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-13 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change4\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change5\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change6\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n        <p>\n          <i>\n            <FormattedMessage\n              id=\"changelog.change7\"\n              values={{\n                discord: (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://discord.gg/87nUyjUxTU\"\n                  >\n                    Discord\n                  </a>\n                ),\n              }}\n            />\n          </i>\n        </p>\n\n        <hr />\n\n        <h3>v0.4</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, createRef, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Import.css\";\n\nexport const Import = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(false);\n  const [typeError, setTypeError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const fileInput = createRef();\n  const handleListChange = () => {\n    const files = fileInput.current.files;\n\n    if (files.length > 0) {\n      if (\"application/json\" === files[0].type) {\n        setTypeError(false);\n        setList(files[0]);\n      } else {\n        setTypeError(true);\n      }\n    }\n  };\n  const handleSubmit = (event) => {\n    const reader = new FileReader();\n\n    setError(false);\n    reader.readAsText(list, \"UTF-8\");\n    reader.onload = (event) => {\n      const newId = getRandomId();\n      const importedList = { ...JSON.parse(event.target.result), id: newId };\n      const newLists = [...lists, importedList];\n\n      localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n      dispatch(setLists(newLists));\n      setRedirect(importedList.id);\n    };\n    reader.onerror = () => {\n      setError(true);\n    };\n\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"import.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"import.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"import\">\n          <label htmlFor=\"list\">\n            <FormattedMessage id=\"import.description\" />\n          </label>\n          <input\n            type=\"file\"\n            accept=\".json, application/json\"\n            id=\"list\"\n            className=\"input\"\n            onChange={handleListChange}\n            autoComplete=\"off\"\n            required\n            ref={fileInput}\n          />\n          {typeError && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"import.typeError\" />\n            </p>\n          )}\n          {error && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"export.error\" />\n            </p>\n          )}\n          <Button centered icon=\"add-list\" submitButton spaceTop size=\"large\">\n            <FormattedMessage id=\"import.button\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Stats } from \"../../components/stats\";\nimport {\n  rulesMap,\n  RulesIndex,\n  RulesLinksText,\n  RulesWithIcon,\n  synonyms,\n} from \"../../components/rules-index\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./GameView.css\";\n\nexport const GameView = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [showPoints, setShowPoints] = useState(true);\n  const [showSpecialRules, setShowSpecialRules] = useState(true);\n  const [showStats, setShowStats] = useState(true);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const filters = [\n    {\n      name: intl.formatMessage({\n        id: \"export.specialRules\",\n      }),\n      id: \"specialRules\",\n      checked: showSpecialRules,\n      callback: () => {\n        setShowSpecialRules(!showSpecialRules);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showStats\",\n      }),\n      id: \"stats\",\n      checked: showStats,\n      callback: () => {\n        setShowStats(!showStats);\n      },\n    },\n    {\n      name: intl.formatMessage({\n        id: \"export.showPoints\",\n      }),\n      id: \"points\",\n      checked: showPoints,\n      callback: () => {\n        setShowPoints(!showPoints);\n      },\n    },\n  ];\n  const getSection = ({ type }) => {\n    const units = list[type];\n\n    return (\n      <ul>\n        {units.map((unit, index) => {\n          const normalizedName = normalizeRuleName(unit.name_en);\n          const synonym = synonyms[normalizedName];\n          const stats = rulesMap[synonym || normalizedName]?.stats;\n\n          return (\n            <li key={index} className=\"list\">\n              <div className=\"list__inner game-view__list-inner\">\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"game-view__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {showPoints && (\n                    <span className=\"game-view__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                <div className=\"game-view__details\">\n                  <RulesWithIcon\n                    textObject={{\n                      name_en: getAllOptions(unit, {\n                        language: \"en\",\n                        asString: true,\n                      }),\n                      name_de: getAllOptions(unit, { asString: true }),\n                    }}\n                  />\n                  {showSpecialRules && unit.specialRules ? (\n                    <p className=\"game-view__special-rules\">\n                      <b>\n                        <i>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </i>\n                      </b>{\" \"}\n                      <RulesLinksText textObject={unit.specialRules} />\n                    </p>\n                  ) : null}\n                  {showStats &&\n                    (stats?.length > 0 ? (\n                      <Stats values={stats} />\n                    ) : (\n                      <Stats\n                        values={[\n                          {\n                            name: \"\",\n                            M: \"\",\n                            WS: \"\",\n                            BS: \"\",\n                            S: \"\",\n                            T: \"\",\n                            W: \"\",\n                            I: \"\",\n                            A: \"\",\n                            LD: \"\",\n                          },\n                        ]}\n                      />\n                    ))}\n                </div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      <RulesIndex />\n\n      <Header\n        to={`/editor/${listId}`}\n        headline={intl.formatMessage({\n          id: \"misc.gameView\",\n        })}\n        subheadline={`${armyName} [${allPoints} ${intl.formatMessage({\n          id: \"app.points\",\n        })}]`}\n        filters={filters}\n      />\n\n      <Main className=\"game-view\">\n        {list.game === \"the-old-world\" ? (\n          list.characters.length > 0 && (\n            <section className=\"game-view__section\">\n              <header className=\"editor__header\">\n                <h2>\n                  <FormattedMessage id=\"editor.characters\" />{\" \"}\n                  {showPoints && (\n                    <span className=\"game-view__points\">\n                      [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h2>\n              </header>\n              {getSection({ type: \"characters\" })}\n            </section>\n          )\n        ) : (\n          <>\n            {list.lords.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.lords\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"lords\" })}\n              </section>\n            )}\n\n            {list.heroes.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"heroes\" })}\n              </section>\n            )}\n          </>\n        )}\n\n        {list.core.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.core\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{corePoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"core\" })}\n          </section>\n        )}\n\n        {list.special.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.special\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{specialPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"special\" })}\n          </section>\n        )}\n\n        {list.rare.length > 0 && (\n          <section className=\"game-view__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.rare\" />{\" \"}\n                {showPoints && (\n                  <span className=\"game-view__points\">\n                    [{rarePoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n            </header>\n            {getSection({ type: \"rare\" })}\n          </section>\n        )}\n\n        {list.game === \"the-old-world\" && (\n          <>\n            {list.allies.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.allies\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"allies\" })}\n              </section>\n            )}\n\n            {list.mercenaries.length > 0 && (\n              <section className=\"game-view__section\">\n                <header className=\"editor__header\">\n                  <h2>\n                    <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                    {showPoints && (\n                      <span className=\"game-view__points\">\n                        [{mercenariesPoints}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h2>\n                </header>\n                {getSection({ type: \"mercenaries\" })}\n              </section>\n            )}\n          </>\n        )}\n      </Main>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { Import } from \"./pages/import\";\nimport { GameView } from \"./pages/game-view\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1279px)\");\n\n    if (mediaQuery?.addEventListener) {\n      mediaQuery.addEventListener(\"change\", (event) =>\n        setIsMobile(event.matches)\n      );\n    } else {\n      mediaQuery.addListener((event) => setIsMobile(event.matches));\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/import\">{<Import isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/game-view/:listId\">{<GameView />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/game-view/:listId\">{<GameView />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/import\">{<Import />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\nimport rulesIndexReducer from \"./state/rules-index\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n    rulesIndex: rulesIndexReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as Sentry from \"@sentry/react\";\n// import PiwikPro from \"@piwikpro/react-piwik-pro\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\nimport Spanish from \"./i18n/es.json\";\nimport French from \"./i18n/fr.json\";\nimport Italian from \"./i18n/it.json\";\n\n// Sentry error tracking\nif (process.env.NODE_ENV !== \"development\") {\n  Sentry.init({\n    dsn: \"https://3947feb62e2f5348c1759e8d4d9ed084@o314295.ingest.sentry.io/4506569636642816\",\n    integrations: [],\n    environment: process.env.NODE_ENV,\n    release: `owb@${process.env.REACT_APP_VERSION}`,\n  });\n}\n\n// Analytics\n// PiwikPro.initialize(\n//   \"b926228f-3567-4df1-b4e5-5ea40019bffb\",\n//   \"https://owb.piwik.pro\"\n// );\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Costruttore di eserciti per Warhammer: The Old World e Warhammer Fantasy Battles.\",\n  fr: \"Un créateur de liste d'armée pour les jeux Games Workshop 'Warhammer: The Old World' et 'Warhammer Fantaisie'.\",\n  es: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n  it: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\", \"fr\", \"es\", \"it\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else if (language === \"es\") {\n  messages = Spanish;\n} else if (language === \"fr\") {\n  messages = French;\n} else if (language === \"it\") {\n  messages = Italian;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","href","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","download","value","Component","Link","buttonProps","aria-label","title","defaultProps","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","armor","armorData","mounts","mountsData","options","optionsData","useLanguage","language","localStorage","getItem","Header","headline","headlineIcon","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","hasHomeButton","filters","intl","useIntl","useLocation","useState","showMenu","setShowMenu","handleMenuClick","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","description","checked","onChange","htmlFor","Spinner","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","reload","defaultChecked","width","height","alt","src","usa","germany","france","spain","italy","Select","required","selected","defaultValue","optionValue","option","name_en","ErrorMessage","NumberInput","max","min","readOnly","noError","interval","pattern","newValue","Number","maxValue","preventDefault","values","swap","list","index1","index2","result","splice","removed","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","Object","keys","forEach","key","undefined","deleteList","filter","addUnit","newUnit","strength","minimum","moveUnit","sourceIndex","destinationIndex","duplicateUnit","unitId","find","split","editUnit","magic","items","detachments","activeLore","name_de","data","removeUnit","actions","duplicateList","getUnitPoints","detachmentActive","length","active","unitPoints","stackable","stackableCount","perModel","amount","commandOption","item","getUnitMagicPoints","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","Dialog","open","onClose","dialogRef","useRef","handleClose","current","close","showModal","ref","normalizeRuleName","string","toLowerCase","rulesIndexSlice","activeRule","openRulesIndex","closeRulesIndex","synonyms","boss","marksman","preceptor","seneschal","kastellan","sharpshooter","hellwraith","crusher","vargoyle","bladesinger","plagueridden","heartseeker","alluress","sergeant","bloodreaper","nymph","guardian","harbinger","groinbiter","snarefinger","bloodkine","gorehoof","shartak","thunderfist","nightleader","assassin","greyback","champion","gutlord","desperado","esquire","elder","sentinel","yeoman","gallant","pyroclaster","villein","paragon","warden","ironbeard","prospector","ironwarden","overseer","deathmask","fangleader","clawleader","rulesMap","rulesIndexExport","halberds","flails","whips","spears","blowpipes","handguns","lances","shortbows","javelins","longbows","pistols","warbows","hellblades","drakeguns","clatterguns","crossbows","slings","blunderbusses","shield","shields","ironfists","general","ancient","champions","musician","bellower","RulesIndex","useSelector","rulesIndex","isLoading","setIsLoading","dispatch","useDispatch","normalizedName","synonym","ruleData","rulePath","onLoad","RulesLinksText","textObject","textEn","ruleButtons","rule","RulesWithIcon","RuleWithIcon","isDark","itemsSlice","setItems","updateLocalList","updatedList","localLists","JSON","parse","updatedLists","stringify","isMultipleAllowedItem","maximum","nameMap","greenskins","heirlooms","dwarfs","weapon","talisman","banner","artifact","triptych","triptychs","daemonology","elementalism","illusion","necromancy","skaven","lizardmen","Magic","prevItemType","isFirstItemType","isMobile","MainComponent","Fragment","useParams","group","lists","units","armyId","army","gameSystems","game","armies","maxMagicPoints","scrollTo","allItems","conditional","conditionalItem","conditionalIndex","getCheckbox","isChecked","selectedAmount","magicItem","itemGroup","isConditional","isTypeLimitReached","isCommand","types","unitPointsRemaining","pointsRemainingMax","floor","maxAllowedOfItem","magicItems","inputType","newCommand","entry","entryIndex","newItems","handleMagicChange","handleRulesClick","parentId","handleAmountChange","unitMagicPoints","hasCommandMagicItems","hasMagicItems","maxPoints","commandMagicItems","includes","itemGroupItems","armyComposition","unitSelectedItems","selectedItem","runesAmountInCategory","itemType","isRune","nonExclusive","some","NewList","setGame","setArmy","setName","setDescription","setPoints","setArmyComposition","redirect","setRedirect","journalArmies","listsPoints","reverse","quickActions","Set","slice","handleSystemChange","handleQuickActionClick","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","mercenaries","allies","newLists","createList","warhammerFantasy","warhammerTheOldWorld","journalArmy","name_es","name_fr","autoComplete","maxLength","rules","maxPercent","minPercent","perPoints","ids","getMaxPercentData","armyPoints","categoryData","overLimit","diff","ceil","ListItem","forwardRef","attributes","OrderableList","onMoved","onDragEnd","destination","source","droppableId","provided","_snapshot","droppableProps","innerRef","React","Children","child","isValidElement","draggableId","snapshot","style","draggableProps","transform","cloneElement","isDragging","isDropAnimating","dragging","dragHandleProps","placeholder","getAllOptions","lores","asString","noMagic","overrideLanguage","allCommand","commandEntry","selectedOptions","push","join","allEquipment","equippedDefault","allArmor","allOptions","allStackableOptions","allMounts","allDetachments","equipmentSelection","lore","allOptionsArray","allOptionsString","Editor","isDialogOpen","setIsDialogOpen","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeFromLocalList","OrderableUnitList","indexes","armySlice","armyIconMap","theEmpire","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","vampireCounts","chaosDeamons","ogres","chaosDwarfs","Home","resetState","rel","forg3dBanner","Unit","handleCommandChange","optionIndex","getPointsText","handleDuplicate","handleRemove","notes","minDetachmentSize","commandMagicPoints","exclusiveCheckedOption","exclusiveOption","exclusive","handleEquipmentChange","handleArmorChange","handleStackableOptionChange","handleOptionsChange","mount","handleMountsChange","handleLoresChange","itemIndex","itemsPoints","specialRules","EditList","About","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","PayPal","Donation","env","hosted_button_id","image","render","owb","datasets","discord","github","gameIcons","license","getArmyData","specialToCore","category","rareToCore","rareToSpecial","coreToSpecial","specialToRare","allCore","allSpecial","allRare","allAllies","allMercenaries","Add","alliesLoaded","setAlliesLoaded","mercenariesLoaded","setMercenariesLoaded","armyData","getUnit","ally","handleAdd","mercenary","mercenaryUnits","mercenaryUnit","Help","Expandable","notBold","noMargin","getUnitsString","isShowList","isCompactList","showSpecialRules","showStats","optionsString","stats","unitStats","Name","M","WS","BS","S","T","W","I","A","Ld","getFile","listText","asText","fileName","file","File","fileUrl","URL","createObjectURL","Export","copied","setCopied","copyError","setCopyError","shareError","setShareError","shareOwbError","setOwbShareError","setIsShowList","setShowStats","setIsCompactList","setShowSpecialRules","armyName","armyCompositionName","armyCompositionString","listString","getListAsText","textFileName","textFileUrl","share","a","shareData","text","files","canShare","clipboard","writeText","Stats","isPrintPage","Print","isPrinting","setIsPrinting","getSection","LD","onafterprint","print","DuplicateList","Rename","initialUnitState","name_it","regimentalUnit","detachment","magicItemTypes","loresOfMagic","Entity","existingUnit","randomId","setUnit","handleFieldChange","handleSpecialRulesChange","field","handleSpecialRulesBlur","handleCheckboxChange","handleSecondLevelFieldChange","newEntries","handleSecondLevelDelete","_","handleSecondLevelNameBlur","isNew","onBlur","loreIndex","loreName","handleLoresOfMagicChange","newCommandEntries","commandIndex","handleCommandMagicChange","handleCommandMagicPointsChange","typeIndex","handleItemsChange","UnitPreview","coreUnits","coreUnit","regiment","Datasets","previewUnit","setPreviewUnit","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","handlePreview","existingDataset","onDelete","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","b","msg","about","privacy","Import","setList","setError","typeError","setTypeError","fileInput","createRef","reader","FileReader","readAsText","importedList","accept","GameView","showPoints","setShowPoints","App","matchMedia","matches","setIsMobile","mediaQuery","addListener","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","rulesIndexReducer","Sentry","dsn","integrations","environment","release","messages","locale","userLanguage","indexOf","documentElement","setAttribute","querySelector","de","en","fr","es","it","German","Spanish","French","Italian","English","ReactDOM","store","StrictMode","getElementById","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","debug_id":"54d3daf6-0531-51d5-bdc7-dc53305de5c4"}
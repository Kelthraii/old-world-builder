{"version":3,"file":"static/js/main.6c22a176.chunk.js","sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","components/page/Page.js","components/select/Select.js","components/error-message/ErrorMessage.js","components/number-input/NumberInput.js","utils/fetcher.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","pages/new-list/NewList.js","utils/rules.js","components/list/List.js","utils/points.js","state/items.js","utils/list.js","pages/magic/name-map.js","pages/magic/Magic.js","utils/unit.js","pages/editor/Editor.js","utils/throttle.js","state/army.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","pages/home/Home.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","utils/script.js","pages/add/Add.js","pages/help/Help.js","components/expandable/Expandable.js","pages/export/get-list-as-text.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","pages/datasets/Entity.js","pages/datasets/UnitPreview.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","pages/import/Import.js","App.js","state/errors.js","store.js","index.js"],"sourceRoot":"","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.5a7056f3.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  href,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n  download,\n}) => {\n  const Component = to || href ? (to ? Link : \"a\") : \"button\";\n  const buttonProps = {};\n\n  if (!to && !href) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      href={href}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      download={download}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n  download: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"large\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      armor: unit.armor\n        ? unit.armor.map((armorData, index) => ({\n            ...armorData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{navigation && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n};\n","import React from \"react\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return <Icon symbol=\"spinner\" className=\"spinner\" />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ name_de, name_en, id: optionValue }) => (\n        <option key={optionValue} value={optionValue}>\n          {language === \"de\" ? name_de : name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./ErrorMessage.css\";\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <p className=\"error-message\">\n      <Icon symbol=\"error\" color=\"red\" className=\"error-message__icon\" />\n      {children || <FormattedMessage id=\"misc.minError\" />}\n    </p>\n  );\n};\n\nErrorMessage.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { ErrorMessage } from \"../error-message\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = ({\n  onChange,\n  value,\n  id,\n  max,\n  min,\n  readOnly,\n  required,\n  noError,\n}) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) + 1,\n        id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) - 1,\n        id,\n      },\n    });\n  };\n  const handleOnChange = (event) => {\n    let newValue = Number(event.target.value);\n    const maxValue = max > 0 ? max : 100000;\n\n    if (newValue > maxValue) {\n      newValue = maxValue;\n    }\n\n    onChange({\n      target: {\n        value: newValue,\n        id,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          min={0}\n          max={max > 0 ? max : 100000}\n          value={value}\n          onChange={handleOnChange}\n          id={id}\n          readOnly={readOnly}\n          required={required}\n          className=\"input\"\n        />\n        <Button\n          onClick={handleOnUpClick}\n          type=\"secondary\"\n          icon=\"up\"\n          label={intl.formatMessage({ id: \"misc.increase\" })}\n          disabled={value >= max && max !== 0}\n          className=\"number-input__button number-input__button--up\"\n        />\n        <Button\n          onClick={handleOnDownClick}\n          type=\"secondary\"\n          icon=\"down\"\n          label={intl.formatMessage({ id: \"misc.decrease\" })}\n          disabled={value <= min}\n          className=\"number-input__button number-input__button--down\"\n        />\n      </div>\n      {value < min && !noError && (\n        <ErrorMessage>\n          <FormattedMessage\n            id=\"misc.minError\"\n            values={{\n              min,\n            }}\n          />\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number,\n  id: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  noError: PropTypes.bool,\n};\n\nNumberInput.defaultProps = {\n  min: 0,\n  max: 100000,\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        name,\n        detachments,\n        activeLore,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        detachments,\n        activeLore,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [redirect, setRedirect] = useState(null);\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <>\n                    <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                    <p className=\"new-list__beta\">Beta</p>\n                  </>\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={gameSystems.filter(({ id }) => id === game)[0].armies}\n            onChange={handleArmyChange}\n            selected=\"empire-of-man\"\n            spaceBottom\n            required\n          />\n          <Button centered icon=\"add-list\" submitButton spaceBottom>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  lords: { maxPercent: 25 },\n  heroes: { maxPercent: 25 },\n  characters: { maxPercent: 50 },\n  core: { minPercent: 25 },\n  special: {\n    maxPercent: 50,\n    maxSame: 3,\n    maxSameLarge: 6,\n  },\n  rare: {\n    maxPercent: 25,\n    maxSame: 2,\n    maxSameLarge: 4,\n  },\n  mercenaries: { maxPercent: 20 },\n  allies: { maxPercent: 25 },\n};\n\nexport const getMaxPercentData = ({ type, armyPoints, points }) => {\n  const maxPercent = rules[type].maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({ type, armyPoints, points }) => {\n  const minPercent = rules[type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.armor) {\n    unit.armor.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n      if (option.magic && option.magic?.selected?.length) {\n        option.magic.selected.forEach((selected) => {\n          unitPoints += selected.amount\n            ? selected.amount * selected.points\n            : selected.points;\n        });\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.items && unit?.items.length) {\n    unit.items.forEach((item) => {\n      (item.selected || []).forEach((selected) => {\n        unitPoints += selected.amount\n          ? selected.amount * selected.points\n          : selected.points;\n      });\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach((detachment) => {\n      unitPoints += detachment.strength * detachment.points;\n    });\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ selected }) => {\n  let unitPoints = 0;\n\n  selected &&\n    selected.forEach((option) => {\n      unitPoints += option.amount\n        ? option.amount * option.points\n        : option.points;\n    });\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const updateLocalList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeFromLocalList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Gewöhnliche Magische Gegenstände\",\n    name_en: \"Common Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  \"armor-mages\": {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    // deprecated\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"arcane-item\": {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n  \"chaos-mutations\": {\n    name_de: \"Chaos Mutations\",\n    name_en: \"Chaos Mutations\",\n  },\n  \"chaos-mutation\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-character\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-chieftain\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"gifts-of-chaos\": {\n    name_de: \"Gifts of Chaos\",\n    name_en: \"Gifts of Chaos\",\n  },\n  \"gift-of-chaos\": {\n    name_de: \"Gift of Chaos\",\n    name_en: \"Gift of Chaos\",\n  },\n  \"forest-spites\": {\n    name_de: \"Forest Spites\",\n    name_en: \"Forest Spites\",\n  },\n  \"forest-spite\": {\n    name_de: \"Forest Spite\",\n    name_en: \"Forest Spite\",\n  },\n  \"beastmen-brayherds\": {\n    name_de: \"Beastmen Brayherds\",\n    name_en: \"Beastmen Brayherds\",\n  },\n  \"orc-and-goblin-tribes\": {\n    name_de: \"Orc & Goblin Tribes\",\n    name_en: \"Orc & Goblin Tribes\",\n  },\n  \"dwarfen-mountain-holds\": {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  \"empire-of-man\": {\n    name_de: \"Empire of Man\",\n    name_en: \"Empire of Man\",\n  },\n  \"wood-elf-realms\": {\n    name_de: \"Wood Elf Realms\",\n    name_en: \"Wood Elf Realms\",\n  },\n  \"high-elf-realms\": {\n    name_de: \"High Elf Realms\",\n    name_en: \"High Elf Realms\",\n  },\n  \"tomb-kings-of-khemri\": {\n    name_de: \"Tomb Kings of Khemri\",\n    name_en: \"Tomb Kings of Khemri\",\n  },\n  \"warriors-of-chaos\": {\n    name_de: \"Warriors of Chaos\",\n    name_en: \"Warriors of Chaos\",\n  },\n  \"knightly-virtues\": {\n    name_de: \"Knightly Virtues\",\n    name_en: \"Knightly Virtues\",\n  },\n  \"knightly-virtue\": {\n    name_de: \"Knightly Virtue\",\n    name_en: \"Knightly Virtue\",\n  },\n  \"knightly-virtue-character\": {\n    name_de: \"Knightly Virtue (Characters only)\",\n    name_en: \"Knightly Virtue (Characters only)\",\n  },\n  \"elven-honours\": {\n    name_de: \"Elven Honours\",\n    name_en: \"Elven Honours\",\n  },\n  \"elven-honour\": {\n    name_de: \"Elven Honour\",\n    name_en: \"Elven Honour\",\n  },\n  daemonology: {\n    name_de: \"Daemonology\",\n    name_en: \"Daemonology\",\n  },\n  \"dark-magic\": {\n    name_de: \"Dark Magic\",\n    name_en: \"Dark Magic\",\n  },\n  elementalism: {\n    name_de: \"Elementalism\",\n    name_en: \"Elementalism\",\n  },\n  \"battle-magic\": {\n    name_de: \"Battle Magic\",\n    name_en: \"Battle Magic\",\n  },\n  \"high-magic\": {\n    name_de: \"High Magic\",\n    name_en: \"High Magic\",\n  },\n  illusion: {\n    name_de: \"Illusion\",\n    name_en: \"Illusion\",\n  },\n  necromancy: {\n    name_de: \"Necromancy\",\n    name_en: \"Necromancy\",\n  },\n  \"waaagh-magic\": {\n    name_de: \"Waaagh! Magic\",\n    name_en: \"Waaagh! Magic\",\n  },\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  let prevItemType, isFirstItemType;\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const { listId, type, unitId, command, group } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => list.army === id);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  let maxMagicPoints = 0;\n  const handleMagicChange = (event, magicItem, isCommand) => {\n    let magicItems;\n    const inputType = event.target.type;\n\n    if (event.target.checked) {\n      if (isCommand) {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.command[command].magic.selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      } else {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.items[group].selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      }\n    } else {\n      if (isCommand) {\n        magicItems = unit.command[command].magic.selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      } else {\n        magicItems = unit.items[group].selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      }\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n  const handleAmountChange = ({ event, parentId, isCommand }) => {\n    let magicItems;\n\n    if (isCommand) {\n      magicItems = (unit.command[command].magic.selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    } else {\n      magicItems = (unit.items[group].selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      list &&\n      !items &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, list, items, dispatch]);\n\n  if (!unit || !army || !items) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({ unit, magicItem, itemGroup, isConditional }) => {\n    let isChecked = false;\n    let isCommand = false;\n    let amount;\n\n    if (\n      unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints\n    ) {\n      const selectedItem = (unit.command[command].magic.selected || []).find(\n        ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n      );\n      isChecked = Boolean(selectedItem);\n      isCommand = true;\n      amount = selectedItem?.amount || 1;\n    } else if (unit?.items?.length) {\n      const selectedItem = unit.items[group].selected.find(\n        ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n      );\n      isChecked = Boolean(selectedItem);\n      amount = selectedItem?.amount || 1;\n    }\n\n    return (\n      <Fragment key={magicItem.id}>\n        <div\n          className={classNames(\n            \"checkbox\",\n            isConditional && \"checkbox--conditional\"\n          )}\n        >\n          <input\n            type=\"checkbox\"\n            id={`${itemGroup.id}-${magicItem.id}`}\n            value={`${itemGroup.id}-${magicItem.id}`}\n            onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n            checked={isChecked}\n            className=\"checkbox__input\"\n          />\n          <label\n            htmlFor={`${itemGroup.id}-${magicItem.id}`}\n            className=\"checkbox__label\"\n          >\n            {language === \"de\" ? magicItem.name_de : magicItem.name_en}\n            <i className=\"checkbox__points\">{`${\n              magicItem.points\n            } ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n          </label>\n        </div>\n        {magicItem.stackable && isChecked && (\n          <NumberInput\n            id={`${itemGroup.id}-${magicItem.id}-amount`}\n            min={1}\n            max={magicItem.maximum}\n            value={amount}\n            onChange={(event) => {\n              handleAmountChange({\n                parentId: `${itemGroup.id}-${magicItem.id}`,\n                event,\n                isCommand,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  const getRadio = ({ unit, magicItem, itemGroup }) => {\n    let isChecked = false;\n    let isCommand = false;\n\n    if (\n      unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints\n    ) {\n      isChecked =\n        (unit.command[command].magic.selected || []).find(\n          ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n        ) || false;\n      isCommand = true;\n    } else if (unit?.items?.length) {\n      isChecked =\n        unit.items[group].selected.find(\n          ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n        ) || false;\n    }\n\n    return (\n      <div className=\"radio\" key={magicItem.id}>\n        <input\n          type=\"radio\"\n          id={`${itemGroup.id}-${magicItem.id}`}\n          value={`${itemGroup.id}-${magicItem.id}`}\n          onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n          checked={isChecked}\n          name={itemGroup.id}\n          className=\"radio__input\"\n        />\n        <label\n          htmlFor={`${itemGroup.id}-${magicItem.id}`}\n          className=\"radio__label\"\n        >\n          {language === \"de\" ? magicItem.name_de : magicItem.name_en}\n          <i className=\"checkbox__points\">{`${\n            magicItem.points\n          } ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}</i>\n        </label>\n      </div>\n    );\n  };\n\n  let hasPointsError = false;\n  let unitMagicPoints = 0;\n  const hasCommandMagicItems = Boolean(\n    unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints\n  );\n  const hasMagicItems = Boolean(unit?.items?.length);\n\n  if (hasCommandMagicItems) {\n    maxMagicPoints = unit.command[command].magic.maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.command[command].magic.selected,\n    });\n    hasPointsError = unitMagicPoints > maxMagicPoints;\n  } else if (hasMagicItems) {\n    maxMagicPoints = unit.items[group].maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.items[group].selected,\n    });\n    hasPointsError = unitMagicPoints > maxMagicPoints && maxMagicPoints > 0;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={\n            language === \"de\"\n              ? unit?.items?.length && !unit?.command?.length\n                ? unit.items[group].name_de\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n              : unit?.items?.length && !unit?.command?.length\n              ? unit.items[group].name_en\n              : intl.formatMessage({\n                  id: \"unit.magicItems\",\n                })\n          }\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  hasPointsError && \"magic__header-points--error\"\n                )}\n              >\n                {`${unitMagicPoints}`}&nbsp;\n              </span>\n              {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n              <FormattedMessage id=\"app.points\" />\n            </>\n          }\n          hasPointsError={hasPointsError}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              language === \"de\"\n                ? unit?.items?.length && !unit?.command?.length\n                  ? unit.items[group].name_de\n                  : intl.formatMessage({\n                      id: \"unit.magicItems\",\n                    })\n                : unit?.items?.length && !unit?.command?.length\n                ? unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    hasPointsError && \"magic__header-points--error\"\n                  )}\n                >\n                  {`${unitMagicPoints}`}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n            hasPointsError={hasPointsError}\n          />\n        )}\n        {items.map((itemGroup) => {\n          const commandMagicItems = itemGroup.items.filter(\n            (item) =>\n              hasCommandMagicItems &&\n              unit.command[command].magic.types.includes(item.type)\n          );\n          const magicItems = itemGroup.items.filter(\n            (item) =>\n              hasMagicItems &&\n              !command &&\n              unit.items[group].types.includes(item.type)\n          );\n          const itemGroupItems = hasCommandMagicItems\n            ? commandMagicItems\n            : magicItems;\n\n          if (itemGroupItems.length > 0) {\n            prevItemType = null;\n            isFirstItemType = false;\n          }\n\n          return (\n            <Fragment key={itemGroup.name_de}>\n              {itemGroupItems.length > 0 && (\n                <h2 className=\"unit__subline\">\n                  {language === \"de\" ? itemGroup.name_de : itemGroup.name_en}\n                </h2>\n              )}\n              {itemGroupItems.map((magicItem) => {\n                if (prevItemType !== magicItem.type) {\n                  prevItemType = magicItem.type;\n                  isFirstItemType = true;\n                } else {\n                  isFirstItemType = false;\n                }\n\n                let isChecked = false,\n                  mutuallyExclusive = false;\n\n                if (hasCommandMagicItems) {\n                  isChecked =\n                    (unit.command[command].magic.selected || []).find(\n                      ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                    ) || false;\n                  mutuallyExclusive =\n                    unit.command[command].magic.mutuallyExclusive;\n                } else if (hasMagicItems) {\n                  isChecked =\n                    unit.items[group].selected.find(\n                      ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                    ) || false;\n                  mutuallyExclusive = unit.items[group].mutuallyExclusive;\n                }\n\n                return (\n                  <Fragment key={magicItem.name_de}>\n                    {isFirstItemType && (\n                      <h3 className=\"magic__type\">\n                        {nameMap[magicItem.type][`name_${language}`]}\n                      </h3>\n                    )}\n                    {mutuallyExclusive\n                      ? getRadio({ unit, magicItem, itemGroup })\n                      : getCheckbox({ unit, magicItem, itemGroup })}\n                    {magicItem.conditional && isChecked\n                      ? magicItem.conditional.map((conditionalItem) =>\n                          getCheckbox({\n                            unit,\n                            magicItem: conditionalItem,\n                            itemGroup,\n                            isConditional: true,\n                          })\n                        )\n                      : null}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        })}\n      </MainComponent>\n    </>\n  );\n};\n","import { nameMap } from \"../pages/magic\";\n\nexport const getAllOptions = (\n  {\n    mounts,\n    equipment,\n    armor,\n    options,\n    command,\n    items,\n    detachments,\n    activeLore,\n    lores,\n  },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = [];\n\n  if (command) {\n    command.forEach(({ name_de, name_en, active, magic }) => {\n      if (active) {\n        allCommand.push(language === \"de\" ? name_de : name_en);\n      }\n      if (magic && magic?.selected?.length) {\n        magic.selected.forEach((selectedItem) => {\n          allCommand.push(\n            selectedItem.amount > 1\n              ? `${selectedItem.amount}x ` + selectedItem[`name_${language}`]\n              : selectedItem[`name_${language}`]\n          );\n        });\n      }\n    });\n  }\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allArmor = armor\n    ? armor\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_de, name_en, stackableCount }) =>\n            `${stackableCount} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allItems = [];\n  if (items?.length) {\n    items.forEach((item) => {\n      (item.selected || []).forEach((selectedItem) => {\n        allItems.push(\n          selectedItem.amount > 1\n            ? `${selectedItem.amount}x ` + selectedItem[`name_${language}`]\n            : selectedItem[`name_${language}`]\n        );\n      });\n    });\n  }\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(\n          ({ name_de, name_en, strength }) =>\n            `${strength} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const lore = [];\n  if (activeLore) {\n    lore.push(nameMap[activeLore][`name_${language}`]);\n  } else if (lores?.length) {\n    lore.push(nameMap[lores[0]][`name_${language}`]);\n  }\n\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allArmor,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allItems : []),\n    ...allDetachments,\n    ...lore,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \").replace(/\\*/g, \"\");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeFromLocalList, updateLocalList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const location = useLocation();\n  const { language } = useLanguage();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDelete = () => {\n    dispatch(deleteList(listId));\n    removeFromLocalList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData = getMaxPercentData({\n    type: \"lords\",\n    armyPoints: list.points,\n    points: lordsPoints,\n  });\n  const heroesData = getMaxPercentData({\n    type: \"heroes\",\n    armyPoints: list.points,\n    points: heroesPoints,\n  });\n  const charactersData = getMaxPercentData({\n    type: \"characters\",\n    armyPoints: list.points,\n    points: charactersPoints,\n  });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const mercenariesData = getMaxPercentData({\n    type: \"mercenaries\",\n    armyPoints: list.points,\n    points: mercenariesPoints,\n  });\n  const alliesData = getMaxPercentData({\n    type: \"allies\",\n    armyPoints: list.points,\n    points: alliesPoints,\n  });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: handleDelete,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.lords.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/lords/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.heroes.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/heroes/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.characters.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/characters/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.mercenaries && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />\n              </h2>\n              <p className=\"editor__points\">\n                {mercenariesData.diff > 0 ? (\n                  <>\n                    <strong>{mercenariesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>\n                      {mercenariesData.points - mercenariesPoints}\n                    </strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.mercenaries.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/mercenaries/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">Coming soon</p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/mercenaries`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n\n        {list.allies && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.allies.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/allies/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`]}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">Coming soon</p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport { setArmy } from \"../../state/army\";\nimport { setItems } from \"../../state/items\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblin-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const resetState = () => {\n    dispatch(setArmy(null));\n    dispatch(setItems(null));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer Fantasy and Warhammer:\n          The Old World\n        </title>\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <ul>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <List\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n                onClick={resetState}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </List>\n            )\n          )}\n        </ul>\n        <Button\n          centered\n          to=\"/new\"\n          icon=\"new-list\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n        <Button\n          centered\n          to=\"/import\"\n          type=\"text\"\n          icon=\"import\"\n          color=\"dark\"\n          spaceTop\n          spaceBottom\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.import\" />\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitMagicPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { updateIds, getRandomId } from \"../../utils/id\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachments =\n    army && army.core.filter((coreUnit) => coreUnit.detachment);\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleAddDetachmentClick = ({ id }) => {\n    const detachment = detachments.find((detachment) => detachment.id === id);\n    const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n    unitDetachments.push({\n      id: `${id}.${getRandomId()}`,\n      name_de: detachment.name_de,\n      name_en: detachment.name_en,\n      points: detachment.points,\n      strength: 5,\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDeleteDetachmentClick = ({ id }) => {\n    const unitDetachments = [...unit.detachments].filter(\n      (detachment) => detachment.id !== id\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentStrengthClick = ({ id, strength }) => {\n    const unitDetachments = [...unit.detachments].map((detachment) =>\n      detachment.id === id ? { ...detachment, strength } : detachment\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleArmorChange = (id) => {\n    const armor = unit.armor.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        armor,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n  const handleLoresChange = (lore) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        activeLore: lore,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`]}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`]}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          !unit.lores &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.armor || (unit.armor && !unit.armor.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic ||\n            (unit.magic && !unit.magic.maxPoints && !unit.items?.length)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.command\" />\n            </h2>\n            {unit.command.map(\n              (\n                {\n                  name_de,\n                  name_en,\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                },\n                index\n              ) => {\n                const commandMagicPoints = getUnitMagicPoints({\n                  selected: magic?.selected,\n                });\n\n                return (\n                  <Fragment key={id}>\n                    <div className=\"checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        {language === \"de\" ? name_de : name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.maxPoints && active ? (\n                      <>\n                        <hr className=\"unit__hr\" />\n                        <List\n                          to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link\"\n                          active={location.pathname.includes(`magic/${index}`)}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (itemType) =>\n                                    nameMap[itemType][`name_${language}`]\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {commandMagicPoints}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {magic?.selected && (\n                            <p>\n                              {magic.selected\n                                .map((selectedItem) =>\n                                  selectedItem.amount > 1\n                                    ? `${selectedItem.amount}x ` +\n                                      selectedItem[`name_${language}`]\n                                    : selectedItem[`name_${language}`]\n                                )\n                                .join(\", \")\n                                .replace(/\\*/g, \"\")}\n                            </p>\n                          )}\n                        </List>\n                      </>\n                    ) : null}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ name_de, name_en, points, perModel, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.armor && unit.armor.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.armor\" />\n            </h2>\n            {unit.armor.map(\n              ({ name_de, name_en, points, perModel, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`armor-${id}`}\n                    name=\"armor\"\n                    value={id}\n                    onChange={() => handleArmorChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`armor-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                name_de,\n                name_en,\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      {language === \"de\" ? name_de : name_en}:\n                      <i className=\"checkbox__points\">\n                        {`${points} ${intl.formatMessage({\n                          id: \"app.points\",\n                        })} ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_de, name_en, id }) => (\n              <Fragment key={id}>\n                <div className=\"list\">\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {language === \"de\" ? name_de : name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(({ name_de, name_en, strength, id, points }) => (\n                      <div className=\"list\" key={id}>\n                        <div className=\"list__inner unit__detachments\">\n                          <NumberInput\n                            noError\n                            id={`strength-${id}`}\n                            min={5}\n                            value={strength}\n                            onChange={(event) =>\n                              handleDetachmentStrengthClick({\n                                id,\n                                strength: event.target.value,\n                              })\n                            }\n                          />\n                          <span>\n                            <b>{language === \"de\" ? name_de : name_en}</b>\n                            <i>{`${getUnitPoints({\n                              strength,\n                              points,\n                            })} ${intl.formatMessage({\n                              id: \"app.points\",\n                            })}`}</i>\n                          </span>\n                          <Button\n                            onClick={() =>\n                              handleDeleteDetachmentClick({\n                                id,\n                              })\n                            }\n                            type=\"secondary\"\n                            icon=\"close\"\n                            label={intl.formatMessage({ id: \"misc.remove\" })}\n                            size=\"small\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n              </Fragment>\n            ))}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(\n              ({ name_de, name_en, points, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`mounts-${id}`}\n                    name=\"mounts\"\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                      {\n                        id: \"app.points\",\n                      }\n                    )}`}</i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.lores && unit.lores.length ? (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.lore\" />\n            </h2>\n            {unit.lores.map((lore) => (\n              <div className=\"radio\" key={lore}>\n                <input\n                  type=\"radio\"\n                  id={`lore-${lore}`}\n                  name=\"lores\"\n                  value={lore}\n                  onChange={() => handleLoresChange(lore)}\n                  checked={(unit.activeLore || unit.lores[0]) === lore}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                  {nameMap[lore][`name_${language}`]}\n                </label>\n              </div>\n            ))}\n          </>\n        ) : null}\n        {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n        {unit.items && unit.items.length\n          ? unit.items.map((item, itemIndex) => {\n              const itemsPoints = getUnitMagicPoints({\n                selected: item.selected,\n              });\n\n              return (\n                <List\n                  to={`/editor/${listId}/${type}/${unitId}/items/${itemIndex}`}\n                  className=\"editor__list unit__link\"\n                  active={location.pathname.includes(`items/${itemIndex}`)}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {language === \"de\" ? item.name_de : item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span\n                        className={classNames(\n                          itemsPoints > item.maxPoints &&\n                            item.maxPoints > 0 &&\n                            \"editor__error\"\n                        )}\n                      >\n                        {itemsPoints}\n                      </span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                    {itemsPoints > item.maxPoints && item.maxPoints > 0 && (\n                      <Icon\n                        symbol=\"error\"\n                        color=\"red\"\n                        className=\"unit__magic-icon\"\n                      />\n                    )}\n                  </div>\n                  {item.selected && (\n                    <p>\n                      {item.selected\n                        .map((selectedItem) =>\n                          selectedItem.amount > 1\n                            ? `${selectedItem.amount}x ` +\n                              selectedItem[`name_${language}`]\n                            : selectedItem[`name_${language}`]\n                        )\n                        .join(\", \")\n                        .replace(/\\*/g, \"\")}\n                    </p>\n                  )}\n                </List>\n              );\n            })\n          : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { loadScript } from \"../../utils/script\";\n\nimport \"./About.css\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    loadScript(\"https://www.paypalobjects.com/donate/sdk/donate-sdk.js\", () => {\n      window.PayPal.Donation.Button({\n        env: \"production\",\n        hosted_button_id: \"VU2Z6Q32Q656A\",\n        image: {\n          src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\",\n          alt: \"Donate with PayPal button\",\n          title: \"PayPal - The safer, easier way to pay online!\",\n        },\n      }).render(\"#donate-button\");\n    });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.donation\" />\n        </p>\n        <div id=\"donate-button-container\" className=\"about__donation\">\n          <div id=\"donate-button\"></div>\n        </div>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <b>\n            <FormattedMessage id=\"about.disclaimer\" />\n          </b>\n        </p>\n      </Main>\n    </>\n  );\n};\n","export const loadScript = (src, done) => {\n  const js = document.createElement(\"script\");\n\n  js.src = src;\n  js.onload = function () {\n    done && done();\n  };\n  js.onerror = function () {\n    done && done(new Error(\"Failed to load script \" + src));\n  };\n  document.head.appendChild(js);\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        <ul>\n          {army[type].map(({ name_de, name_en, id, minimum, points }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum ? `${minimum} ` : null}\n                <b>{language === \"de\" ? name_de : name_en}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport gameSystems from \"../../assets/armies.json\";\n\nconst getUnitsString = ({\n  units,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n}) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n      let optionsString = \"\";\n\n      if (allOptions) {\n        if (isCompactList) {\n          optionsString = `(${allOptions})\\n`;\n        } else {\n          optionsString = `- ${allOptions.split(\", \").join(\"\\n- \")}\\n`;\n        }\n      }\n\n      // prettier-ignore\n      return `${unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n}${unit[`name_${language}`]}${isShowList ? '' : ' [' + getUnitPoints(unit) + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${optionsString}\n`;\n    })\n    .join(\"\");\n};\n\nexport const getListAsText = ({\n  list,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n}) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n  let listString = \"\";\n\n  // HEADER\n  // prettier-ignore\n  if (!isCompactList) {\n    listString += `===\n${list.name}${isShowList ? '' : ' [' + allPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${game.name}, ${armyName}\n===\n\n`;\n  }\n\n  // CHARACTERS\n  // prettier-ignore\n  if (list.characters?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})}${isShowList ? '' : ' [' + charactersPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.characters,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // LORDS\n  // prettier-ignore\n  if (list.lords?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})}${isShowList ? '' : ' [' + lordsPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.lords,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // HEROES\n  // prettier-ignore\n  if (list.heroes?.length) {\n      listString += `++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})}${isShowList ? '' : ' [' + heroesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.heroes,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // CORE\n  // prettier-ignore\n  if (list.core.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.core\",\n})}${isShowList ? '' : ' [' + corePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.core,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // SPECIAL\n  // prettier-ignore\n  if (list.special.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.special\",\n})}${isShowList ? '' : ' [' + specialPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.special,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // RARE\n  // prettier-ignore\n  if (list.rare.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})}${isShowList ? '' : ' [' + rarePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.rare,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // MERCENARIES\n  // prettier-ignore\n  if (list.mercenaries?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})}${isShowList ? '' : ' [' + mercenariesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.mercenaries,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // ALLIES\n  // prettier-ignore\n  if (list.allies?.length) {\n  listString += `++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})}${isShowList ? '' : ' [' + alliesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n\n    listString += `${getUnitsString({\n      isCompactList,\n      units: list.allies,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  listString += `---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n\n  return listString;\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport { getListAsText } from \"./get-list-as-text\";\n// import { getListAsBBCode } from \"./get-list-as-bbcode\";\nimport \"./Export.css\";\n\nconst getFile = ({ list, listText, asText }) => {\n  const fileName = `${list?.name\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/,/g, \"\")}.${asText ? \"txt\" : \"owb.json\"}`;\n  const file = new File([asText ? listText : JSON.stringify(list)], fileName, {\n    type: asText ? \"text/plain\" : \"application/json\",\n  });\n  const fileUrl = URL.createObjectURL(file);\n\n  return {\n    file,\n    fileUrl,\n    fileName,\n  };\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const { listId } = useParams();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [shareOwbError, setOwbShareError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [isCompactList, setIsCompactList] = useState(false);\n  // const [isForumList, setIsForumList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({ list, isShowList, isCompactList, intl, language })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const { file, fileUrl, fileName } = getFile({ list });\n  const { fileName: textFileName, fileUrl: textFileUrl } = getFile({\n    list,\n    listText,\n    asText: true,\n  });\n  const share = async ({ asText }) => {\n    const shareData = {};\n\n    asText ? setShareError(false) : setOwbShareError(false);\n\n    if (asText) {\n      shareData.text = listText;\n    } else {\n      shareData.title = list.name;\n      shareData.files = [file];\n      shareData.text = list.description;\n    }\n\n    if (!navigator.canShare) {\n      asText ? setShareError(true) : setOwbShareError(true);\n      return;\n    }\n\n    try {\n      await navigator.share(shareData);\n    } catch (error) {\n      asText ? setShareError(true) : setOwbShareError(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.copyTitle\" />\n        </h2>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.visibleListDescription\" />\n          </i>\n        </p>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"compact\"\n            onChange={() => setIsCompactList(!isCompactList)}\n            checked={isCompactList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"compact\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.compactList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.compactListDescription\" />\n          </i>\n        </p>\n        {/* <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"forum\"\n            onChange={() => setIsForumList(!isForumList)}\n            checked={isForumList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"forum\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.forumText\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.forumTextDescription\" />\n          </i>\n        </p> */}\n        <Expandable headline={<FormattedMessage id=\"export.preview\" />}>\n          <textarea className=\"export__text\" value={listText} readOnly />\n        </Expandable>\n        <Button icon=\"share\" onClick={() => share({ asText: true })}>\n          <FormattedMessage id=\"export.shareText\" />\n        </Button>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          onClick={copyText}\n          spaceTop\n          spaceBottom\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        <br />\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button icon=\"download\" href={textFileUrl} download={textFileName}>\n          <FormattedMessage id=\"export.downloadAsText\" />\n        </Button>\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.owbTitle\" />\n        </h2>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.dowloadInfo\" />\n          </i>\n        </p>\n        <Button\n          icon=\"download\"\n          href={fileUrl}\n          download={fileName}\n          spaceBottom\n          spaceTop\n        >\n          <FormattedMessage id=\"export.download\" />\n        </Button>\n        <br />\n        <Button icon=\"share\" onClick={share}>\n          <FormattedMessage id=\"export.shareOwb\" />\n        </Button>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareOwbError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Button\n          to={`/editor/${listId}`}\n          centered\n          icon=\"back\"\n          spaceTop\n          spaceBottom\n        >\n          <FormattedMessage id=\"header.back\" />\n        </Button>\n        {isPrinting ? (\n          <p className=\"print-info\">\n            <FormattedMessage id=\"print.printing\" />\n          </p>\n        ) : (\n          <>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"show\"\n                onChange={() => setIsShowList(!isShowList)}\n                checked={isShowList}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"show\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.visibleList\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\">\n              <i>\n                (<FormattedMessage id=\"export.visibleListDescription\" />)\n              </i>\n            </p>\n            <Button\n              onClick={handlePrintClick}\n              centered\n              icon=\"print\"\n              spaceTop\n              spaceBottom\n            >\n              <FormattedMessage id=\"misc.print\" />\n            </Button>\n          </>\n        )}\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.characters\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            <ul>\n              {list.characters.map((unit) => (\n                <li key={unit.id}>\n                  <h3>\n                    {language === \"de\" ? unit.name_de : unit.name_en}\n                    {!isShowList && (\n                      <span className=\"print__points\">\n                        [{getUnitPoints(unit)}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h3>\n                  {getAllOptions(unit)}\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.lords.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.heroes.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{corePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{specialPoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{rarePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        {list.game === \"the-old-world\" && (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.mercenaries.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      <span className=\"print__strength\">\n                        {(unit.strength || unit.minimum) &&\n                          `${unit.strength || unit.minimum} `}\n                      </span>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.allies.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      <span className=\"print__strength\">\n                        {(unit.strength || unit.minimum) &&\n                          `${unit.strength || unit.minimum} `}\n                      </span>\n                      {language === \"de\" ? unit.name_de : unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list?.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[language === \"de\" ? \"name_de\" : \"name_en\"] : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  regimentalUnit: false,\n  detachment: false,\n  command: [],\n  equipment: [],\n  armor: [],\n  options: [],\n  mounts: [],\n  items: [],\n  lores: [],\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"armor-mages\",\n  \"talisman\",\n  \"banner\",\n  \"arcane-item\",\n  \"enchanted-item\",\n  \"weapon-runes\",\n  \"armor-runes\",\n  \"banner-runes\",\n  \"talismanic-runes\",\n  \"engineering-runes\",\n  \"triptych\",\n  \"knightly-virtue\",\n  \"knightly-virtue-character\",\n  \"chaos-mutation\",\n  \"chaos-mutation-character\",\n  \"chaos-mutation-chieftain\",\n  \"gift-of-chaos\",\n  \"forest-spite\",\n];\nconst loresOfMagic = [\n  \"daemonology\",\n  \"dark-magic\",\n  \"elementalism\",\n  \"battle-magic\",\n  \"high-magic\",\n  \"illusion\",\n  \"necromancy\",\n  \"waaagh-magic\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleCheckboxChange = ({ field, value }) => {\n    setUnit({\n      ...unit,\n      [field]: value,\n    });\n  };\n  const handleLoresOfMagicChange = ({ lore }) => {\n    if (unit.lores.includes(lore)) {\n      setUnit({\n        ...unit,\n        lores: unit.lores.filter((loreName) => loreName !== lore),\n      });\n    } else {\n      setUnit({\n        ...unit,\n        lores: [...unit.lores, lore],\n      });\n    }\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelDelete = ({ index, key }) => {\n    setUnit({\n      ...unit,\n      [key]: unit[key].filter((_, entryIndex) => entryIndex !== index),\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleItemsChange = ({ value, type, itemIndex }) => {\n    const newEntries = unit.items.map((entry, entryIndex) => {\n      if (itemIndex === entryIndex) {\n        return {\n          ...entry,\n          types:\n            value === \"on\"\n              ? [...unit.items[itemIndex].types, type]\n              : unit.items[itemIndex].types.filter((name) => name !== type),\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      items: newEntries,\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewArmor = () => {\n    setUnit({\n      ...unit,\n      armor: [\n        ...unit.armor,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          perModel: true,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewMagicItemCategory = () => {\n    setUnit({\n      ...unit,\n      items: [\n        ...unit.items,\n        {\n          name_en: \"Magic Items\",\n          name_de: \"Magische Gegenstände\",\n          types: [],\n          selected: [],\n          mutuallyExclusive: false,\n          maxPoints: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>\n        {type === \"characters\" ? \"Points\" : \"Points per model\"}\n      </label>\n      <NumberInput\n        id={`points-${randomId}`}\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`regimentalUnit-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"regimentalUnit\",\n                  value: !unit.regimentalUnit,\n                })\n              }\n              checked={unit.regimentalUnit}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`regimentalUnit-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit can have detachments\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`detachment-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"detachment\",\n                  value: !unit.detachment,\n                })\n              }\n              checked={unit.detachment}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`detachment-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit is a detachment\n            </label>\n          </div>\n        </>\n      )}\n      {type === \"characters\" && (\n        <Expandable headline=\"Allowed Lores of Magic\">\n          {loresOfMagic.map((lore, loreIndex) => (\n            <div className=\"checkbox\" key={lore}>\n              <input\n                type=\"checkbox\"\n                id={`${lore}-${loreIndex}-${randomId}`}\n                onChange={() =>\n                  handleLoresOfMagicChange({\n                    lore,\n                  })\n                }\n                checked={unit.lores.includes(lore)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${lore}-${loreIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {lore}\n              </label>\n            </div>\n          ))}\n        </Expandable>\n      )}\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command.magic.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command.magic.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  min={0}\n                  value={command.magic.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"command\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Weapon</h3>\n      <p className=\"datasets__paragraph\">\n        All weapon options are mutually exclusive and please add a default\n        weapon.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`equipment-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"equipment\",\n                    field: \"perModel\",\n                    value: !equipment.perModel,\n                  })\n                }\n                checked={equipment.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`equipment-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              icon=\"delete\"\n              spaceTop\n              onClick={() =>\n                handleSecondLevelDelete({ index, key: \"equipment\" })\n              }\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New weapon\n      </Button>\n\n      <hr />\n\n      <h3>Armor</h3>\n      <p className=\"datasets__paragraph\">\n        All armor options are mutually exclusive and please add a default armor.\n        <br />\n        <i>(e.g. \"Light armour\" or \"Heavy armour\")</i>\n      </p>\n      {unit.armor.map((armor, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`armor-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"armor\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`armor-points${index}-${randomId}`}\n            value={armor.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`armor-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"armor\",\n                    field: \"perModel\",\n                    value: !armor.perModel,\n                  })\n                }\n                checked={armor.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`armor-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`armor-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"armor\",\n                  field: \"active\",\n                  value: !armor.active,\n                })\n              }\n              checked={armor.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`armor-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Light armour\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"armor\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewArmor}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New armor\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`options-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"perModel\",\n                    value: !option.perModel,\n                  })\n                }\n                checked={option.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`options-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"options\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      {type === \"characters\" ? (\n        <>\n          <hr />\n\n          <h3>Mounts</h3>\n          <p className=\"datasets__paragraph\">\n            All mount options are mutually exclusive and please add a default\n            mount.\n            <br />\n            <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n          </p>\n          {unit.mounts.map((mount, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"mounts\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`mounts-points${index}-${randomId}`}\n                value={mount.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mounts-active${index}-${randomId}`}\n                  onChange={() =>\n                    handleSecondLevelFieldChange({\n                      index,\n                      key: \"mounts\",\n                      field: \"active\",\n                      value: !mount.active,\n                    })\n                  }\n                  checked={mount.active}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mounts-active${index}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Selected by default\n                </label>\n              </div>\n              <p>\n                <i>(e.g. when \"On foot\" is the default mount)</i>\n              </p>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  spaceTop\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"mounts\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewMount}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New mount\n          </Button>\n        </>\n      ) : null}\n      <hr />\n\n      <h3>(Magic) items</h3>\n      <p className=\"datasets__paragraph\">\n        Specify what types of items are allowed. Can also be used for chaos\n        mutations, knightly vitues or similar.\n      </p>\n      {unit.items && unit.items.length\n        ? unit.items.map((item, itemIndex) => (\n            <div className=\"entity__second-level\" key={itemIndex}>\n              <label htmlFor={`magic-name_en-${itemIndex}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_en-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_de-${itemIndex}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_de-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <Expandable headline=\"Allowed (magic) item types\">\n                {magicItemTypes.map((type, typeIndex) => (\n                  <div className=\"checkbox\" key={type}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleItemsChange({\n                          value: item.types.includes(type) ? \"off\" : \"on\",\n                          type,\n                          itemIndex,\n                        })\n                      }\n                      checked={item.types.includes(type)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {type}\n                    </label>\n                  </div>\n                ))}\n              </Expandable>\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mutually-exclusive-${itemIndex}-${randomId}`}\n                  onChange={(event) =>\n                    handleSecondLevelFieldChange({\n                      index: itemIndex,\n                      key: \"items\",\n                      field: \"mutuallyExclusive\",\n                      value: !item.mutuallyExclusive,\n                    })\n                  }\n                  checked={item.mutuallyExclusive}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mutually-exclusive-${itemIndex}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Mutually exclusive\n                </label>\n              </div>\n              <label htmlFor={`magic-points-${randomId}`}>Max. points</label>\n              <NumberInput\n                id={`magic-points-${itemIndex}-${randomId}`}\n                min={0}\n                value={item.maxPoints}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"maxPoints\",\n                    value: Number(event.target.value),\n                  })\n                }\n              />\n            </div>\n          ))\n        : null}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMagicItemCategory}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New category\n      </Button>\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n    </form>\n  );\n};\n","import { Fragment } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./UnitPreview.css\";\n\nexport const UnitPreview = ({ unit, coreUnits, onClose }) => {\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const detachments = coreUnits.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n\n  return (\n    <>\n      <button onClick={onClose} className=\"unit-preview-background\" />\n      <div className=\"unit-preview\">\n        <>\n          <Header\n            isSection\n            headline={unit[`name_${language}`]}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n          <Button\n            className=\"unit-preview__close\"\n            icon=\"close\"\n            type=\"text\"\n            label=\"Close preview\"\n            color=\"dark\"\n            onClick={onClose}\n          />\n\n          {!unit.minimum &&\n            (!unit.command || (unit.command && !unit.command.length)) &&\n            (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n            (!unit.armor || (unit.armor && !unit.armor.length)) &&\n            (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n            (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n            (!unit.items || (unit.items && !unit.items.length)) &&\n            (!unit.options || (unit.options && !unit.options.length)) && (\n              <i className=\"unit__empty\">\n                <FormattedMessage id=\"unit.noOptions\" />\n              </i>\n            )}\n          {unit.minimum ? (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                <FormattedMessage id=\"unit.unitSize\" />\n              </label>\n              <NumberInput\n                id=\"strength\"\n                min={unit.minimum}\n                max={unit.maximum}\n                value={unit.strength}\n                onChange={() => {}}\n              />\n            </>\n          ) : null}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n              {unit.command.map(\n                (\n                  { name_de, name_en, points, perModel, active = false, magic },\n                  index\n                ) => {\n                  let commandMagicPoints = 0;\n\n                  if (unit.magic && unit.magic.items) {\n                    unit.magic.items\n                      .filter((item) => item.command === index)\n                      .forEach(({ points }) => {\n                        commandMagicPoints = commandMagicPoints + points;\n                      });\n                  }\n\n                  return (\n                    <Fragment key={index}>\n                      <div className=\"checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          id={`command-${index}`}\n                          defaultChecked={active}\n                          className=\"checkbox__input\"\n                        />\n                        <label\n                          htmlFor={`command-${index}`}\n                          className=\"checkbox__label\"\n                        >\n                          {language === \"de\" ? name_de : name_en}\n                          <i className=\"checkbox__points\">\n                            {`${points} ${\n                              points === 1\n                                ? intl.formatMessage({\n                                    id: \"app.point\",\n                                  })\n                                : intl.formatMessage({\n                                    id: \"app.points\",\n                                  })\n                            }`}\n                            {perModel &&\n                              ` ${intl.formatMessage({\n                                id: \"unit.perModel\",\n                              })}`}\n                          </i>\n                        </label>\n                      </div>\n                      {magic?.maxPoints && active ? (\n                        <List\n                          // to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link\"\n                          active={false}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (type) => nameMap[type][`name_${language}`]\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {getUnitCommandPoints(\n                                  unit?.magic?.selected.filter(\n                                    ({ command }) => command === index\n                                  )\n                                )}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {unit?.magic?.items && (\n                            <p>\n                              {unit.magic.items\n                                .filter(({ command }) => command === index)\n                                .map(({ name_de, name_en }) =>\n                                  language === \"de\" ? name_de : name_en\n                                )\n                                .join(\", \")}\n                            </p>\n                          )}\n                        </List>\n                      ) : null}\n                    </Fragment>\n                  );\n                }\n              )}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.equipment\" />\n              </h2>\n              {unit.equipment.map(\n                (\n                  { name_de, name_en, points, perModel, active = false },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${index}`}\n                      name=\"equipment\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label\n                      htmlFor={`equipment-${index}`}\n                      className=\"radio__label\"\n                    >\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.armor && unit.armor.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.armor\" />\n              </h2>\n              {unit.armor.map(\n                (\n                  { name_de, name_en, points, perModel, active = false },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`armor-${index}`}\n                      name=\"armor\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`armor-${index}`} className=\"radio__label\">\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.options\" />\n              </h2>\n              {unit.options.map(\n                (\n                  {\n                    name_de,\n                    name_en,\n                    points,\n                    perModel,\n                    stackable,\n                    maximum,\n                    minimum = 0,\n                    stackableCount = minimum || 0,\n                    active = false,\n                  },\n                  index\n                ) =>\n                  !stackable ? (\n                    <div className=\"checkbox\" key={index}>\n                      <input\n                        type=\"checkbox\"\n                        id={`options-${index}`}\n                        defaultChecked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"checkbox__label\"\n                      >\n                        {language === \"de\" ? name_de : name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                  ) : (\n                    <Fragment key={index}>\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"unit__special-option\"\n                      >\n                        {language === \"de\" ? name_de : name_en}:\n                        <i className=\"checkbox__points\">\n                          {`${points} ${intl.formatMessage({\n                            id: \"app.points\",\n                          })} ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                        </i>\n                      </label>\n                      <NumberInput\n                        id={`options-${index}`}\n                        min={minimum}\n                        max={maximum}\n                        value={stackableCount}\n                        onChange={() => {}}\n                      />\n                    </Fragment>\n                  )\n              )}\n            </>\n          )}\n          {unit.regimentalUnit && (\n            <>\n              <h2 className=\"unit__subline unit__detachments-headline\">\n                <FormattedMessage id=\"unit.detachments\" />\n              </h2>\n              {detachments.map(({ name_de, name_en, id }) => (\n                <>\n                  <div className=\"list\" key={id}>\n                    <div className=\"list__inner unit__detachments-header\">\n                      <b className=\"unit__magic-headline\">\n                        {language === \"de\" ? name_de : name_en}\n                      </b>\n                      <Button\n                        type=\"secondary\"\n                        icon=\"add\"\n                        label={intl.formatMessage({ id: \"editor.add\" })}\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                  {unit.detachments &&\n                    unit.detachments\n                      .filter(\n                        (detachment) =>\n                          detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                      )\n                      .map(({ name_de, name_en, strength, id, points }) => (\n                        <div className=\"list\" key={id}>\n                          <div className=\"list__inner unit__detachments\">\n                            <NumberInput\n                              id={`strength-${id}`}\n                              min={5}\n                              value={strength}\n                              onChange={() => {}}\n                            />\n                            <span>\n                              <b>{language === \"de\" ? name_de : name_en}</b>\n                              <i>{`${getUnitPoints({\n                                strength,\n                                points,\n                              })} ${intl.formatMessage({\n                                id: \"app.points\",\n                              })}`}</i>\n                            </span>\n                            <Button\n                              type=\"secondary\"\n                              icon=\"close\"\n                              label={intl.formatMessage({ id: \"misc.remove\" })}\n                              size=\"small\"\n                            />\n                          </div>\n                        </div>\n                      ))}\n                </>\n              ))}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.mount\" />\n              </h2>\n              {unit.mounts.map(\n                ({ name_de, name_en, points, active = false }, index) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`mounts-${index}`}\n                      name=\"mounts\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`mounts-${index}`} className=\"radio__label\">\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                        {\n                          id: \"app.points\",\n                        }\n                      )}`}</i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n          {unit.items && unit.items.length\n            ? unit.items.map((item, itemIndex) => (\n                <List\n                  className=\"editor__list unit__link\"\n                  active={false}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">{item.name_en}</b>\n                    <i className=\"checkbox__points\">\n                      <span>{magicPoints}</span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                  </div>\n                  {item.items && (\n                    <p>\n                      {item.items\n                        .map(({ name_de, name_en }) =>\n                          language === \"de\" ? name_de : name_en\n                        )\n                        .join(\", \")}\n                    </p>\n                  )}\n                </List>\n              ))\n            : null}\n        </>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport { UnitPreview } from \"./UnitPreview\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUnit, setPreviewUnit] = useState(null);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"empire-of-man\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handlePreview = ({ unit }) => {\n    setPreviewUnit(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main className=\"datasets\">\n        <Button to=\"/\" icon=\"home\" centered spaceBottom>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually).\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"empire-of-man\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <>\n                {dataset.characters.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Characters</h3>\n                )}\n                <ul>\n                  {dataset.characters.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({\n                                  type: \"characters\",\n                                  id: unit.id,\n                                })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"characters\"\n                        onSubmit={handleSubmit}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.core.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Core Units</h3>\n                )}\n                <ul>\n                  {dataset.core.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"core\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"core\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.special.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Special Units</h3>\n                )}\n                <ul>\n                  {dataset.special.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"special\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"special\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.rare.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n                )}\n                <ul>\n                  {dataset.rare.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"rare\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"rare\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n              </>\n            )}\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy JSON\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p className=\"datasets__paragraph\">\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n            <textarea\n              className=\"datasets__output\"\n              rows=\"10\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n          </section>\n        </div>\n\n        {previewUnit ? (\n          <UnitPreview\n            unit={{ ...previewUnit, strength: 0 }}\n            onClose={() => setPreviewUnit(null)}\n            coreUnits={dataset.core}\n          />\n        ) : null}\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact className=\"changelog\">\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n\n        <hr />\n\n        <h3>v0.6.11</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-17 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change9\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change10\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                about: (\n                  <Link to=\"/about\">\n                    <FormattedMessage id=\"footer.about\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.6.0</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-14 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change8\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.5.0</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-13 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change4\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change5\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change6\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n        <p>\n          <i>\n            <FormattedMessage\n              id=\"changelog.change7\"\n              values={{\n                discord: (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://discord.gg/87nUyjUxTU\"\n                  >\n                    Discord\n                  </a>\n                ),\n              }}\n            />\n          </i>\n        </p>\n\n        <hr />\n\n        <h3>v0.4.2</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, createRef, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Import.css\";\n\nexport const Import = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(false);\n  const [typeError, setTypeError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const fileInput = createRef();\n  const handleListChange = () => {\n    const files = fileInput.current.files;\n\n    if (files.length > 0) {\n      if (\"application/json\" === files[0].type) {\n        setTypeError(false);\n        setList(files[0]);\n      } else {\n        setTypeError(true);\n      }\n    }\n  };\n  const handleSubmit = (event) => {\n    const reader = new FileReader();\n\n    setError(false);\n    reader.readAsText(list, \"UTF-8\");\n    reader.onload = (event) => {\n      const newId = getRandomId();\n      const importedList = { ...JSON.parse(event.target.result), id: newId };\n      const newLists = [...lists, importedList];\n\n      localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n      dispatch(setLists(newLists));\n      setRedirect(importedList.id);\n    };\n    reader.onerror = () => {\n      setError(true);\n    };\n\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"import.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"import.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"import\">\n          <label htmlFor=\"list\">\n            <FormattedMessage id=\"import.description\" />\n          </label>\n          <input\n            type=\"file\"\n            accept=\".json, application/json\"\n            id=\"list\"\n            className=\"input\"\n            onChange={handleListChange}\n            autoComplete=\"off\"\n            required\n            ref={fileInput}\n          />\n          {typeError && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"import.typeError\" />\n            </p>\n          )}\n          {error && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"export.error\" />\n            </p>\n          )}\n          <Button centered icon=\"add-list\" submitButton spaceTop>\n            <FormattedMessage id=\"import.button\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { Import } from \"./pages/import\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(max-width: 1279px)\")\n      .addEventListener(\"change\", (event) => setIsMobile(event.matches));\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/import\">{<Import isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/import\">{<Import />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as Sentry from \"@sentry/react\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\n\n// Initialize Sentry error tracking\nif (process.env.NODE_ENV !== \"development\") {\n  Sentry.init({\n    dsn: \"https://3947feb62e2f5348c1759e8d4d9ed084@o314295.ingest.sentry.io/4506569636642816\",\n    integrations: [\n      // new Sentry.BrowserTracing({\n      //   // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n      //   tracePropagationTargets: [\n      //     \"localhost\",\n      //     /^https:\\/\\/old-world-builder\\.com/,\n      //   ],\n      // }),\n    ],\n    environment: process.env.NODE_ENV,\n    release: `booky@${process.env.VERSION}`,\n    // Performance Monitoring\n    // tracesSampleRate: 1.0, //  Capture 100% of the transactions\n  });\n}\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Army builder for Warhammer: The Old World and Warhammer Fantasy Battles.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","href","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","download","Component","Link","buttonProps","aria-label","title","defaultProps","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","armor","armorData","mounts","mountsData","options","optionsData","Header","headline","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","intl","useIntl","useLocation","useState","showMenu","setShowMenu","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","height","alt","src","usa","germany","Select","required","selected","defaultValue","name_de","name_en","optionValue","ErrorMessage","NumberInput","max","min","readOnly","noError","pattern","newValue","Number","maxValue","preventDefault","values","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","magic","items","detachments","activeLore","data","removeUnit","actions","duplicateList","NewList","isMobile","MainComponent","Fragment","dispatch","useDispatch","lists","useSelector","game","setGame","gameSystems","armies","army","setArmy","setName","setDescription","setPoints","redirect","setRedirect","handleSystemChange","scrollTo","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","mercenaries","allies","newLists","JSON","stringify","createList","checked","warhammerFantasy","warhammerTheOldWorld","autoComplete","maxLength","rules","maxPercent","minPercent","maxSame","maxSameLarge","getMaxPercentData","armyPoints","maxPoints","floor","overLimit","diff","ceil","List","active","getUnitPoints","unitPoints","option","stackable","stackableCount","perModel","length","amount","item","detachment","getUnitMagicPoints","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","itemsSlice","setItems","updateLocalList","updatedList","updatedLists","parse","nameMap","greenskins","heirlooms","dwarfs","general","weapon","talisman","banner","artifact","triptych","daemonology","elementalism","illusion","necromancy","Magic","prevItemType","isFirstItemType","useParams","group","units","maxMagicPoints","handleMagicChange","magicItem","isCommand","magicItems","inputType","newCommand","entry","entryIndex","newItems","handleAmountChange","parentId","allItems","conditional","conditionalItem","conditionalIndex","getCheckbox","itemGroup","isConditional","isChecked","selectedItem","maximum","getRadio","unitMagicPoints","hasCommandMagicItems","hasMagicItems","commandMagicItems","types","includes","itemGroupItems","mutuallyExclusive","getAllOptions","lores","asString","noMagic","allCommand","push","allEquipment","allArmor","allOptions","allStackableOptions","allMounts","allDetachments","lore","allOptionsArray","allOptionsString","join","Editor","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeFromLocalList","armySlice","armyIconMap","theEmpire","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","skaven","vampireCounts","chaosDeamons","ogres","lizardmen","chaosDwarfs","Home","resetState","Unit","coreUnit","handleDuplicate","handleRemove","commandMagicPoints","handleCommandChange","itemType","handleEquipmentChange","handleArmorChange","handleStackableOptionChange","handleOptionsChange","regimentalUnit","unitDetachments","handleAddDetachmentClick","handleDetachmentStrengthClick","handleDeleteDetachmentClick","handleMountsChange","handleLoresChange","itemIndex","itemsPoints","EditList","About","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","PayPal","Donation","env","hosted_button_id","image","render","owb","datasets","discord","rel","github","gameIcons","license","Add","handleAdd","Help","Expandable","notBold","open","noMargin","getUnitsString","isShowList","isCompactList","optionsString","getFile","listText","asText","fileName","toLowerCase","file","File","fileUrl","URL","createObjectURL","Export","copied","setCopied","copyError","setCopyError","shareError","setShareError","shareOwbError","setOwbShareError","setIsShowList","setIsCompactList","armyName","listString","getListAsText","textFileName","textFileUrl","share","a","shareData","text","files","canShare","clipboard","writeText","Print","isPrinting","setIsPrinting","onafterprint","print","DuplicateList","Rename","initialUnitState","magicItemTypes","loresOfMagic","Entity","existingUnit","randomId","setUnit","handleFieldChange","handleCheckboxChange","field","handleSecondLevelFieldChange","newEntries","handleSecondLevelDelete","_","handleSecondLevelNameBlur","isNew","onBlur","placeholder","loreIndex","loreName","handleLoresOfMagicChange","newCommandEntries","commandIndex","handleCommandMagicChange","handleCommandMagicPointsChange","mount","typeIndex","handleItemsChange","UnitPreview","coreUnits","onClose","Datasets","isLoading","setIsLoading","previewUnit","setPreviewUnit","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","handlePreview","existingDataset","onDelete","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","b","msg","about","privacy","Import","setList","setError","typeError","setTypeError","fileInput","createRef","reader","FileReader","readAsText","importedList","result","accept","current","ref","App","matchMedia","matches","setIsMobile","localLists","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","Sentry","dsn","integrations","environment","release","VERSION","messages","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","German","English","ReactDOM","store","StrictMode","getElementById","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","debug_id":"533a446b-cabc-5d2e-9fff-4c7e6e6cbffa"}
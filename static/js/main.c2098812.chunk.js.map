{"version":3,"sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/fetcher.js","pages/magic/Magic.js","index.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","components/page/Page.js","components/select/Select.js","components/number-input/NumberInput.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","pages/new-list/NewList.js","utils/rules.js","components/list/List.js","utils/unit.js","utils/points.js","utils/list.js","pages/editor/Editor.js","utils/throttle.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","pages/home/Home.js","state/items.js","pages/magic/name-map.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","state/army.js","pages/add/Add.js","pages/help/Help.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","App.js","state/errors.js","store.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","Component","Link","buttonProps","aria-label","title","defaultProps","prevItemType","isFirstItemType","messages","getRandomId","Math","random","toString","replace","Header","headline","subheadline","moreButton","isSection","hasPointsError","intl","useIntl","useLocation","useState","showMenu","setShowMenu","useEffect","pathname","formatMessage","id","map","callback","name","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","alt","src","usa","germany","Select","options","required","selected","defaultValue","name_de","name_en","optionValue","NumberInput","props","pattern","preventDefault","Number","max","min","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","unit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","equipment","command","mounts","magic","data","removeUnit","actions","duplicateList","NewList","isMobile","MainComponent","Fragment","dispatch","useDispatch","lists","useSelector","gameSystems","game","enabled","setGame","armies","army","setArmy","setName","setDescription","setPoints","redirect","setRedirect","handleSystemChange","scrollTo","onSubmit","newId","newList","lords","heroes","core","special","rare","newLists","JSON","stringify","createList","checked","height","warhammerFantasy","warhammerTheOldWorld","autoComplete","rules","maxPercent","minPercent","maxSame","maxSameLarge","getMaxPercentData","armyPoints","maxPoints","floor","overLimit","diff","ceil","List","active","getAllOptions","asString","noMagic","allCommand","allEquipment","allOptions","allStackableOptions","stackableCount","allMounts","allMagicItems","items","allOptionsArray","allOptionsString","join","getUnitPoints","unitPoints","option","stackable","perModel","getUnitMagicPoints","commandIndex","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","updatedList","updatedLists","parse","Editor","useParams","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","corePoints","specialPoints","rarePoints","lordsData","heroesData","coreData","minPoints","getMinPercentData","specialData","rareData","moreButtons","removeList","index","includes","armyIconMap","theEmpire","dwarfs","greenskins","Home","length","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","itemsSlice","setItems","nameMap","heirlooms","general","weapon","armor","talisman","banner","artifact","Magic","isLoading","setIsLoading","units","maxMagicPoints","handleMagicChange","magicItem","magicItems","allItems","item","conditional","conditionalItem","conditionalIndex","updateIds","getCheckbox","itemGroup","isConditional","isChecked","types","confitionalItem","Unit","magicPoints","handleDuplicate","handleRemove","maximum","commandMagicPoints","handleCommandChange","handleEquipmentChange","handleStackableOptionChange","handleOptionsChange","handleMountsChange","EditList","updateLocalList","About","values","owb","twitter","href","rel","github","discord","gameIcons","license","armySlice","commandData","equipmentData","mountsData","optionsData","Add","handleAdd","Help","getUnitsString","isShowList","Export","copied","setCopied","copyError","setCopyError","setIsShowList","listText","armyName","getListAsText","clipboard","writeText","readOnly","Print","isDone","setIsDone","onafterprint","print","DuplicateList","Rename","App","matchMedia","matches","setIsMobile","localLists","path","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","German","English","ReactDOM","render","store","StrictMode","getElementById","URL","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c2098812.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.220641f9.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n}) => {\n  const Component = to ? Link : \"button\";\n  const buttonProps = {};\n\n  if (!to) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nlet prevItemType, isFirstItemType;\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(true);\n  const { listId, type, unitId, command } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => list.army === id);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const maxMagicPoints =\n    (unit &&\n      unit.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints) ||\n    (unit && unit.magic.maxPoints);\n  const handleMagicChange = (event, magicItem) => {\n    let magicItems;\n\n    if (event.target.checked) {\n      magicItems = [\n        ...(unit?.magic?.items || []),\n        {\n          ...magicItem,\n          command: Number(command),\n          id: event.target.value,\n        },\n      ];\n    } else {\n      magicItems = unit.magic.items.filter(\n        ({ id }) => id !== event.target.value\n      );\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n          setIsLoading(false);\n        },\n      });\n  }, [army, dispatch, list, setIsLoading, unit, language]);\n\n  if (isLoading) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({ unit, magicItem, itemGroup, isConditional }) => {\n    const isChecked = unit?.magic?.items\n      ? unit.magic.items.find(\n          ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n        ) || false\n      : false;\n\n    return (\n      <div\n        className={classNames(\n          \"checkbox\",\n          isConditional && \"checkbox--conditional\"\n        )}\n        key={magicItem.id}\n      >\n        <input\n          type=\"checkbox\"\n          id={`${itemGroup.id}-${magicItem.id}`}\n          value={`${itemGroup.id}-${magicItem.id}`}\n          onChange={(event) => handleMagicChange(event, magicItem)}\n          checked={isChecked}\n          className=\"checkbox__input\"\n        />\n        <label\n          htmlFor={`${itemGroup.id}-${magicItem.id}`}\n          className=\"checkbox__label\"\n        >\n          {language === \"de\" ? magicItem.name_de : magicItem.name_en}\n          <i className=\"checkbox__points\">{`${\n            magicItem.points\n          } ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}</i>\n        </label>\n      </div>\n    );\n  };\n  const hasPointsError = getUnitMagicPoints({ unit, command }) > maxMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"unit.magicItems\",\n          })}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  hasPointsError && \"magic__header-points--error\"\n                )}\n              >\n                {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n              </span>\n              {`/ ${maxMagicPoints} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={hasPointsError}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"unit.magicItems\",\n            })}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    hasPointsError && \"magic__header-points--error\"\n                  )}\n                >\n                  {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n                </span>\n                {`/ ${maxMagicPoints} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={hasPointsError}\n          />\n        )}\n        {items.map((itemGroup) => (\n          <Fragment key={itemGroup.name_de}>\n            <h2 className=\"unit__subline\">\n              {language === \"de\" ? itemGroup.name_de : itemGroup.name_en}\n            </h2>\n            {itemGroup.items.map((magicItem) => {\n              if (prevItemType !== magicItem.type) {\n                prevItemType = magicItem.type;\n                isFirstItemType = true;\n              } else {\n                isFirstItemType = false;\n              }\n\n              // Filter command magic items\n              if (\n                unit?.command &&\n                unit?.command[command] &&\n                !unit.command[command].magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              // Filter magic items\n              if (\n                unit?.magic?.types &&\n                !unit.magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              const isChecked = unit?.magic?.items\n                ? unit.magic.items.find(\n                    ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                  ) || false\n                : false;\n\n              return (\n                <Fragment key={magicItem.name_de}>\n                  {isFirstItemType && (\n                    <h3 className=\"magic__type\">\n                      {nameMap[magicItem.type][`name_${language}`]}\n                    </h3>\n                  )}\n                  {getCheckbox({ unit, magicItem, itemGroup })}\n                  {magicItem.conditional && isChecked\n                    ? magicItem.conditional.map((confitionalItem) =>\n                        getCheckbox({\n                          unit,\n                          magicItem: confitionalItem,\n                          itemGroup,\n                          isConditional: true,\n                        })\n                      )\n                    : null}\n                </Fragment>\n              );\n            })}\n          </Fragment>\n        ))}\n      </MainComponent>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Army builder for Warhammer: The Old World and Warhammer Fantasy Battles.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{moreButton && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {moreButton ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul className=\"header__more\">\n          {moreButton.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n};\n","import React from \"react\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return <Icon symbol=\"spinner\" className=\"spinner\" />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav>\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ name_de, name_en, id: optionValue }) => (\n        <option key={optionValue} value={optionValue}>\n          {language === \"de\" ? name_de : name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = (props) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) + 1,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) - 1,\n      },\n    });\n  };\n\n  return (\n    <div className=\"number-input\">\n      <input {...props} type=\"number\" pattern=\"[0-9]*\" />\n      <Button\n        onClick={handleOnUpClick}\n        type=\"secondary\"\n        icon=\"up\"\n        label={intl.formatMessage({ id: \"misc.increase\" })}\n        disabled={props.value >= props.max}\n        className=\"number-input__button number-input__button--up\"\n      />\n      <Button\n        onClick={handleOnDownClick}\n        type=\"secondary\"\n        icon=\"down\"\n        label={intl.formatMessage({ id: \"misc.decrease\" })}\n        disabled={props.value <= props.min}\n        className=\"number-input__button number-input__button--down\"\n      />\n    </div>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        name,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(gameSystems.find((game) => game.enabled).id);\n  const [army, setArmy] = useState(\n    gameSystems.find((game) => game.enabled).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [redirect, setRedirect] = useState(null);\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      name: name,\n      description: description,\n      game: game,\n      points: points,\n      army: army,\n      lords: [],\n      heroes: [],\n      core: [],\n      special: [],\n      rare: [],\n      id: newId,\n    };\n    const newLists = [...lists, newList];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id, enabled }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === \"warhammer-fantasy\"}\n                className=\"radio__input\"\n                disabled={!enabled}\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={gameSystems.filter(({ id }) => id === game)[0].armies}\n            onChange={handleArmyChange}\n            selected=\"warhammer-fantasy\"\n            spaceBottom\n            required\n          />\n          <Button centered icon=\"add-list\" submitButton>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  lords: { maxPercent: 25 },\n  heroes: { maxPercent: 25 },\n  core: { minPercent: 25 },\n  special: {\n    maxPercent: 50,\n    maxSame: 3,\n    maxSameLarge: 6,\n  },\n  rare: {\n    maxPercent: 25,\n    maxSame: 2,\n    maxSameLarge: 4,\n  },\n};\n\nexport const getMaxPercentData = ({ type, armyPoints, points }) => {\n  const maxPercent = rules[type].maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({ type, armyPoints, points }) => {\n  const minPercent = rules[type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","export const getAllOptions = (\n  { mounts, equipment, options, command, magic },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = command\n    ? command\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_de, name_en, stackableCount }) =>\n            `${stackableCount} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allMagicItems = magic?.items\n    ? magic.items.map(({ name_de, name_en }) =>\n        language === \"de\" ? name_de : name_en\n      )\n    : [];\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allMagicItems : []),\n  ];\n  const allOptionsString = allOptionsArray.join(\", \");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.magic?.items) {\n    unit.magic.items.forEach((option) => {\n      unitPoints += option.points;\n    });\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ unit, command }) => {\n  const commandIndex = Number(command);\n  let unitPoints = 0;\n\n  if (unit?.magic?.items) {\n    if (commandIndex >= 0) {\n      unit.magic.items.forEach((option) => {\n        if (option.command === commandIndex) {\n          unitPoints += option.points;\n        }\n      });\n    } else {\n      unit.magic.items.forEach((option) => {\n        unitPoints += option.points;\n      });\n    }\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type].forEach((unit) => {\n    points += getUnitPoints(unit);\n  });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n\n  return lordsPoints + heroesPoints + corePoints + specialPoints + rarePoints;\n};\n","export const updateList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeList, updateList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const location = useLocation();\n  const { language } = useLanguage();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDelete = () => {\n    dispatch(deleteList(listId));\n    removeList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const lordsData = getMaxPercentData({\n    type: \"lords\",\n    armyPoints: list.points,\n    points: lordsPoints,\n  });\n  const heroesData = getMaxPercentData({\n    type: \"heroes\",\n    armyPoints: list.points,\n    points: heroesPoints,\n  });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: handleDelete,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.lords\" />\n            </h2>\n            <p className=\"editor__points\">\n              {lordsData.diff > 0 ? (\n                <>\n                  <strong>{lordsData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{lordsData.points - lordsPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.lords.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/lords/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/lords`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.heroes\" />\n            </h2>\n            <p className=\"editor__points\">\n              {heroesData.diff > 0 ? (\n                <>\n                  <strong>{heroesData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{heroesData.points - heroesPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.heroes.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/heroes/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/heroes`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n      </MainComponent>\n    </>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\n// import warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\n// import warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder</title>\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <ul>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <List\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                {/* {game === \"warhammer-fantasy\" && (\n                <img\n                  height=\"20\"\n                  src={warhammerFantasy}\n                  alt=\"Warhammer Fantasy\"\n                />\n              )}\n              {game === \"the-old-world\" && (\n                <img\n                  height=\"35\"\n                  src={warhammerTheOldWorld}\n                  alt=\"Warhammer: The Old World\"\n                />\n              )} */}\n                <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n              </List>\n            )\n          )}\n        </ul>\n        <Button centered to=\"/new\" icon=\"new-list\" spaceTop>\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Magische Gegenstände\",\n    name_en: \"Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  let magicPoints = 0;\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n\n  unit?.magic?.items &&\n    unit?.magic?.items.forEach((option) => {\n      magicPoints += option.points;\n    });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`]}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`]}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          !unit.command &&\n          !unit.equipment &&\n          !unit.mounts &&\n          !unit.magic &&\n          !unit.options && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.minimum && (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              className=\"input\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        )}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.command\" />\n            </h2>\n            {unit.command.map(\n              (\n                {\n                  name_de,\n                  name_en,\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                },\n                index\n              ) => {\n                let commandMagicPoints = 0;\n\n                if (unit.magic) {\n                  unit.magic.items\n                    .filter((item) => item.command === index)\n                    .forEach(({ points }) => {\n                      commandMagicPoints = commandMagicPoints + points;\n                    });\n                }\n\n                return (\n                  <Fragment key={id}>\n                    <div className=\"checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        {language === \"de\" ? name_de : name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                    {magic && active && (\n                      <List\n                        to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                        className=\"editor__list unit__link\"\n                        active={location.pathname.includes(\"magic\")}\n                      >\n                        <div className=\"editor__list-inner\">\n                          <b>\n                            {magic.types\n                              .map((type) => nameMap[type][`name_${language}`])\n                              .join(\", \")}\n                          </b>\n                          <i className=\"checkbox__points\">\n                            <span\n                              className={classNames(\n                                commandMagicPoints >\n                                  unit.command[index].magic.maxPoints &&\n                                  \"editor__error\"\n                              )}\n                            >\n                              {getUnitCommandPoints(\n                                unit?.magic?.items.filter(\n                                  ({ command }) => command === index\n                                )\n                              )}\n                            </span>{\" \"}\n                            / {unit.command[index].magic.maxPoints}{\" \"}\n                            <FormattedMessage id=\"app.points\" />\n                          </i>\n                          {commandMagicPoints >\n                            unit.command[index].magic.maxPoints && (\n                            <Icon\n                              symbol=\"error\"\n                              color=\"red\"\n                              className=\"unit__magic-icon\"\n                            />\n                          )}\n                        </div>\n                        {unit?.magic?.items && (\n                          <p>\n                            {unit.magic.items\n                              .filter(({ command }) => command === index)\n                              .map(({ name_de, name_en }) =>\n                                language === \"de\" ? name_de : name_en\n                              )\n                              .join(\", \")}\n                          </p>\n                        )}\n                      </List>\n                    )}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ name_de, name_en, points, perModel, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                name_de,\n                name_en,\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      {language === \"de\" ? name_de : name_en}:\n                      <i className=\"checkbox__points\">\n                        {`${points} ${intl.formatMessage({\n                          id: \"app.points\",\n                        })} ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      className=\"input\"\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(\n              ({ name_de, name_en, points, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`mounts-${id}`}\n                    name=\"mounts\"\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                      {\n                        id: \"app.points\",\n                      }\n                    )}`}</i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit?.magic?.maxPoints && (\n          <List\n            to={`/editor/${listId}/${type}/${unitId}/magic`}\n            className=\"editor__list unit__link\"\n            active={location.pathname.includes(\"magic\")}\n          >\n            <div className=\"editor__list-inner\">\n              <b className=\"unit__magic-headline\">\n                <FormattedMessage id=\"unit.magicItems\" />\n              </b>\n              <i className=\"checkbox__points\">\n                <span\n                  className={classNames(\n                    magicPoints > unit.magic.maxPoints && \"editor__error\"\n                  )}\n                >\n                  {magicPoints}\n                </span>{\" \"}\n                / {unit.magic.maxPoints} <FormattedMessage id=\"app.points\" />\n              </i>\n              {magicPoints > unit.magic.maxPoints && (\n                <Icon symbol=\"error\" color=\"red\" className=\"unit__magic-icon\" />\n              )}\n            </div>\n            {unit.magic.items && (\n              <p>\n                {unit.magic.items\n                  .map(({ name_de, name_en }) =>\n                    language === \"de\" ? name_de : name_en\n                  )\n                  .join(\", \")}\n              </p>\n            )}\n          </List>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateList as updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          className=\"input\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              twitter: (\n                <a\n                  href=\"https://twitter.com/_gscheid\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  @_gscheid\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nconst updateIds = (type) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        <ul>\n          {army[type].map(({ name_de, name_en, id, minimum, points }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum && `${minimum} `}\n                <b>{language === \"de\" ? name_de : name_en}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              twitter: (\n                <a\n                  href=\"https://twitter.com/_gscheid\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Twitter\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Export.css\";\n\nconst getUnitsString = ({ units, isShowList, intl, language }) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n\n      if (isShowList) {\n        return `${\n          unit.strength || unit.minimum\n            ? `${unit.strength || unit.minimum} `\n            : \"\"\n        }${unit[`name_${language}`]}\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n      }\n\n      return `${\n        unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n      }${unit[`name_${language}`]} [${getUnitPoints(unit)} ${intl.formatMessage(\n        {\n          id: \"app.points\",\n        }\n      )}]\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n    })\n    .join(\"\");\n};\n\nconst getListAsText = ({ list, isShowList, intl, language }) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n\n  if (isShowList) {\n    return `===\n${list.name}\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n      id: \"editor.lords\",\n    })} ++\n\n${getUnitsString({ units: list.lords, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.heroes\",\n    })} ++\n\n${getUnitsString({ units: list.heroes, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.core\",\n    })} ++\n\n${getUnitsString({ units: list.core, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.special\",\n    })} ++\n\n${getUnitsString({ units: list.special, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.rare\",\n    })} ++\n\n${getUnitsString({ units: list.rare, isShowList, intl, language })}\n\n---\nErstellt mit \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n  }\n\n  return `===\n${list.name} [${allPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}]\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n    id: \"editor.lords\",\n  })} [${lordsPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.lords, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.heroes\",\n  })} [${heroesPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.heroes, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.core\",\n  })} [${corePoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.core, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.special\",\n  })} [${specialPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.special, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.rare\",\n  })} [${rarePoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.rare, intl, language })}\n\n---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const { listId } = useParams();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({ list, isShowList, intl, language })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          centered\n          spaceTop\n          spaceBottom\n          onClick={copyText}\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__visible-description\">\n          <i>\n            (<FormattedMessage id=\"export.visibleListDescription\" />)\n          </i>\n        </p>\n\n        <textarea className=\"export__text\" value={listText} readOnly />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isDone, setIsDone] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  useEffect(() => {\n    if (list) {\n      document.title = `${list.name} - Old World Builder`;\n      window.onafterprint = () => {\n        document.title = \"Old World Builder\";\n        setIsDone(true);\n      };\n      window.print();\n    }\n  }, [list, language]);\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n\n  return (\n    <>\n      <Button\n        className=\"print-back\"\n        to={`/editor/${listId}`}\n        centered\n        icon=\"back\"\n        spaceTop\n        spaceBottom\n      >\n        <FormattedMessage id=\"header.back\" />\n      </Button>\n      {!isDone && (\n        <p className=\"print-info\">\n          <FormattedMessage id=\"print.printing\" />\n        </p>\n      )}\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          <span className=\"print__points\">\n            [{allPoints} <FormattedMessage id=\"app.points\" />]\n          </span>\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n        </p>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.lords\" />{\" \"}\n            <span className=\"print__points\">\n              [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.lords.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.heroes\" />{\" \"}\n            <span className=\"print__points\">\n              [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.heroes.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            <span className=\"print__points\">\n              [{corePoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            <span className=\"print__points\">\n              [{specialPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            <span className=\"print__points\">\n              [{rarePoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[language === \"de\" ? \"name_de\" : \"name_en\"] : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    localStorage.setItem(\"owb.lists\", localLists);\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(max-width: 1279px)\")\n      .addEventListener(\"change\", (event) => setIsMobile(event.matches));\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">{<Home isMobile />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n  },\n});\n"],"sourceRoot":""}
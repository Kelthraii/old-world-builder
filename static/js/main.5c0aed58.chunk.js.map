{"version":3,"sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","utils/fetcher.js","pages/magic/Magic.js","index.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","components/page/Page.js","components/select/Select.js","components/number-input/NumberInput.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","pages/new-list/NewList.js","utils/rules.js","components/list/List.js","utils/unit.js","utils/points.js","utils/list.js","pages/editor/Editor.js","utils/throttle.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","pages/home/Home.js","state/items.js","pages/magic/name-map.js","state/army.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","pages/add/Add.js","pages/help/Help.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","App.js","state/errors.js","store.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","Component","Link","buttonProps","aria-label","title","defaultProps","prevItemType","isFirstItemType","messages","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","mounts","mountsData","options","optionsData","Header","headline","subheadline","moreButton","isSection","hasPointsError","intl","useIntl","useLocation","useState","showMenu","setShowMenu","useEffect","pathname","formatMessage","callback","name","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","alt","src","usa","germany","Select","required","selected","defaultValue","name_de","name_en","optionValue","NumberInput","props","pattern","preventDefault","Number","max","min","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","magic","detachments","data","removeUnit","actions","duplicateList","NewList","isMobile","MainComponent","Fragment","dispatch","useDispatch","lists","useSelector","gameSystems","game","enabled","setGame","armies","army","setArmy","setName","setDescription","setPoints","redirect","setRedirect","handleSystemChange","scrollTo","onSubmit","newId","newList","lords","heroes","core","special","rare","newLists","JSON","stringify","createList","checked","height","warhammerFantasy","warhammerTheOldWorld","autoComplete","rules","maxPercent","minPercent","maxSame","maxSameLarge","getMaxPercentData","armyPoints","maxPoints","floor","overLimit","diff","ceil","List","active","getAllOptions","asString","noMagic","allCommand","allEquipment","allOptions","allStackableOptions","stackableCount","allMounts","allMagicItems","items","allDetachments","allOptionsArray","allOptionsString","join","getUnitPoints","unitPoints","option","stackable","perModel","detachment","getUnitMagicPoints","commandIndex","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","updatedList","updatedLists","parse","Editor","useParams","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","corePoints","specialPoints","rarePoints","lordsData","heroesData","coreData","minPoints","getMinPercentData","specialData","rareData","moreButtons","removeList","includes","armyIconMap","theEmpire","dwarfs","greenskins","Home","length","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","itemsSlice","setItems","nameMap","heirlooms","general","weapon","armor","talisman","banner","artifact","Magic","isLoading","setIsLoading","units","maxMagicPoints","handleMagicChange","magicItem","magicItems","allItems","item","conditional","conditionalItem","conditionalIndex","getCheckbox","itemGroup","isConditional","isChecked","types","confitionalItem","armySlice","Unit","coreUnit","magicPoints","handleDuplicate","handleRemove","maximum","commandMagicPoints","handleCommandChange","handleEquipmentChange","handleStackableOptionChange","handleOptionsChange","regimentalUnit","unitDetachments","push","handleAddDetachmentClick","handleDetachmentStrengthClick","handleDeleteDetachmentClick","handleMountsChange","EditList","updateLocalList","About","values","owb","twitter","href","rel","github","discord","gameIcons","license","Add","handleAdd","Help","getUnitsString","isShowList","Export","copied","setCopied","copyError","setCopyError","setIsShowList","listText","armyName","getListAsText","clipboard","writeText","readOnly","Print","isDone","setIsDone","onafterprint","print","DuplicateList","Rename","App","matchMedia","matches","setIsMobile","localLists","path","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","German","English","ReactDOM","render","store","StrictMode","getElementById","URL","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5c0aed58.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.220641f9.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n}) => {\n  const Component = to ? Link : \"button\";\n  const buttonProps = {};\n\n  if (!to) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"large\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nlet prevItemType, isFirstItemType;\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(true);\n  const { listId, type, unitId, command } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => list.army === id);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const maxMagicPoints =\n    (unit &&\n      unit.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.maxPoints) ||\n    (unit && unit.magic.maxPoints);\n  const handleMagicChange = (event, magicItem) => {\n    let magicItems;\n\n    if (event.target.checked) {\n      magicItems = [\n        ...(unit?.magic?.items || []),\n        {\n          ...magicItem,\n          command: Number(command),\n          id: event.target.value,\n        },\n      ];\n    } else {\n      magicItems = unit.magic.items.filter(\n        ({ id }) => id !== event.target.value\n      );\n    }\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n          setIsLoading(false);\n        },\n      });\n  }, [army, dispatch, list, setIsLoading, unit, language]);\n\n  if (isLoading) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({ unit, magicItem, itemGroup, isConditional }) => {\n    const isChecked = unit?.magic?.items\n      ? unit.magic.items.find(\n          ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n        ) || false\n      : false;\n\n    return (\n      <div\n        className={classNames(\n          \"checkbox\",\n          isConditional && \"checkbox--conditional\"\n        )}\n        key={magicItem.id}\n      >\n        <input\n          type=\"checkbox\"\n          id={`${itemGroup.id}-${magicItem.id}`}\n          value={`${itemGroup.id}-${magicItem.id}`}\n          onChange={(event) => handleMagicChange(event, magicItem)}\n          checked={isChecked}\n          className=\"checkbox__input\"\n        />\n        <label\n          htmlFor={`${itemGroup.id}-${magicItem.id}`}\n          className=\"checkbox__label\"\n        >\n          {language === \"de\" ? magicItem.name_de : magicItem.name_en}\n          <i className=\"checkbox__points\">{`${\n            magicItem.points\n          } ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}</i>\n        </label>\n      </div>\n    );\n  };\n  const hasPointsError = getUnitMagicPoints({ unit, command }) > maxMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"unit.magicItems\",\n          })}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  hasPointsError && \"magic__header-points--error\"\n                )}\n              >\n                {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n              </span>\n              {`/ ${maxMagicPoints} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={hasPointsError}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"unit.magicItems\",\n            })}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    hasPointsError && \"magic__header-points--error\"\n                  )}\n                >\n                  {`${getUnitMagicPoints({ unit, command })}`}&nbsp;\n                </span>\n                {`/ ${maxMagicPoints} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={hasPointsError}\n          />\n        )}\n        {items.map((itemGroup) => (\n          <Fragment key={itemGroup.name_de}>\n            <h2 className=\"unit__subline\">\n              {language === \"de\" ? itemGroup.name_de : itemGroup.name_en}\n            </h2>\n            {itemGroup.items.map((magicItem) => {\n              if (prevItemType !== magicItem.type) {\n                prevItemType = magicItem.type;\n                isFirstItemType = true;\n              } else {\n                isFirstItemType = false;\n              }\n\n              // Filter command magic items\n              if (\n                unit?.command &&\n                unit?.command[command] &&\n                !unit.command[command].magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              // Filter magic items\n              if (\n                unit?.magic?.types &&\n                !unit.magic.types.includes(magicItem.type)\n              ) {\n                return null;\n              }\n\n              const isChecked = unit?.magic?.items\n                ? unit.magic.items.find(\n                    ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                  ) || false\n                : false;\n\n              return (\n                <Fragment key={magicItem.name_de}>\n                  {isFirstItemType && (\n                    <h3 className=\"magic__type\">\n                      {nameMap[magicItem.type][`name_${language}`]}\n                    </h3>\n                  )}\n                  {getCheckbox({ unit, magicItem, itemGroup })}\n                  {magicItem.conditional && isChecked\n                    ? magicItem.conditional.map((confitionalItem) =>\n                        getCheckbox({\n                          unit,\n                          magicItem: confitionalItem,\n                          itemGroup,\n                          isConditional: true,\n                        })\n                      )\n                    : null}\n                </Fragment>\n              );\n            })}\n          </Fragment>\n        ))}\n      </MainComponent>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Army builder for Warhammer: The Old World and Warhammer Fantasy Battles.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{moreButton && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {moreButton ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul className=\"header__more\">\n          {moreButton.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n};\n","import React from \"react\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = () => {\n  return <Icon symbol=\"spinner\" className=\"spinner\" />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav>\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ name_de, name_en, id: optionValue }) => (\n        <option key={optionValue} value={optionValue}>\n          {language === \"de\" ? name_de : name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = (props) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) + 1,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    props.onChange({\n      target: {\n        value: Number(props.value) - 1,\n      },\n    });\n  };\n\n  return (\n    <div className=\"number-input\">\n      <input {...props} type=\"number\" pattern=\"[0-9]*\" />\n      <Button\n        onClick={handleOnUpClick}\n        type=\"secondary\"\n        icon=\"up\"\n        label={intl.formatMessage({ id: \"misc.increase\" })}\n        disabled={props.value >= props.max}\n        className=\"number-input__button number-input__button--up\"\n      />\n      <Button\n        onClick={handleOnDownClick}\n        type=\"secondary\"\n        icon=\"down\"\n        label={intl.formatMessage({ id: \"misc.decrease\" })}\n        disabled={props.value <= props.min}\n        className=\"number-input__button number-input__button--down\"\n      />\n    </div>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        name,\n        detachments,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        command,\n        mounts,\n        magic,\n        detachments,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(gameSystems.find((game) => game.enabled).id);\n  const [army, setArmy] = useState(\n    gameSystems.find((game) => game.enabled).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [redirect, setRedirect] = useState(null);\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      name: name,\n      description: description,\n      game: game,\n      points: points,\n      army: army,\n      lords: [],\n      heroes: [],\n      core: [],\n      special: [],\n      rare: [],\n      id: newId,\n    };\n    const newLists = [...lists, newList];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id, enabled }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === \"warhammer-fantasy\"}\n                className=\"radio__input\"\n                disabled={!enabled}\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={gameSystems.filter(({ id }) => id === game)[0].armies}\n            onChange={handleArmyChange}\n            selected=\"warhammer-fantasy\"\n            spaceBottom\n            required\n          />\n          <Button centered icon=\"add-list\" submitButton>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  lords: { maxPercent: 25 },\n  heroes: { maxPercent: 25 },\n  core: { minPercent: 25 },\n  special: {\n    maxPercent: 50,\n    maxSame: 3,\n    maxSameLarge: 6,\n  },\n  rare: {\n    maxPercent: 25,\n    maxSame: 2,\n    maxSameLarge: 4,\n  },\n};\n\nexport const getMaxPercentData = ({ type, armyPoints, points }) => {\n  const maxPercent = rules[type].maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({ type, armyPoints, points }) => {\n  const minPercent = rules[type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","export const getAllOptions = (\n  { mounts, equipment, options, command, magic, detachments },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = command\n    ? command\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_de, name_en, stackableCount }) =>\n            `${stackableCount} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_de, name_en }) => (language === \"de\" ? name_de : name_en))\n    : [];\n  const allMagicItems = magic?.items\n    ? magic.items.map(({ name_de, name_en }) =>\n        language === \"de\" ? name_de : name_en\n      )\n    : [];\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(\n          ({ name_de, name_en, strength }) =>\n            `${strength} ${language === \"de\" ? name_de : name_en}`\n        )\n    : [];\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allMagicItems : []),\n    ...allDetachments,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += unit.strength * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.magic?.items) {\n    unit.magic.items.forEach((option) => {\n      unitPoints += option.points;\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach((detachment) => {\n      unitPoints += detachment.strength * detachment.points;\n    });\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ unit, command }) => {\n  const commandIndex = Number(command);\n  let unitPoints = 0;\n\n  if (unit?.magic?.items) {\n    if (commandIndex >= 0) {\n      unit.magic.items.forEach((option) => {\n        if (option.command === commandIndex) {\n          unitPoints += option.points;\n        }\n      });\n    } else {\n      unit.magic.items.forEach((option) => {\n        unitPoints += option.points;\n      });\n    }\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type].forEach((unit) => {\n    points += getUnitPoints(unit);\n  });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n\n  return lordsPoints + heroesPoints + corePoints + specialPoints + rarePoints;\n};\n","export const updateList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeList, updateList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const location = useLocation();\n  const { language } = useLanguage();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDelete = () => {\n    dispatch(deleteList(listId));\n    removeList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const lordsData = getMaxPercentData({\n    type: \"lords\",\n    armyPoints: list.points,\n    points: lordsPoints,\n  });\n  const heroesData = getMaxPercentData({\n    type: \"heroes\",\n    armyPoints: list.points,\n    points: heroesPoints,\n  });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n  });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: handleDelete,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.lords\" />\n            </h2>\n            <p className=\"editor__points\">\n              {lordsData.diff > 0 ? (\n                <>\n                  <strong>{lordsData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{lordsData.points - lordsPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.lords.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/lords/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/lords`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.heroes\" />\n            </h2>\n            <p className=\"editor__points\">\n              {heroesData.diff > 0 ? (\n                <>\n                  <strong>{heroesData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{heroesData.points - heroesPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.heroes.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/heroes/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <b>{unit[`name_${language}`]}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/heroes`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  <span>\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                    <b>{unit[`name_${language}`]}</b>\n                  </span>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n      </MainComponent>\n    </>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\n// import warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\n// import warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder</title>\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <ul>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <List\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                {/* {game === \"warhammer-fantasy\" && (\n                <img\n                  height=\"20\"\n                  src={warhammerFantasy}\n                  alt=\"Warhammer Fantasy\"\n                />\n              )}\n              {game === \"the-old-world\" && (\n                <img\n                  height=\"35\"\n                  src={warhammerTheOldWorld}\n                  alt=\"Warhammer: The Old World\"\n                />\n              )} */}\n                <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n              </List>\n            )\n          )}\n        </ul>\n        <Button centered to=\"/new\" icon=\"new-list\" spaceTop>\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Magische Gegenstände\",\n    name_en: \"Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateList } from \"../../utils/list\";\nimport { updateIds, getRandomId } from \"../../utils/id\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachments =\n    army && army.core.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleAddDetachmentClick = ({ id }) => {\n    const detachment = detachments.find((detachment) => detachment.id === id);\n    const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n    unitDetachments.push({\n      id: `${id}.${getRandomId()}`,\n      name_de: detachment.name_de,\n      name_en: detachment.name_en,\n      points: detachment.points,\n      strength: 5,\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDeleteDetachmentClick = ({ id }) => {\n    const unitDetachments = [...unit.detachments].filter(\n      (detachment) => detachment.id !== id\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentStrengthClick = ({ id, strength }) => {\n    console.log(id, strength);\n    const unitDetachments = [...unit.detachments].map((detachment) =>\n      detachment.id === id ? { ...detachment, strength } : detachment\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n\n  unit?.magic?.items &&\n    unit?.magic?.items.forEach((option) => {\n      magicPoints += option.points;\n    });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`]}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`]}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          !unit.command &&\n          !unit.equipment &&\n          !unit.mounts &&\n          !unit.magic &&\n          !unit.options && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.minimum && (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              className=\"input\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        )}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.command\" />\n            </h2>\n            {unit.command.map(\n              (\n                {\n                  name_de,\n                  name_en,\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                },\n                index\n              ) => {\n                let commandMagicPoints = 0;\n\n                if (unit.magic) {\n                  unit.magic.items\n                    .filter((item) => item.command === index)\n                    .forEach(({ points }) => {\n                      commandMagicPoints = commandMagicPoints + points;\n                    });\n                }\n\n                return (\n                  <Fragment key={id}>\n                    <div className=\"checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        {language === \"de\" ? name_de : name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                    {magic && active && (\n                      <List\n                        to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                        className=\"editor__list unit__link\"\n                        active={location.pathname.includes(\"magic\")}\n                      >\n                        <div className=\"editor__list-inner\">\n                          <b>\n                            {magic.types\n                              .map((type) => nameMap[type][`name_${language}`])\n                              .join(\", \")}\n                          </b>\n                          <i className=\"checkbox__points\">\n                            <span\n                              className={classNames(\n                                commandMagicPoints >\n                                  unit.command[index].magic.maxPoints &&\n                                  \"editor__error\"\n                              )}\n                            >\n                              {getUnitCommandPoints(\n                                unit?.magic?.items.filter(\n                                  ({ command }) => command === index\n                                )\n                              )}\n                            </span>{\" \"}\n                            / {unit.command[index].magic.maxPoints}{\" \"}\n                            <FormattedMessage id=\"app.points\" />\n                          </i>\n                          {commandMagicPoints >\n                            unit.command[index].magic.maxPoints && (\n                            <Icon\n                              symbol=\"error\"\n                              color=\"red\"\n                              className=\"unit__magic-icon\"\n                            />\n                          )}\n                        </div>\n                        {unit?.magic?.items && (\n                          <p>\n                            {unit.magic.items\n                              .filter(({ command }) => command === index)\n                              .map(({ name_de, name_en }) =>\n                                language === \"de\" ? name_de : name_en\n                              )\n                              .join(\", \")}\n                          </p>\n                        )}\n                      </List>\n                    )}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ name_de, name_en, points, perModel, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                name_de,\n                name_en,\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      {language === \"de\" ? name_de : name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      {language === \"de\" ? name_de : name_en}:\n                      <i className=\"checkbox__points\">\n                        {`${points} ${intl.formatMessage({\n                          id: \"app.points\",\n                        })} ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      className=\"input\"\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_de, name_en, id }) => (\n              <>\n                <div className=\"list\" key={id}>\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {language === \"de\" ? name_de : name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(({ name_de, name_en, strength, id, points }) => (\n                      <div className=\"list\" key={id}>\n                        <div className=\"list__inner unit__detachments\">\n                          <NumberInput\n                            id={`strength-${id}`}\n                            className=\"input\"\n                            min={5}\n                            value={strength}\n                            onChange={(event) =>\n                              handleDetachmentStrengthClick({\n                                id,\n                                strength: event.target.value,\n                              })\n                            }\n                          />\n                          <span>\n                            <b>{language === \"de\" ? name_de : name_en}</b>\n                            <i>{`${getUnitPoints({\n                              strength,\n                              points,\n                            })} ${intl.formatMessage({\n                              id: \"app.points\",\n                            })}`}</i>\n                          </span>\n                          <Button\n                            onClick={() =>\n                              handleDeleteDetachmentClick({\n                                id,\n                              })\n                            }\n                            type=\"secondary\"\n                            icon=\"close\"\n                            label={intl.formatMessage({ id: \"misc.remove\" })}\n                            size=\"small\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n              </>\n            ))}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(\n              ({ name_de, name_en, points, id, active = false }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`mounts-${id}`}\n                    name=\"mounts\"\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                    {language === \"de\" ? name_de : name_en}\n                    <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                      {\n                        id: \"app.points\",\n                      }\n                    )}`}</i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit?.magic?.maxPoints && (\n          <List\n            to={`/editor/${listId}/${type}/${unitId}/magic`}\n            className=\"editor__list unit__link\"\n            active={location.pathname.includes(\"magic\")}\n          >\n            <div className=\"editor__list-inner\">\n              <b className=\"unit__magic-headline\">\n                <FormattedMessage id=\"unit.magicItems\" />\n              </b>\n              <i className=\"checkbox__points\">\n                <span\n                  className={classNames(\n                    magicPoints > unit.magic.maxPoints && \"editor__error\"\n                  )}\n                >\n                  {magicPoints}\n                </span>{\" \"}\n                / {unit.magic.maxPoints} <FormattedMessage id=\"app.points\" />\n              </i>\n              {magicPoints > unit.magic.maxPoints && (\n                <Icon symbol=\"error\" color=\"red\" className=\"unit__magic-icon\" />\n              )}\n            </div>\n            {unit.magic.items && (\n              <p>\n                {unit.magic.items\n                  .map(({ name_de, name_en }) =>\n                    language === \"de\" ? name_de : name_en\n                  )\n                  .join(\", \")}\n              </p>\n            )}\n          </List>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateList as updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          className=\"input\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              twitter: (\n                <a\n                  href=\"https://twitter.com/_gscheid\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  @_gscheid\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n            })\n          );\n        },\n      });\n  }, [list, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        <ul>\n          {army[type].map(({ name_de, name_en, id, minimum, points }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum && `${minimum} `}\n                <b>{language === \"de\" ? name_de : name_en}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              twitter: (\n                <a\n                  href=\"https://twitter.com/_gscheid\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Twitter\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Export.css\";\n\nconst getUnitsString = ({ units, isShowList, intl, language }) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n\n      if (isShowList) {\n        return `${\n          unit.strength || unit.minimum\n            ? `${unit.strength || unit.minimum} `\n            : \"\"\n        }${unit[`name_${language}`]}\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n      }\n\n      return `${\n        unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n      }${unit[`name_${language}`]} [${getUnitPoints(unit)} ${intl.formatMessage(\n        {\n          id: \"app.points\",\n        }\n      )}]\n${allOptions ? `- ${allOptions.split(\", \").join(\"\\n- \")}\\n` : \"\"}\n`;\n    })\n    .join(\"\");\n};\n\nconst getListAsText = ({ list, isShowList, intl, language }) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n\n  if (isShowList) {\n    return `===\n${list.name}\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n      id: \"editor.lords\",\n    })} ++\n\n${getUnitsString({ units: list.lords, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.heroes\",\n    })} ++\n\n${getUnitsString({ units: list.heroes, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.core\",\n    })} ++\n\n${getUnitsString({ units: list.core, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.special\",\n    })} ++\n\n${getUnitsString({ units: list.special, isShowList, intl, language })}\n++ ${intl.formatMessage({\n      id: \"editor.rare\",\n    })} ++\n\n${getUnitsString({ units: list.rare, isShowList, intl, language })}\n\n---\nErstellt mit \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n  }\n\n  return `===\n${list.name} [${allPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}]\n${game.name}, ${armyName}\n===\n\n++ ${intl.formatMessage({\n    id: \"editor.lords\",\n  })} [${lordsPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.lords, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.heroes\",\n  })} [${heroesPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.heroes, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.core\",\n  })} [${corePoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.core, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.special\",\n  })} [${specialPoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.special, intl, language })}\n++ ${intl.formatMessage({\n    id: \"editor.rare\",\n  })} [${rarePoints} ${intl.formatMessage({\n    id: \"app.points\",\n  })}] ++\n\n${getUnitsString({ units: list.rare, intl, language })}\n\n---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const { listId } = useParams();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({ list, isShowList, intl, language })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          centered\n          spaceTop\n          spaceBottom\n          onClick={copyText}\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__visible-description\">\n          <i>\n            (<FormattedMessage id=\"export.visibleListDescription\" />)\n          </i>\n        </p>\n\n        <textarea className=\"export__text\" value={listText} readOnly />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isDone, setIsDone] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  useEffect(() => {\n    if (list) {\n      document.title = `${list.name} - Old World Builder`;\n      window.onafterprint = () => {\n        document.title = \"Old World Builder\";\n        setIsDone(true);\n      };\n      window.print();\n    }\n  }, [list, language]);\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n\n  return (\n    <>\n      <Button\n        className=\"print-back\"\n        to={`/editor/${listId}`}\n        centered\n        icon=\"back\"\n        spaceTop\n        spaceBottom\n      >\n        <FormattedMessage id=\"header.back\" />\n      </Button>\n      {!isDone && (\n        <p className=\"print-info\">\n          <FormattedMessage id=\"print.printing\" />\n        </p>\n      )}\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          <span className=\"print__points\">\n            [{allPoints} <FormattedMessage id=\"app.points\" />]\n          </span>\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n        </p>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.lords\" />{\" \"}\n            <span className=\"print__points\">\n              [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.lords.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.heroes\" />{\" \"}\n            <span className=\"print__points\">\n              [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.heroes.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            <span className=\"print__points\">\n              [{corePoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            <span className=\"print__points\">\n              [{specialPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            <span className=\"print__points\">\n              [{rarePoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  <span className=\"print__strength\">\n                    {(unit.strength || unit.minimum) &&\n                      `${unit.strength || unit.minimum} `}\n                  </span>\n                  {language === \"de\" ? unit.name_de : unit.name_en}\n                  <span className=\"print__points\">\n                    [{getUnitPoints(unit)} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                </h3>\n                {getAllOptions(unit)}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            className=\"input\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[language === \"de\" ? \"name_de\" : \"name_en\"] : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    localStorage.setItem(\"owb.lists\", localLists);\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(max-width: 1279px)\")\n      .addEventListener(\"change\", (event) => setIsMobile(event.matches));\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">{<Home isMobile />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n  },\n});\n"],"sourceRoot":""}
{"version":3,"file":"static/js/main.62b3b045.chunk.js","sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","assets/spain.svg","assets/france.svg","assets/italy.svg","components/page/Page.js","components/select/Select.js","components/error-message/ErrorMessage.js","components/number-input/NumberInput.js","utils/fetcher.js","utils/collection.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","utils/points.js","components/dialog/Dialog.js","utils/string.js","state/rules-index.js","components/rules-index/rules-map.js","components/rules-index/RulesIndex.js","state/items.js","utils/list.js","utils/magic-item-limitations.js","pages/magic/name-map.js","pages/magic/Magic.js","pages/new-list/NewList.js","utils/rules.js","components/list/ListItem.js","components/list/OrderableList.js","utils/unit.js","pages/editor/Editor.js","utils/throttle.js","state/army.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","assets/forg3d.jpg","pages/home/Home.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","utils/script.js","pages/add/Add.js","pages/help/Help.js","components/expandable/Expandable.js","pages/export/get-list-as-text.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","pages/datasets/Entity.js","pages/datasets/UnitPreview.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","pages/import/Import.js","App.js","state/errors.js","store.js","index.js"],"sourceRoot":"","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.5a7056f3.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  href,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n  download,\n}) => {\n  const Component = to || href ? (to ? Link : \"a\") : \"button\";\n  const buttonProps = {};\n\n  if (!to && !href) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      href={href}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      download={download}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n  download: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"large\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      armor: unit.armor\n        ? unit.armor.map((armorData, index) => ({\n            ...armorData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{navigation && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = ({ className }) => {\n  return <Icon symbol=\"spinner\" className={classNames(\"spinner\", className)} />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","export default __webpack_public_path__ + \"static/media/spain.fe46f7a7.svg\";","export default __webpack_public_path__ + \"static/media/france.bf26b172.svg\";","export default __webpack_public_path__ + \"static/media/italy.bb2033dc.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\nimport spain from \"../../assets/spain.svg\";\nimport france from \"../../assets/france.svg\";\nimport italy from \"../../assets/italy.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"french\"\n                name=\"languages\"\n                value=\"fr\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"fr\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"french\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={france}\n                  className=\"footer__language-icon\"\n                />\n                Français\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"spanish\"\n                name=\"languages\"\n                value=\"es\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"es\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"spanish\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={spain}\n                  className=\"footer__language-icon\"\n                />\n                Español\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"italian\"\n                name=\"languages\"\n                value=\"it\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"it\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"italian\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={italy}\n                  className=\"footer__language-icon\"\n                />\n                Italiano\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ id: optionValue, ...option }) => (\n        <option key={optionValue} value={optionValue}>\n          {option[`name_${language}`] || option.name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./ErrorMessage.css\";\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <p className=\"error-message\">\n      <Icon symbol=\"error\" color=\"red\" className=\"error-message__icon\" />\n      {children || <FormattedMessage id=\"misc.minError\" />}\n    </p>\n  );\n};\n\nErrorMessage.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { ErrorMessage } from \"../error-message\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = ({\n  onChange,\n  value,\n  id,\n  max,\n  min,\n  readOnly,\n  required,\n  noError,\n  interval,\n}) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) + (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) - (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnChange = (event) => {\n    let newValue = Number(event.target.value);\n    const maxValue = max > 0 ? max : 100000;\n\n    if (newValue > maxValue) {\n      newValue = maxValue;\n    }\n\n    onChange({\n      target: {\n        value: newValue,\n        id,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          min={0}\n          max={max > 0 ? max : 100000}\n          value={value}\n          onChange={handleOnChange}\n          id={id}\n          readOnly={readOnly}\n          required={required}\n          className=\"input\"\n        />\n        <Button\n          onClick={handleOnUpClick}\n          type=\"secondary\"\n          icon=\"up\"\n          label={intl.formatMessage({ id: \"misc.increase\" })}\n          disabled={value >= max && max !== 0}\n          className=\"number-input__button number-input__button--up\"\n        />\n        <Button\n          onClick={handleOnDownClick}\n          type=\"secondary\"\n          icon=\"down\"\n          label={intl.formatMessage({ id: \"misc.decrease\" })}\n          disabled={value <= min}\n          className=\"number-input__button number-input__button--down\"\n        />\n      </div>\n      {value < min && !noError && (\n        <ErrorMessage>\n          <FormattedMessage\n            id=\"misc.minError\"\n            values={{\n              min,\n            }}\n          />\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number,\n  id: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  noError: PropTypes.bool,\n};\n\nNumberInput.defaultProps = {\n  min: 0,\n  max: 100000,\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","/**\n * Swaps two elements in a list by their indexes.\n *\n * @template T\n * @param {T[]} list\n * @param {number} index1\n * @param {number} index2\n * @returns {T[]}\n */\nexport const swap = (list, index1, index2) => {\n  const result = [...list];\n  const [removed] = result.splice(index1, 1);\n  result.splice(index2, 0, removed);\n\n  return result;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\nimport { swap } from \"../utils/collection\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    moveUnit: (state, { payload }) => {\n      const { listId, type, sourceIndex, destinationIndex } = payload;\n\n      return state.map((list) => {\n        if (listId === list.id) {\n          return {\n            ...list,\n            [type]: swap([...list[type]], sourceIndex, destinationIndex),\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        name,\n        detachments,\n        activeLore,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        detachments,\n        activeLore,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  moveUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.armor) {\n    unit.armor.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n      if (option.active && option.magic && option.magic?.selected?.length) {\n        option.magic.selected.forEach((selected) => {\n          unitPoints += selected.amount\n            ? selected.amount * selected.points\n            : selected.points;\n        });\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.items && unit?.items.length) {\n    unit.items.forEach((item) => {\n      (item.selected || []).forEach((selected) => {\n        unitPoints += selected.amount\n          ? selected.amount * selected.points\n          : selected.points;\n      });\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach(\n      ({ strength, points, equipment, armor, options }) => {\n        unitPoints += strength * points;\n\n        if (equipment && equipment.length) {\n          equipment.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (armor && armor.length) {\n          armor.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (options && options.length) {\n          options.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n      }\n    );\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ selected }) => {\n  let unitPoints = 0;\n\n  selected &&\n    selected.forEach((option) => {\n      unitPoints += option.amount\n        ? option.amount * option.points\n        : option.points;\n    });\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./Dialog.css\";\n\nexport const Dialog = ({ open, onClose, children }) => {\n  const dialogRef = useRef(null);\n  const intl = useIntl();\n  const handleClose = () => {\n    dialogRef?.current?.close && dialogRef.current.close();\n    onClose();\n  };\n  useEffect(() => {\n    if (open) {\n      dialogRef?.current?.showModal && dialogRef.current.showModal();\n    } else {\n      dialogRef?.current?.close && dialogRef.current.close();\n    }\n  }, [open]);\n\n  return (\n    <dialog className=\"dialog\" ref={dialogRef} onClose={handleClose}>\n      <Button\n        className=\"dialog__close\"\n        icon=\"close\"\n        type=\"text\"\n        label={intl.formatMessage({ id: \"header.close\" })}\n        color=\"dark\"\n        onClick={handleClose}\n      />\n      {children}\n    </dialog>\n  );\n};\n\nDialog.propTypes = {\n  open: PropTypes.bool,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","export const normalizeRuleName = (string = \"\") => {\n  return string\n    .toLowerCase()\n    .replace(/ *\\([^)]*\\) */g, \"\")\n    .replace(/\\*/g, \"\")\n    .replace(/“/g, '\"')\n    .replace(/”/g, '\"');\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const rulesIndexSlice = createSlice({\n  name: \"rulesIndex\",\n  initialState: {\n    activeRule: \"\",\n    open: false,\n  },\n  reducers: {\n    openRulesIndex: (state, { payload }) => {\n      return {\n        ...state,\n        activeRule: payload.activeRule,\n        open: true,\n      };\n    },\n    closeRulesIndex: (state) => {\n      return { ...state, activeRule: \"\", open: false };\n    },\n  },\n});\n\nexport const { openRulesIndex, closeRulesIndex } = rulesIndexSlice.actions;\n\nexport default rulesIndexSlice.reducer;\n","const rulesIndexExport = {\n  \"bellowers & musicians\": \"special-rules/bellowers-and-musicians\",\n  \"infernal engineer\": \"special-rules/infernal-engineer\",\n  \"my will be done\": \"special-rules/my-will-be-done\",\n  \"mob rule\": \"special-rules/mob-rule\",\n  \"goad beast\": \"special-rules/goad-beast\",\n  \"eshin infiltration\": \"special-rules/eshin-infiltration\",\n  \"daemonic charge\": \"special-rules/daemonic-charge\",\n  '\"hold the line!\"': \"special-rules/hold-the-line\",\n  \"the arrow of kurnous\": \"special-rules/the-arrow-of-kurnous\",\n  brayhorn: \"special-rules/brayhorn\",\n  \"arcane shield\": \"special-rules/arcane-shield\",\n  \"ancestral grudge\": \"special-rules/ancestral-grudge\",\n  \"aura of the lady\": \"special-rules/aura-of-the-lady\",\n  \"rampant mutation\": \"special-rules/rampant-mutation\",\n  \"horn of isha\": \"special-rules/horn-of-isha\",\n  \"troubadour of loec\": \"special-rules/troubadour-of-loec\",\n  \"banner of the king\": \"special-rules/banner-of-the-king\",\n  \"gifts of khaine\": \"special-rules/gifts-of-khaine\",\n  \"bull charge\": \"special-rules/bull-charge\",\n  guardians: \"special-rules/guardians\",\n  \"ogre charge\": \"special-rules/ogre-charge\",\n  oathstone: \"special-rules/oathstone\",\n  \"naval discipline\": \"special-rules/naval-discipline\",\n  \"master of battle\": \"special-rules/master-of-battle\",\n  \"big stabbas\": \"special-rules/big-stabbas\",\n  \"shield of the lady\": \"special-rules/shield-of-the-lady\",\n  \"sorcerer's curse\": \"special-rules/sorcerers-curse\",\n  \"hidden skaven\": \"special-rules/hidden-skaven\",\n  \"slaughterer's call\": \"special-rules/slaughterers-call\",\n  gorefeast: \"special-rules/gorefeast\",\n  \"sworn protector\": \"special-rules/sworn-protector\",\n  \"hidden dark elves\": \"special-rules/hidden-dark-elves\",\n  \"bestial charge\": \"special-rules/bestial-charge\",\n  \"totem of endless bloodletting\":\n    \"special-rules/totem-of-endless-bloodletting\",\n  \"peasant's duty\": \"special-rules/peasants-duty\",\n  \"cloud of flies\": \"special-rules/cloud-of-flies\",\n  \"hawk-eyed archer\": \"special-rules/hawk-eyed-archer\",\n  \"skulking menace\": \"special-rules/skulking-menace\",\n  \"borne aloft\": \"special-rules/borne-aloft\",\n  \"chracian warriors\": \"special-rules/chracian-warriors\",\n  \"butcher's cauldron\": \"special-rules/butchers-cauldron\",\n  \"suffer not...\": \"special-rules/suffer-not\",\n  \"skirmish screen\": \"special-rules/skirmish-screen\",\n  \"quell panic\": \"special-rules/quell-panic\",\n  \"spawn of khorne\": \"special-rules/spawn-of-khorne\",\n  \"crown of antlers\": \"special-rules/crown-of-antlers\",\n  \"king's guard\": \"special-rules/kings-guard\",\n  \"storm call\": \"special-rules/storm-call\",\n  \"running with the pack\": \"special-rules/running-with-the-pack\",\n  \"prayers of sigmar\": \"special-rules/prayers-of-sigmar\",\n  \"spawn of nurgle\": \"special-rules/spawn-of-nurgle\",\n  \"deploying weapon teams\": \"special-rules/deploying-weapon-teams\",\n  \"arise!\": \"special-rules/arise\",\n  \"beguiling aura\": \"special-rules/beguiling-aura\",\n  netters: \"special-rules/netters\",\n  \"forbidden poisons\": \"special-rules/forbidden-poisons\",\n  \"brazen wheels\": \"special-rules/brazen-wheels\",\n  \"toad rage\": \"special-rules/toad-rage\",\n  \"ancestral shield\": \"special-rules/ancestral-shield\",\n  \"carriage hauler\": \"special-rules/carriage-hauler\",\n  \"blessings of the volcano god\": \"special-rules/blessings-of-the-volcano-god\",\n  \"maddening aura\": \"special-rules/maddening-aura\",\n  \"prayers of ulric\": \"special-rules/prayers-of-ulric\",\n  \"martial prowess\": \"special-rules/martial-prowess\",\n  \"weapon team leadership\": \"special-rules/weapon-team-leadership\",\n  \"strike the runes\": \"special-rules/strike-the-runes\",\n  \"dance of death\": \"special-rules/dance-of-death\",\n  \"blood frenzy\": \"special-rules/blood-frenzy\",\n  \"grail monk\": \"special-rules/grail-monk\",\n  \"from beneath the sands\": \"special-rules/from-beneath-the-sands\",\n  \"release the fanatics!\": \"special-rules/release-the-fanatics\",\n  \"attention seeker\": \"special-rules/attention-seeker\",\n  \"spawn of slaanesh\": \"special-rules/spawn-of-slaanesh\",\n  forgefire: \"special-rules/forgefire\",\n  \"grail reliquae\": \"special-rules/grail-reliquae\",\n  \"squigs go wild\": \"special-rules/squigs-go-wild\",\n  \"targeting weapon teams\": \"special-rules/targeting-weapon-teams\",\n  \"traps & snares\": \"special-rules/traps-and-snares\",\n  \"engine of the gods\": \"special-rules/engine-of-the-gods\",\n  \"spawn of tzeentch\": \"special-rules/spawn-of-tzeentch\",\n  \"cursed coven\": \"special-rules/cursed-coven\",\n  \"spurting bile blood\": \"special-rules/spurting-bile-blood\",\n  \"slime trail\": \"special-rules/slime-trail\",\n  \"the hierophant\": \"special-rules/the-hierophant\",\n  \"lumbering destruction\": \"special-rules/lumbering-destruction\",\n  \"deflect shots\": \"special-rules/deflect-shots\",\n  \"clouds of soot & smoke\": \"special-rules/clouds-of-soot-and-smoke\",\n  \"guardians of the wildwood\": \"special-rules/guardians-of-the-wildwood\",\n  \"master of ballistics\": \"special-rules/master-of-ballistics\",\n  pavise: \"special-rules/pavise\",\n  \"eternal taskmaster\": \"special-rules/eternal-taskmaster\",\n  \"scintillating sorcery\": \"special-rules/scintillating-sorcery\",\n  \"warriors of the white tower\": \"special-rules/warriors-of-the-white-tower\",\n  handler: \"special-rules/handler\",\n  \"ker-splat\": \"special-rules/ker-splat\",\n  \"retinue of the saints\": \"special-rules/retinue-of-the-saints\",\n  \"arcane configuration\": \"special-rules/arcane-configuration\",\n  \"ravenous hunger\": \"special-rules/ravenous-hunger\",\n  \"stony stare\": \"special-rules/stony-stare\",\n  \"dances of loec\": \"special-rules/dances-of-loec\",\n  \"slayer of daemons\": \"special-rules/slayer-of-daemons\",\n  cannonade: \"special-rules/cannonade\",\n  \"dark runes\": \"special-rules/dark-runes\",\n  \"slayer of dragons\": \"special-rules/slayer-of-dragons\",\n  ghostsight: \"special-rules/ghostsight\",\n  \"largely insignificant\": \"special-rules/largely-insignificant\",\n  \"wilful beast\": \"special-rules/wilful-beast\",\n  \"witness to destiny\": \"special-rules/witness-to-destiny\",\n  \"slashing attack\": \"special-rules/slashing-attack\",\n  \"blessings of khaine\": \"special-rules/blessings-of-khaine\",\n  \"leader of the pack\": \"special-rules/leader-of-the-pack\",\n  \"fanatical zeal\": \"special-rules/fanatical-zeal\",\n  \"cloud of dust\": \"special-rules/cloud-of-dust\",\n  ambushers: \"special-rules/ambushers\",\n  \"daughters of eternity\": \"special-rules/daughters-of-eternity\",\n  \"spiked ball & chains\": \"special-rules/spiked-ball-and-chains\",\n  skullcracker: \"special-rules/skullcracker\",\n  \"burning alignment\": \"special-rules/burning-alignment\",\n  \"living saints\": \"special-rules/living-saints\",\n  \"abyssal howl\": \"special-rules/abyssal-howl\",\n  \"chaos armour daemons of chaos\":\n    \"special-rules/chaos-armour-daemons-of-chaos\",\n  \"soul-eater\": \"special-rules/soul-eater\",\n  \"two-headed dragon\": \"special-rules/two-headed-dragon\",\n  \"impervious defence\": \"special-rules/impervious-defence\",\n  \"born of fire\": \"special-rules/born-of-fire\",\n  \"unstoppable assault\": \"special-rules/unstoppable-assault\",\n  \"warriors of nagarythe\": \"special-rules/warriors-of-nagarythe\",\n  \"giant attacks\": \"special-rules/giant-attacks\",\n  \"artillery master\": \"special-rules/artillery-master\",\n  \"look-out gnoblar\": \"special-rules/look-out-gnoblar\",\n  \"safe from harm\": \"special-rules/safe-from-harm\",\n  \"dispersed formation\": \"special-rules/dispersed-formation\",\n  \"deepwood coven\": \"special-rules/deepwood-coven\",\n  \"armour bane\": \"special-rules/armour-bane\",\n  \"feel no pain\": \"special-rules/feel-no-pain\",\n  \"eternal hatred\": \"special-rules/eternal-hatred\",\n  \"inner circle\": \"special-rules/inner-circle\",\n  \"soul reaper\": \"special-rules/soul-reaper\",\n  \"blessings of the horned rat\": \"special-rules/blessings-of-the-horned-rat\",\n  \"ark of sotek\": \"special-rules/ark-of-sotek\",\n  daemonic: \"special-rules/daemonic\",\n  \"elven reflexes\": \"special-rules/elven-reflexes\",\n  \"caged fury\": \"special-rules/caged-fury\",\n  \"swallow whole\": \"special-rules/swallow-whole\",\n  entrenchment: \"special-rules/entrenchment\",\n  \"mournfang charge\": \"special-rules/mournfang-charge\",\n  \"sons of caledor\": \"special-rules/sons-of-caledor\",\n  \"pick up and...\": \"special-rules/pick-up-and\",\n  \"blessings of the lady\": \"special-rules/blessings-of-the-lady\",\n  \"armoured hide\": \"special-rules/armoured-hide\",\n  \"sorcerous miasma\": \"special-rules/sorcerous-miasma\",\n  \"screaming skulls\": \"special-rules/screaming-skulls\",\n  \"from the ashes\": \"special-rules/from-the-ashes\",\n  '\"stand back chief\"': \"special-rules/stand-back-chief\",\n  \"holy fervour\": \"special-rules/holy-fervour\",\n  quake: \"special-rules/quake\",\n  \"hekarti's blessing\": \"special-rules/hekartis-blessing\",\n  bully: \"special-rules/bully\",\n  \"talismanic tattoos\": \"special-rules/talismanic-tattoos\",\n  \"finest warhorses\": \"special-rules/finest-warhorses\",\n  \"slithering serpents\": \"special-rules/slithering-serpents\",\n  \"breath weapon\": \"special-rules/breath-weapon\",\n  \"blood greed\": \"special-rules/blood-greed\",\n  \"daemonic instability\": \"special-rules/daemonic-instability\",\n  \"tolling the bell\": \"special-rules/tolling-the-bell\",\n  \"numbing chill\": \"special-rules/numbing-chill\",\n  \"hellcannon misfire table\": \"special-rules/hellcannon-misfire-table\",\n  \"symbol of might\": \"special-rules/symbol-of-might\",\n  \"great censer\": \"special-rules/great-censer\",\n  \"spawn of sotek\": \"special-rules/spawn-of-sotek\",\n  murderous: \"special-rules/murderous\",\n  \"daemonic locus\": \"special-rules/daemonic-locus\",\n  \"chaos armour warriors of chaos\":\n    \"special-rules/chaos-armour-warriors-of-chaos\",\n  \"slow reload\": \"special-rules/slow-reload\",\n  \"wake of fire\": \"special-rules/wake-of-fire\",\n  \"tree spirit\": \"special-rules/tree-spirit\",\n  \"lance formation\": \"special-rules/lance-formation\",\n  venerable: \"special-rules/venerable\",\n  \"skulls of the foe\": \"special-rules/skulls-of-the-foe\",\n  \"blood rage\": \"special-rules/blood-rage\",\n  \"big 'uns\": \"special-rules/big-uns\",\n  \"chariot runners\": \"special-rules/chariot-runners\",\n  \"crushing bulk\": \"special-rules/crushing-bulk\",\n  backstab: \"special-rules/backstab\",\n  choppas: \"special-rules/choppas\",\n  \"close order\": \"special-rules/close-order\",\n  \"witch bane\": \"special-rules/witch-bane\",\n  peasantry: \"special-rules/peasantry\",\n  \"tree whack\": \"special-rules/tree-whack\",\n  \"bull-gors\": \"special-rules/bull-gors\",\n  \"infernal favour\": \"special-rules/infernal-favour\",\n  \"blizzard aura\": \"special-rules/blizzard-aura\",\n  \"sea dragon cloak\": \"special-rules/sea-dragon-cloak\",\n  \"solar engine\": \"special-rules/solar-engine\",\n  \"covenant of power\": \"special-rules/covenant-of-power\",\n  \"stone skeleton\": \"special-rules/stone-skeleton\",\n  \"royal guard\": \"special-rules/royal-guard\",\n  \"ensorcelled weapons\": \"special-rules/ensorcelled-weapons\",\n  \"stoic defenders\": \"special-rules/stoic-defenders\",\n  \"da boyz\": \"special-rules/da-boyz\",\n  \"solar radiance\": \"special-rules/solar-radiance\",\n  \"arrows of isha\": \"special-rules/arrows-of-isha\",\n  \"the knight's vow\": \"special-rules/the-knights-vow\",\n  \"thunderous charge\": \"special-rules/thunderous-charge\",\n  \"blackshard armour\": \"special-rules/blackshard-armour\",\n  drunken: \"special-rules/drunken\",\n  \"zzzzap!\": \"special-rules/zzzzap\",\n  \"counter charge\": \"special-rules/counter-charge\",\n  \"gaze of the gods\": \"special-rules/gaze-of-the-gods\",\n  \"daemonic alignment\": \"special-rules/daemonic-alignment\",\n  \"woodland ambush\": \"special-rules/woodland-ambush\",\n  \"grinding wheels\": \"special-rules/grinding-wheels\",\n  \"immovable object\": \"special-rules/immovable-object\",\n  \"beam of chotec\": \"special-rules/beam-of-chotec\",\n  \"steam power\": \"special-rules/steam-power\",\n  \"the questing vow\": \"special-rules/the-questing-vow\",\n  \"blessings of asuryan\": \"special-rules/blessings-of-asuryan\",\n  cumbersome: \"special-rules/cumbersome\",\n  \"runes of protection\": \"special-rules/runes-of-protection\",\n  \"abominable attacks\": \"special-rules/abominable-attacks\",\n  \"unbound spirits\": \"special-rules/unbound-spirits\",\n  \"fear of elves\": \"special-rules/fear-of-elves\",\n  \"blazing body\": \"special-rules/blazing-body\",\n  \"marks of chaos\": \"special-rules/marks-of-chaos\",\n  \"foe render\": \"special-rules/foe-render\",\n  \"daemon of khorne\": \"special-rules/daemon-of-khorne\",\n  \"the grail vow\": \"special-rules/the-grail-vow\",\n  \"mark of chaos undivided\": \"special-rules/mark-of-chaos-undivided\",\n  \"primal fury\": \"special-rules/primal-fury\",\n  \"daemon of nurgle\": \"special-rules/daemon-of-nurgle\",\n  \"vortex of souls\": \"special-rules/vortex-of-souls\",\n  detachment: \"special-rules/detachment\",\n  \"dragon armour\": \"special-rules/dragon-armour\",\n  feed: \"special-rules/feed\",\n  temperamental: \"special-rules/temperamental\",\n  \"primeval roar\": \"special-rules/primeval-roar\",\n  \"ignore goblin panic\": \"special-rules/ignore-goblin-panic\",\n  hellbound: \"special-rules/hellbound\",\n  \"runes of warding\": \"special-rules/runes-of-warding\",\n  \"avalanche of flesh\": \"special-rules/avalanche-of-flesh\",\n  stampede: \"special-rules/stampede\",\n  '\"fight me!\"': \"special-rules/fight-me\",\n  \"ignore panic\": \"special-rules/ignore-panic\",\n  \"dragged along\": \"special-rules/dragged-along\",\n  \"daemon of slaanesh\": \"special-rules/daemon-of-slaanesh\",\n  \"arrows of asaph\": \"special-rules/arrows-of-asaph\",\n  \"arcane vassal\": \"special-rules/arcane-vassal\",\n  \"mark of khorne\": \"special-rules/mark-of-khorne\",\n  \"razor tusks\": \"special-rules/razor-tusks\",\n  \"two heads\": \"special-rules/two-heads\",\n  \"forming the lance\": \"special-rules/forming-the-lance\",\n  \"daemon of tzeentch\": \"special-rules/daemon-of-tzeentch\",\n  \"manoeuvring a lance\": \"special-rules/manoeuvring-a-lance\",\n  helblaster: \"special-rules/helblaster\",\n  \"ithilmar armour\": \"special-rules/ithilmar-armour-ithilmar-barding\",\n  \"ithilmar barding\": \"special-rules/ithilmar-armour-ithilmar-barding\",\n  \"the quickening storm\": \"special-rules/the-quickening-storm\",\n  \"mark of nurgle\": \"special-rules/mark-of-nurgle\",\n  \"cleaving blow\": \"special-rules/cleaving-blow\",\n  aquatic: \"special-rules/aquatic\",\n  slayer: \"special-rules/slayer\",\n  \"quell impetuosity\": \"special-rules/quell-impetuosity\",\n  drilled: \"special-rules/drilled\",\n  \"too horrible to die\": \"special-rules/too-horrible-to-die\",\n  \"curse of the necropolis\": \"special-rules/curse-of-the-necropolis\",\n  ethereal: \"special-rules/ethereal\",\n  \"mark of slaanesh\": \"special-rules/mark-of-slaanesh\",\n  \"the lance in combat\": \"special-rules/the-lance-in-combat\",\n  helstorm: \"special-rules/helstorm\",\n  \"ithilmar weapons\": \"special-rules/ithilmar-weapons\",\n  \"lightning strike\": \"special-rules/lightning-strike\",\n  \"dive bomb\": \"special-rules/dive-bomb\",\n  \"tusker charge\": \"special-rules/tusker-charge\",\n  \"beast handlers\": \"special-rules/beast-handlers\",\n  \"lileath's blessing\": \"special-rules/lileaths-blessing\",\n  \"blunting the lance\": \"special-rules/blunting-the-lance\",\n  \"waaagh!\": \"special-rules/waaagh\",\n  \"bombing run\": \"special-rules/bombing-run\",\n  \"dry as dust\": \"special-rules/dry-as-dust\",\n  \"mark of tzeentch\": \"special-rules/mark-of-tzeentch\",\n  \"cold blooded\": \"special-rules/cold-blooded\",\n  \"poisoned wind\": \"special-rules/poisoned-wind\",\n  evasive: \"special-rules/evasive\",\n  deathblow: \"special-rules/deathblow\",\n  \"casualty removal\": \"special-rules/casualty-removal\",\n  warpaint: \"special-rules/warpaint\",\n  \"extra attacks\": \"special-rules/extra-attacks\",\n  \"scurry away\": \"special-rules/scurry-away\",\n  indomitable: \"special-rules/indomitable-x\",\n  \"drop rocks\": \"special-rules/drop-rocks\",\n  \"lion cloak\": \"special-rules/lion-cloak\",\n  \"obsidian blades\": \"special-rules/obsidian-blades\",\n  khopesh: \"special-rules/khopesh\",\n  \"valour of ages\": \"special-rules/valour-of-ages\",\n  \"dwarf crafted\": \"special-rules/dwarf-crafted\",\n  \"scurrying masses\": \"special-rules/scurrying-masses\",\n  \"fast cavalry\": \"special-rules/fast-cavalry\",\n  \"lance formations & skirmishers\":\n    \"special-rules/lance-formations-and-skirmishers\",\n  \"gromril armour\": \"special-rules/gromril-armour\",\n  \"nehekharan phalanx\": \"special-rules/nehekharan-phalanx\",\n  fear: \"special-rules/fear\",\n  \"verminous valour\": \"special-rules/verminous-valour\",\n  \"characters joining a lance\": \"special-rules/characters-joining-a-lance\",\n  \"warpstone weapons\": \"special-rules/warpstone-weapons\",\n  \"feigned flight\": \"special-rules/feigned-flight\",\n  \"nehekharan undead\": \"special-rules/nehekharan-undead\",\n  \"gromril weapons\": \"special-rules/gromril-weapons\",\n  resolute: \"special-rules/resolute\",\n  \"fight in extra rank\": \"special-rules/fight-in-extra-rank\",\n  \"resurrecting the fallen\": \"special-rules/resurrecting-the-fallen\",\n  \"fire & flee\": \"special-rules/fire-and-flee\",\n  \"rune lore\": \"special-rules/rune-lore\",\n  \"first charge\": \"special-rules/first-charge\",\n  \"flaming attacks\": \"special-rules/flaming-attacks\",\n  flammable: \"special-rules/flammable\",\n  fly: \"special-rules/fly\",\n  frenzy: \"special-rules/frenzy\",\n  \"furious charge\": \"special-rules/furious-charge\",\n  hatred: \"special-rules/hatred\",\n  horde: \"special-rules/horde\",\n  howdah: \"special-rules/howdah\",\n  \"ignores cover\": \"special-rules/ignores-cover\",\n  \"immune to psychology\": \"special-rules/immune-to-psychology\",\n  \"impact hits\": \"special-rules/impact-hits\",\n  impetuous: \"special-rules/impetuous\",\n  \"killing blow\": \"special-rules/killing-blow\",\n  \"large target\": \"special-rules/large-target\",\n  levies: \"special-rules/levies\",\n  loner: \"special-rules/loner\",\n  \"magical attacks\": \"special-rules/magical-attacks\",\n  \"magic resistance\": \"special-rules/magic-resistance\",\n  mercenaries: \"special-rules/mercenaries\",\n  \"monster handlers\": \"special-rules/monster-handlers\",\n  \"monster slayer\": \"special-rules/monster-slayer\",\n  \"motley crew\": \"special-rules/motley-crew\",\n  \"move & shoot\": \"special-rules/move-and-shoot\",\n  \"move or shoot\": \"special-rules/move-or-shoot\",\n  \"move through cover\": \"special-rules/move-through-cover\",\n  \"multiple shots\": \"special-rules/multiple-shots\",\n  \"multiple wounds\": \"special-rules/multiple-wounds\",\n  \"open order\": \"special-rules/open-order\",\n  \"poisoned attacks\": \"special-rules/poisoned-attacks\",\n  ponderous: \"special-rules/ponderous\",\n  \"quick shot\": \"special-rules/quick-shot\",\n  \"rallying cry\": \"special-rules/rallying-cry\",\n  \"random attacks\": \"special-rules/random-attacks\",\n  \"random movement\": \"special-rules/random-movement\",\n  regeneration: \"special-rules/regeneration\",\n  \"regimental unit\": \"special-rules/regimental-unit\",\n  \"requires two hands\": \"special-rules/requires-two-hands\",\n  \"reserve move\": \"special-rules/reserve-move\",\n  scouts: \"special-rules/scouts\",\n  shieldwall: \"special-rules/shieldwall\",\n  skirmishers: \"special-rules/skirmishers\",\n  \"stomp attacks\": \"special-rules/stomp-attacks\",\n  \"strike first\": \"special-rules/strike-first\",\n  \"strike last\": \"special-rules/strike-last\",\n  stubborn: \"special-rules/stubborn\",\n  stupidity: \"special-rules/stupidity\",\n  swiftstride: \"special-rules/swiftstride\",\n  terror: \"special-rules/terror\",\n  \"timmm-berrr!\": \"special-rules/timmm-berrr\",\n  unbreakable: \"special-rules/unbreakable\",\n  unstable: \"special-rules/unstable\",\n  vanguard: \"special-rules/vanguard\",\n  veteran: \"special-rules/veteran\",\n  \"volley fire\": \"special-rules/volley-fire\",\n  warband: \"special-rules/warband\",\n  \"warp-spawned\": \"special-rules/warp-spawned\",\n  \"dark fire of chaos\": \"weapons-of-war/dark-fire-of-chaos\",\n  \"great throwing spears\": \"weapons-of-war/great-throwing-spears\",\n  braystaff: \"weapons-of-war/braystaff\",\n  \"dragon fire\": \"weapons-of-war/dragon-fire\",\n  \"fanatic ball & chain\": \"weapons-of-war/fanatic-ball-and-chain\",\n  bloodflail: \"weapons-of-war/bloodflail\",\n  \"spear of loec\": \"weapons-of-war/spear-of-loec\",\n  \"blessed triptych\": \"weapons-of-war/blessed-triptych\",\n  \"dread halberd\": \"weapons-of-war/dread-halberd\",\n  blowpipe: \"weapons-of-war/blowpipe\",\n  \"steam cannon\": \"weapons-of-war/steam-cannon\",\n  \"warplock musket\": \"weapons-of-war/warplock-musket\",\n  \"steam cannonade\": \"weapons-of-war/steam-cannonade\",\n  \"great hammer\": \"weapons-of-war/great-hammer\",\n  \"ritual blade\": \"weapons-of-war/ritual-blade\",\n  \"trampling hooves\": \"weapons-of-war/trampling-hooves\",\n  \"huge gob\": \"weapons-of-war/huge-gob\",\n  \"fumes of contagion\": \"weapons-of-war/fumes-of-contagion\",\n  \"slythey tongue\": \"weapons-of-war/slythey-tongue\",\n  \"warplock pistol\": \"weapons-of-war/warplock-pistol\",\n  greatbow: \"weapons-of-war/greatbow\",\n  \"flaming breath ogre kingdoms\": \"weapons-of-war/flaming-breath-ogre-kingdoms\",\n  \"brace of drakefire pistols\": \"weapons-of-war/brace-of-drakefire-pistols\",\n  \"steam gun empire\": \"weapons-of-war/steam-gun-empire\",\n  \"fiery breath lizardmen\": \"weapons-of-war/fiery-breath-lizardmen\",\n  \"har ganeth greatsword\": \"weapons-of-war/har-ganeth-greatsword\",\n  polearm: \"weapons-of-war/polearm\",\n  \"trickster's blades\": \"weapons-of-war/tricksters-blades\",\n  \"handmaiden's spear\": \"weapons-of-war/handmaidens-spear\",\n  \"great axe\": \"weapons-of-war/great-axe\",\n  \"petrifying gaze\": \"weapons-of-war/petrifying-gaze\",\n  drakegun: \"weapons-of-war/drakegun\",\n  \"eagle-eye bolt thrower\": \"weapons-of-war/eagle-eye-bolt-thrower\",\n  \"serrated maw\": \"weapons-of-war/serrated-maw\",\n  \"troll vomit\": \"weapons-of-war/troll-vomit\",\n  \"burning braziers\": \"weapons-of-war/burning-braziers\",\n  \"plague censer\": \"weapons-of-war/plague-censer\",\n  \"goring horns\": \"weapons-of-war/goring-horns\",\n  \"lash & buckler\": \"weapons-of-war/lash-and-buckler\",\n  \"horns of stone\": \"weapons-of-war/horns-of-stone\",\n  \"razor barbs\": \"weapons-of-war/razor-barbs\",\n  \"flaming breath warriors of chaos\":\n    \"weapons-of-war/flaming-breath-warriors-of-chaos\",\n  \"oaken fists\": \"weapons-of-war/oaken-fists\",\n  \"lash of khorne\": \"weapons-of-war/lash-of-khorne\",\n  \"writhing tail\": \"weapons-of-war/writhing-tail\",\n  \"doom-flayer\": \"weapons-of-war/doom-flayer\",\n  \"brass bound hooves\": \"weapons-of-war/brass-bound-hooves\",\n  \"cinderblast bombs\": \"weapons-of-war/cinderblast-bombs\",\n  \"wicked claws\": \"weapons-of-war/wicked-claws\",\n  \"helblaster volley gun\": \"weapons-of-war/helblaster-volley-gun\",\n  \"fiend tail\": \"weapons-of-war/fiend-tail\",\n  \"fireleech bolas\": \"weapons-of-war/fireleech-bolas\",\n  \"defensive stakes\": \"weapons-of-war/defensive-stakes\",\n  \"ravager harpoon\": \"weapons-of-war/ravager-harpoon\",\n  \"mace tail\": \"weapons-of-war/mace-tail\",\n  strangleroots: \"weapons-of-war/strangleroots\",\n  \"hand weapon\": \"weapons-of-war/hand-weapon\",\n  \"bow of avelorn\": \"weapons-of-war/bow-of-avelorn\",\n  \"breath of desiccation\": \"weapons-of-war/breath-of-desiccation\",\n  \"great tusks\": \"weapons-of-war/great-tusks\",\n  \"acidic vomit\": \"weapons-of-war/acidic-vomit\",\n  \"two hand weapons\": \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"additional hand weapon\":\n    \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"chill breath\": \"weapons-of-war/chill-breath\",\n  \"slashing talons\": \"weapons-of-war/slashing-talons\",\n  \"poisoned wind mortar\": \"weapons-of-war/poisoned-wind-mortar\",\n  \"cannon of khorne\": \"weapons-of-war/cannon-of-khorne\",\n  \"ceremonial halberd\": \"weapons-of-war/ceremonial-halberd\",\n  \"hurl attack\": \"weapons-of-war/hurl-attack\",\n  \"helstorm rocket battery\": \"weapons-of-war/helstorm-rocket-battery\",\n  \"trollhammer torpedo\": \"weapons-of-war/trollhammer-torpedo\",\n  \"noxious breath\": \"weapons-of-war/noxious-breath\",\n  \"field trebuchet\": \"weapons-of-war/field-trebuchet\",\n  \"envenomed sting\": \"weapons-of-war/envenomed-sting\",\n  \"mighty antlers\": \"weapons-of-war/mighty-antlers\",\n  \"sorcerous exhalation\": \"weapons-of-war/sorcerous-exhalation\",\n  \"venomous tail\": \"weapons-of-war/venomous-tail\",\n  doomfire: \"weapons-of-war/doomfire\",\n  \"serrated maws\": \"weapons-of-war/serrated-maws\",\n  \"ratling gun\": \"weapons-of-war/ratling-gun\",\n  \"leadbelcher gun\": \"weapons-of-war/leadbelcher-gun\",\n  \"great horns\": \"weapons-of-war/great-horns\",\n  bilesword: \"weapons-of-war/bilesword\",\n  \"demolition rockets\": \"weapons-of-war/demolition-rockets\",\n  \"chracian great blade\": \"weapons-of-war/chracian-great-blade\",\n  \"asrai spear\": \"weapons-of-war/asrai-spear\",\n  \"grenade launching blunderbuss\":\n    \"weapons-of-war/grenade-launching-blunderbuss\",\n  \"blasting charges\": \"weapons-of-war/blasting-charges\",\n  \"fiery roar\": \"weapons-of-war/fiery-roar\",\n  \"cleaver-limbs\": \"weapons-of-war/cleaver-limbs\",\n  \"venom surge\": \"weapons-of-war/venom-surge\",\n  flail: \"weapons-of-war/flail\",\n  plagueflail: \"weapons-of-war/plagueflail\",\n  \"steam drill\": \"weapons-of-war/steam-drill\",\n  \"great weapon\": \"weapons-of-war/great-weapon\",\n  \"hochland long rifle\": \"weapons-of-war/hochland-long-rifle\",\n  \"giant bow\": \"weapons-of-war/giant-bow\",\n  \"fiery breath dark elves\": \"weapons-of-war/fiery-breath-dark-elves\",\n  \"grimfrost weapon\": \"weapons-of-war/grimfrost-weapon\",\n  \"decapitating claws\": \"weapons-of-war/decapitating-claws\",\n  \"ranger's glaive\": \"weapons-of-war/rangers-glaive\",\n  \"infernal incendiaries\": \"weapons-of-war/infernal-incendiaries\",\n  \"sword of hoeth\": \"weapons-of-war/sword-of-hoeth\",\n  \"warpfire thrower\": \"weapons-of-war/warpfire-thrower\",\n  \"spidersilk lobber\": \"weapons-of-war/spidersilk-lobber\",\n  \"paired great khopeshes\": \"weapons-of-war/paired-great-khopeshes\",\n  \"colossal fang-filled gob\": \"weapons-of-war/colossal-fang-filled-gob\",\n  \"writhing tentacles daemons of chaos\":\n    \"weapons-of-war/writhing-tentacles-daemons-of-chaos\",\n  \"warp grinder\": \"weapons-of-war/warp-grinder\",\n  \"monstrous tusks\": \"weapons-of-war/monstrous-tusks\",\n  \"blackbriar javelin\": \"weapons-of-war/blackbriar-javelin\",\n  halberd: \"weapons-of-war/halberd\",\n  \"cavernous maw\": \"weapons-of-war/cavernous-maw\",\n  \"pigeon bombs\": \"weapons-of-war/pigeon-bombs\",\n  \"giant blowpipes\": \"weapons-of-war/giant-blowpipes\",\n  \"steam gun dwarfs\": \"weapons-of-war/steam-gun-dwarfs\",\n  \"dreadquake mortar\": \"weapons-of-war/dreadquake-mortar\",\n  \"giant's club\": \"weapons-of-war/giants-club\",\n  \"hunting spear\": \"weapons-of-war/hunting-spear\",\n  \"thunderous bludgeon\": \"weapons-of-war/thunderous-bludgeon\",\n  \"doom diver\": \"weapons-of-war/doom-diver\",\n  \"morning star\": \"weapons-of-war/morning-star\",\n  \"plague proboscis\": \"weapons-of-war/plague-proboscis\",\n  \"cannon of the sky-titans\": \"weapons-of-war/cannon-of-the-sky-titans\",\n  \"brimstone gun\": \"weapons-of-war/brimstone-gun\",\n  \"warplock jezzail\": \"weapons-of-war/warplock-jezzail\",\n  \"cleaing blades\": \"weapons-of-war/cleaing-blades\",\n  \"writhing tentacles\": \"weapons-of-war/writhing-tentacles\",\n  \"blood of hashut\": \"weapons-of-war/blood-of-hashut\",\n  \"poisoned wind globes\": \"weapons-of-war/poisoned-wind-globes\",\n  \"scraplauncher catapult\": \"weapons-of-war/scraplauncher-catapult\",\n  \"venomous talons\": \"weapons-of-war/venomous-talons\",\n  \"decapitating strike\": \"weapons-of-war/decapitating-strike\",\n  \"darkforged weapon\": \"weapons-of-war/darkforged-weapon\",\n  clattergun: \"weapons-of-war/clattergun\",\n  whip: \"weapons-of-war/whip\",\n  \"soporific breath\": \"weapons-of-war/soporific-breath\",\n  \"venom sting\": \"weapons-of-war/venom-sting\",\n  \"things-catcher\": \"weapons-of-war/things-catcher\",\n  \"asrai longbow\": \"weapons-of-war/asrai-longbow\",\n  \"screaming skull catapult\": \"weapons-of-war/screaming-skull-catapult\",\n  chaintrap: \"weapons-of-war/chaintrap\",\n  fireglaive: \"weapons-of-war/fireglaive\",\n  \"impaling claws\": \"weapons-of-war/impaling-claws\",\n  \"venom spray\": \"weapons-of-war/venom-spray\",\n  \"hailshot blunderbuss\": \"weapons-of-war/hailshot-blunderbuss\",\n  \"tzeentchian wand\": \"weapons-of-war/tzeentchian-wand\",\n  \"enchanted arrows\": \"weapons-of-war/enchanted-arrows\",\n  \"blood vulture\": \"weapons-of-war/blood-vulture\",\n  \"billowing death\": \"weapons-of-war/billowing-death\",\n  lance: \"weapons-of-war/lance\",\n  \"naptha bombs\": \"weapons-of-war/naptha-bombs\",\n  \"cavalry spear\": \"weapons-of-war/cavalry-spear\",\n  \"distensible jaw\": \"weapons-of-war/distensible-jaw\",\n  \"arcane bodkins\": \"weapons-of-war/arcane-bodkins\",\n  warpflame: \"weapons-of-war/warpflame\",\n  \"warpstone claws\": \"weapons-of-war/warpstone-claws\",\n  \"harpoon launcher\": \"weapons-of-war/harpoon-launcher\",\n  \"throwing spear\": \"weapons-of-war/throwing-spear\",\n  \"warp lightning cannon\": \"weapons-of-war/warp-lightning-cannon\",\n  \"ensorcelled weapon\": \"weapons-of-war/ensorcelled-weapon\",\n  \"hagbane tips\": \"weapons-of-war/hagbane-tips\",\n  \"daemonic talons\": \"weapons-of-war/daemonic-talons\",\n  ironfist: \"weapons-of-war/ironfist\",\n  \"plagueclaw catapult\": \"weapons-of-war/plagueclaw-catapult\",\n  \"moonfire shot\": \"weapons-of-war/moonfire-shot\",\n  \"thrusting spear\": \"weapons-of-war/thrusting-spear\",\n  \"swiftshiver shards\": \"weapons-of-war/swiftshiver-shards\",\n  \"iron claw\": \"weapons-of-war/iron-claw\",\n  \"ogre pistol\": \"weapons-of-war/ogre-pistol\",\n  \"brace of ogre pistols\": \"weapons-of-war/brace-of-ogre-pistols\",\n  \"harvester cannon\": \"weapons-of-war/harvester-cannon\",\n  \"trueflight arrows\": \"weapons-of-war/trueflight-arrows\",\n  \"baleful torrent\": \"weapons-of-war/baleful-torrent\",\n  longbow: \"weapons-of-war/longbow\",\n  \"warp gaze\": \"weapons-of-war/warp-gaze\",\n  hellblade: \"weapons-of-war/hellblade\",\n  shortbow: \"weapons-of-war/shortbow\",\n  warbow: \"weapons-of-war/warbow\",\n  plaguesword: \"weapons-of-war/plaguesword\",\n  \"death's heads\": \"weapons-of-war/deaths-heads\",\n  handgun: \"weapons-of-war/handgun\",\n  \"piercing claws\": \"weapons-of-war/piercing-claws\",\n  pistol: \"weapons-of-war/pistol\",\n  \"flames of tzeentch\": \"weapons-of-war/flames-of-tzeentch\",\n  \"brace of pistols\": \"weapons-of-war/brace-of-pistols\",\n  \"lamprey's bite\": \"weapons-of-war/lampreys-bite\",\n  \"repeater handgun\": \"weapons-of-war/repeater-handgun\",\n  \"repeater pistol\": \"weapons-of-war/repeater-pistol\",\n  crossbow: \"weapons-of-war/crossbow\",\n  \"repeater crossbow\": \"weapons-of-war/repeater-crossbow\",\n  \"repeater handbow\": \"weapons-of-war/repeater-handbow\",\n  \"brace of repeater handbows\": \"weapons-of-war/brace-of-repeater-handbows\",\n  \"throwing weapons\": \"weapons-of-war/throwing-weapons\",\n  javelin: \"weapons-of-war/javelin\",\n  sling: \"weapons-of-war/sling\",\n  \"throwing axe\": \"weapons-of-war/throwing-axe\",\n  \"light armour\": \"weapons-of-war/light-armour\",\n  \"heavy armour\": \"weapons-of-war/heavy-armour\",\n  \"full plate armour\": \"weapons-of-war/full-plate-armour\",\n  shield: \"weapons-of-war/shield\",\n  barding: \"weapons-of-war/barding\",\n  \"lore of the horned rat\": \"the-lores-of-magic/lore-of-the-horned-rat\",\n  \"lore of the great maw\": \"the-lores-of-magic/lore-of-the-great-maw\",\n  \"lore of lustria\": \"the-lores-of-magic/lore-of-lustria\",\n  \"lore of naggaroth\": \"the-lores-of-magic/lore-of-naggaroth\",\n  \"lore of daemons\": \"the-lores-of-magic/lore-of-daemons\",\n  \"lore of hashut\": \"the-lores-of-magic/lore-of-hashut\",\n  \"lore of saphery\": \"the-lores-of-magic/lore-of-saphery\",\n  \"lore of athel loren\": \"the-lores-of-magic/lore-of-athel-loren\",\n  \"lore of the lady\": \"the-lores-of-magic/lore-of-the-lady\",\n  \"lore of nehekhara\": \"the-lores-of-magic/lore-of-nehekhara\",\n  \"lore of chaos\": \"the-lores-of-magic/lore-of-chaos\",\n  \"lore of gork\": \"the-lores-of-magic/lore-of-gork\",\n  \"lore of beasts\": \"the-lores-of-magic/lore-of-beasts\",\n  \"lore of mork\": \"the-lores-of-magic/lore-of-mork\",\n  \"battle magic\": \"the-lores-of-magic/battle-magic\",\n  daemonology: \"the-lores-of-magic/daemonology\",\n  \"dark magic\": \"the-lores-of-magic/dark-magic\",\n  elementalism: \"the-lores-of-magic/elementalism\",\n  \"high magic\": \"the-lores-of-magic/high-magic\",\n  illusion: \"the-lores-of-magic/illusion\",\n  necromancy: \"the-lores-of-magic/necromancy\",\n  \"waaagh! magic\": \"the-lores-of-magic/waaagh-magic\",\n  \"'eadbuttin' 'at\": \"magic-item/eadbuttin-at\",\n  \"a befuddlement of mischiefs\": \"magic-item/a-befuddlement-of-mischiefs\",\n  \"a blight of terrors\": \"magic-item/a-blight-of-terrors\",\n  \"a lamentation of despairs\": \"magic-item/a-lamentation-of-despairs\",\n  \"a murder of spites\": \"magic-item/a-murder-of-spites\",\n  \"a muster of malevolents\": \"magic-item/a-muster-of-malevolents\",\n  \"a resplendence of luminescents\": \"magic-item/a-resplendence-of-luminescents\",\n  \"acid ichor\": \"magic-item/acid-ichor\",\n  \"æther blade\": \"magic-item/aether-blade\",\n  \"allure of slaanesh\": \"magic-item/allure-of-slaanesh\",\n  \"an annoyance of netlings\": \"magic-item/an-annoyance-of-netlings\",\n  \"annulian crystal\": \"magic-item/annulian-crystal\",\n  \"anointed of asuryan\": \"magic-item/anointed-of-asuryan\",\n  \"antlers of the great hunt\": \"magic-item/antlers-of-the-great-hunt\",\n  \"arcane familiar\": \"magic-item/arcane-familiar\",\n  \"armour of bazherak the cruel\": \"magic-item/armour-of-bazherak-the-cruel\",\n  \"armour of caledor\": \"magic-item/armour-of-caledor\",\n  \"armour of destiny\": \"magic-item/armour-of-destiny\",\n  \"armour of fortune\": \"magic-item/armour-of-fortune\",\n  \"armour of khorne\": \"magic-item/armour-of-khorne\",\n  \"armour of meteoric iron\": \"magic-item/armour-of-meteoric-iron\",\n  \"armour of mork\": \"magic-item/armour-of-mork\",\n  \"armour of silvered steel\": \"magic-item/armour-of-silvered-steel\",\n  \"armour of tarnus\": \"magic-item/armour-of-tarnus\",\n  \"armour of the ages\": \"magic-item/armour-of-the-ages\",\n  \"armour of the damned\": \"magic-item/armour-of-the-damned\",\n  \"ashen banner\": \"magic-item/ashen-banner\",\n  \"asyendi's bane\": \"magic-item/asyendis-bane\",\n  \"aura of pain\": \"magic-item/aura-of-pain\",\n  \"aura of quetzl\": \"magic-item/aura-of-quetzl\",\n  \"axe of khorne\": \"magic-item/axe-of-khorne\",\n  \"axe of men\": \"magic-item/axe-of-men\",\n  \"banner of acquiescence\": \"magic-item/banner-of-acquiescence\",\n  \"banner of arcane protection\": \"magic-item/banner-of-arcane-protection\",\n  \"banner of châlons\": \"magic-item/banner-of-chalons\",\n  \"banner of change\": \"magic-item/banner-of-change\",\n  \"banner of discord\": \"magic-item/banner-of-discord\",\n  \"banner of duty\": \"magic-item/banner-of-duty\",\n  \"banner of ellyrion\": \"magic-item/banner-of-ellyrion\",\n  \"banner of har ganeth\": \"magic-item/banner-of-har-ganeth\",\n  \"banner of iron resolve\": \"magic-item/banner-of-iron-resolve\",\n  \"banner of midsummer's eve\": \"magic-item/banner-of-midsummers-eve\",\n  \"banner of nagarythe\": \"magic-item/banner-of-nagarythe\",\n  \"banner of outrage\": \"magic-item/banner-of-outrage\",\n  \"banner of rage\": \"magic-item/banner-of-rage\",\n  \"banner of the eternal queen\": \"magic-item/banner-of-the-eternal-queen\",\n  \"banner of the gods\": \"magic-item/banner-of-the-gods\",\n  \"banner of the hunter king\": \"magic-item/banner-of-the-hunter-king\",\n  \"banner of the wildwood\": \"magic-item/banner-of-the-wildwood\",\n  \"banner of unholy victory\": \"magic-item/banner-of-unholy-victory\",\n  \"banner of verminous scurrying\": \"magic-item/banner-of-verminous-scurrying\",\n  \"battle banner\": \"magic-item/battle-banner\",\n  \"battleaxe of the last big waaagh!\":\n    \"magic-item/battleaxe-of-the-last-big-waaagh\",\n  beastkiller: \"magic-item/beastkiller\",\n  \"becalming cogitation\": \"magic-item/becalming-cogitation\",\n  \"bedazzling helm\": \"magic-item/bedazzling-helm\",\n  \"berserker blade\": \"magic-item/berserker-blade\",\n  \"big boss 'at\": \"magic-item/big-boss-at\",\n  \"biting blade\": \"magic-item/biting-blade\",\n  \"black dragon egg\": \"magic-item/black-dragon-egg\",\n  \"black hammer of hashut\": \"magic-item/black-hammer-of-hashut\",\n  \"black staff\": \"magic-item/black-staff\",\n  \"blade of nurglitch\": \"magic-item/blade-of-nurglitch\",\n  \"blade of revered tzunki\": \"magic-item/blade-of-revered-tzunki\",\n  \"blades of loec\": \"magic-item/blades-of-loec\",\n  \"blasted standard\": \"magic-item/blasted-standard\",\n  \"blood armour\": \"magic-item/blood-armour\",\n  \"blood of caledor\": \"magic-item/blood-of-caledor\",\n  bloodcleaver: \"magic-item/bloodcleaver\",\n  \"book of ashur\": \"magic-item/book-of-ashur\",\n  \"bow of loren\": \"magic-item/bow-of-loren\",\n  \"brass orb\": \"magic-item/brass-orb\",\n  \"brazen collar\": \"magic-item/brazen-collar\",\n  \"breath of hashut\": \"magic-item/breath-of-hashut\",\n  \"bull standard\": \"magic-item/bull-standard\",\n  \"burning blade\": \"magic-item/burning-blade\",\n  \"buzgob's knobbly staff\": \"magic-item/buzgobs-knobbly-staff\",\n  \"cannibal totem\": \"magic-item/cannibal-totem\",\n  \"cathayan jet pendant\": \"magic-item/cathayan-jet-pendant\",\n  \"cautious shield\": \"magic-item/cautious-shield\",\n  \"chaos runesword\": \"magic-item/chaos-runesword\",\n  \"charmed shield\": \"magic-item/charmed-shield\",\n  \"chracian hunter\": \"magic-item/chracian-hunter\",\n  \"cloak of feathers\": \"magic-item/cloak-of-feathers\",\n  \"cloak of the dunes\": \"magic-item/cloak-of-the-dunes\",\n  \"cold-blooded banner\": \"magic-item/cold-blooded-banner\",\n  \"collar of khorne\": \"magic-item/collar-of-khorne\",\n  \"collar of shapesh\": \"magic-item/collar-of-shapesh\",\n  \"conqueror's tapestry\": \"magic-item/conquerors-tapestry\",\n  \"crimson armour of dargan\": \"magic-item/crimson-armour-of-dargan\",\n  \"crook & flail of radiance\": \"magic-item/crook-and-flail-of-radiance\",\n  \"crown of everlasting conquest\": \"magic-item/crown-of-everlasting-conquest\",\n  \"crown of horns\": \"magic-item/crown-of-horns\",\n  \"crown of kings\": \"magic-item/crown-of-kings\",\n  \"cube of darkness\": \"magic-item/cube-of-darkness\",\n  \"cupped hands of the old ones\": \"magic-item/cupped-hands-of-the-old-ones\",\n  \"da banner of butchery\": \"magic-item/da-banner-of-butchery\",\n  \"da choppiest choppa\": \"magic-item/da-choppiest-choppa\",\n  \"daemon flask\": \"magic-item/daemon-flask\",\n  \"daemon-flesh\": \"magic-item/daemon-flesh\",\n  \"daemon-slayer scars\": \"magic-item/daemon-slayer-scars\",\n  \"daemonic familiar\": \"magic-item/daemonic-familiar\",\n  \"daemonic robes\": \"magic-item/daemonic-robes\",\n  daemonsword: \"magic-item/daemonsword\",\n  \"dagger of malice\": \"magic-item/dagger-of-malice\",\n  \"dark heart\": \"magic-item/dark-heart\",\n  \"dark majesty\": \"magic-item/dark-majesty\",\n  \"dark maul\": \"magic-item/dark-maul\",\n  dawnstone: \"magic-item/dawnstone\",\n  \"death globe\": \"magic-item/death-globe\",\n  \"death mask of kharnutt\": \"magic-item/death-mask-of-kharnutt\",\n  deathcheater: \"magic-item/deathcheater\",\n  \"deepwood sphere\": \"magic-item/deepwood-sphere\",\n  \"destroyer of eternities\": \"magic-item/destroyer-of-eternities\",\n  \"diabolic splendour\": \"magic-item/diabolic-splendour\",\n  \"dispel scroll\": \"magic-item/dispel-scroll\",\n  \"doom totem\": \"magic-item/doom-totem\",\n  \"dragon bow\": \"magic-item/dragon-bow\",\n  \"dragon helm\": \"magic-item/dragon-helm\",\n  \"dragon slaying sword\": \"magic-item/dragon-slaying-sword\",\n  \"dragonhide banner\": \"magic-item/dragonhide-banner\",\n  \"duellist's blades\": \"magic-item/duellists-blades\",\n  \"dwarf hide banner\": \"magic-item/dwarf-hide-banner\",\n  \"earthing rod\": \"magic-item/earthing-rod\",\n  \"enchanted shield\": \"magic-item/enchanted-shield\",\n  \"enchanting aura\": \"magic-item/enchanting-aura\",\n  \"enkhil's kanopi\": \"magic-item/enkhils-kanopi\",\n  \"enrapturing gaze\": \"magic-item/enrapturing-gaze\",\n  \"errantry banner\": \"magic-item/errantry-banner\",\n  \"executioner's axe\": \"magic-item/executioners-axe\",\n  \"extra arm\": \"magic-item/extra-arm\",\n  \"falcon-horn of fredemund\": \"magic-item/falcon-horn-of-fredemund\",\n  \"favour of the gods\": \"magic-item/favour-of-the-gods\",\n  \"feedback scroll\": \"magic-item/feedback-scroll\",\n  \"filth mace\": \"magic-item/filth-mace\",\n  \"fistful of laurels\": \"magic-item/fistful-of-laurels\",\n  \"flail of skulls\": \"magic-item/flail-of-skulls\",\n  \"flying carpet\": \"magic-item/flying-carpet\",\n  \"focus familiar\": \"magic-item/focus-familiar\",\n  \"foe bane\": \"magic-item/foe-bane\",\n  \"fungus wine\": \"magic-item/fungus-wine\",\n  \"gauntlet of the duel\": \"magic-item/gauntlet-of-the-duel\",\n  \"giant blade\": \"magic-item/giant-blade\",\n  giantbreaker: \"magic-item/giantbreaker\",\n  \"gilded cuirass\": \"magic-item/gilded-cuirass\",\n  glamourweave: \"magic-item/glamourweave\",\n  \"glittering scales\": \"magic-item/glittering-scales\",\n  \"glittering wotnots\": \"magic-item/glittering-wotnots\",\n  \"glowy green amulet\": \"magic-item/glowy-green-amulet\",\n  \"glyph necklace\": \"magic-item/glyph-necklace\",\n  \"gnarled hide\": \"magic-item/gnarled-hide\",\n  \"gouge-tusks\": \"magic-item/gouge-tusks\",\n  \"grand banner of superiority\": \"magic-item/grand-banner-of-superiority\",\n  \"great standard of sundering\": \"magic-item/great-standard-of-sundering\",\n  \"griffon standard\": \"magic-item/griffon-standard\",\n  \"gromril great helm\": \"magic-item/gromril-great-helm\",\n  \"grudge rune\": \"magic-item/grudge-rune\",\n  \"grut's sickle\": \"magic-item/gruts-sickle\",\n  \"guff's windy banner\": \"magic-item/guffs-windy-banner\",\n  \"gut maw\": \"magic-item/gut-maw\",\n  \"hagtree fetish\": \"magic-item/hagtree-fetish\",\n  \"hail of doom arrow\": \"magic-item/hail-of-doom-arrow\",\n  \"halfling cookbook\": \"magic-item/halfling-cookbook\",\n  \"harrowing scrutiny\": \"magic-item/harrowing-scrutiny\",\n  \"headsman's axe\": \"magic-item/headsmans-axe\",\n  \"healing potion\": \"magic-item/healing-potion\",\n  \"heartwood lance\": \"magic-item/heartwood-lance\",\n  hellheart: \"magic-item/hellheart\",\n  hellshard: \"magic-item/hellshard\",\n  \"helm of many eyes\": \"magic-item/helm-of-many-eyes\",\n  \"helm of the hunt\": \"magic-item/helm-of-the-hunt\",\n  \"hide of the cold ones\": \"magic-item/hide-of-the-cold-ones\",\n  \"hieratic jar\": \"magic-item/hieratic-jar\",\n  \"higher state of mind\": \"magic-item/higher-state-of-mind\",\n  \"horn of the first beast\": \"magic-item/horn-of-the-first-beast\",\n  \"horned one\": \"magic-item/horned-one\",\n  \"hunter's spear\": \"magic-item/hunters-spear\",\n  \"hydra's tooth\": \"magic-item/hydras-tooth\",\n  \"icon of endless war\": \"magic-item/icon-of-endless-war\",\n  \"icon of eternal virulence\": \"magic-item/icon-of-eternal-virulence\",\n  \"icon of rakaph\": \"magic-item/icon-of-rakaph\",\n  \"icon of rulership\": \"magic-item/icon-of-rulership\",\n  \"icon of sorcery\": \"magic-item/icon-of-sorcery\",\n  \"icon of the sacred eye\": \"magic-item/icon-of-the-sacred-eye\",\n  \"idol of mork\": \"magic-item/idol-of-mork\",\n  \"imperial banner\": \"magic-item/imperial-banner\",\n  \"infernal enrapturess\": \"magic-item/infernal-enrapturess\",\n  \"infernal puppet\": \"magic-item/infernal-puppet\",\n  \"iridescent corona\": \"magic-item/iridescent-corona\",\n  \"itxi grub\": \"magic-item/itxi-grub\",\n  \"jade amulet\": \"magic-item/jade-amulet\",\n  \"jade lion\": \"magic-item/jade-lion\",\n  \"jagged dagger\": \"magic-item/jagged-dagger\",\n  \"jaguar standard\": \"magic-item/jaguar-standard\",\n  kineater: \"magic-item/kineater\",\n  \"laurels of victory\": \"magic-item/laurels-of-victory\",\n  lifetaker: \"magic-item/lifetaker\",\n  \"lion standard\": \"magic-item/lion-standard\",\n  longstrider: \"magic-item/longstrider\",\n  \"lore familiar\": \"magic-item/lore-familiar\",\n  loremaster: \"magic-item/loremaster\",\n  luckstone: \"magic-item/luckstone\",\n  \"mace of helsturm\": \"magic-item/mace-of-helsturm\",\n  \"manbane standard\": \"magic-item/manbane-standard\",\n  mangelder: \"magic-item/mangelder\",\n  \"mantle of stone\": \"magic-item/mantle-of-stone\",\n  \"mantle of the damsel elena\": \"magic-item/mantle-of-the-damsel-elena\",\n  \"many arms\": \"magic-item/many-arms\",\n  \"many-limbed fiend\": \"magic-item/many-limbed-fiend\",\n  \"master of mortals\": \"magic-item/master-of-mortals\",\n  \"master rune of adamant\": \"magic-item/master-rune-of-adamant\",\n  \"master rune of alaric the mad\": \"magic-item/master-rune-of-alaric-the-mad\",\n  \"master rune of balance\": \"magic-item/master-rune-of-balance\",\n  \"master rune of breaking\": \"magic-item/master-rune-of-breaking\",\n  \"master rune of calm\": \"magic-item/master-rune-of-calm\",\n  \"master rune of disguise\": \"magic-item/master-rune-of-disguise\",\n  \"master rune of dragon slaying\": \"magic-item/master-rune-of-dragon-slaying\",\n  \"master rune of flight\": \"magic-item/master-rune-of-flight\",\n  \"master rune of gromril\": \"magic-item/master-rune-of-gromril\",\n  \"master rune of grungni\": \"magic-item/master-rune-of-grungni\",\n  \"master rune of hesitation\": \"magic-item/master-rune-of-hesitation\",\n  \"master rune of immolation\": \"magic-item/master-rune-of-immolation\",\n  \"master rune of skalf blackhammer\":\n    \"magic-item/master-rune-of-skalf-blackhammer\",\n  \"master rune of smiting\": \"magic-item/master-rune-of-smiting\",\n  \"master rune of spite\": \"magic-item/master-rune-of-spite\",\n  \"master rune of stromni redbeard\":\n    \"magic-item/master-rune-of-stromni-redbeard\",\n  \"master rune of swiftness\": \"magic-item/master-rune-of-swiftness\",\n  \"mastodon armour\": \"magic-item/mastodon-armour\",\n  mawseeker: \"magic-item/mawseeker\",\n  \"merciw's locus\": \"magic-item/merciws-locus\",\n  \"might of khorne\": \"magic-item/might-of-khorne\",\n  \"mirage banner\": \"magic-item/mirage-banner\",\n  \"morning star of fracasse\": \"magic-item/morning-star-of-fracasse\",\n  mountaineater: \"magic-item/mountaineater\",\n  \"muscular monstrosity\": \"magic-item/muscular-monstrosity\",\n  \"null stone\": \"magic-item/null-stone\",\n  \"nurgling infestation\": \"magic-item/nurgling-infestation\",\n  \"oaken stave\": \"magic-item/oaken-stave\",\n  \"obsidian lodestone\": \"magic-item/obsidian-lodestone\",\n  \"obsidian vambraces\": \"magic-item/obsidian-vambraces\",\n  \"ogre blade\": \"magic-item/ogre-blade\",\n  \"opal amulet\": \"magic-item/opal-amulet\",\n  \"overseer's sigil\": \"magic-item/overseers-sigil\",\n  \"paymaster's coin\": \"magic-item/paymasters-coin\",\n  \"pearl of infinite bleakness\": \"magic-item/pearl-of-infinite-bleakness\",\n  \"pelt of midnight\": \"magic-item/pelt-of-midnight\",\n  \"pelt of the dark young\": \"magic-item/pelt-of-the-dark-young\",\n  \"pendant of damnation\": \"magic-item/pendant-of-damnation\",\n  \"pendant of khaeleth\": \"magic-item/pendant-of-khaeleth\",\n  \"piranha blade\": \"magic-item/piranha-blade\",\n  \"poisonous slime\": \"magic-item/poisonous-slime\",\n  \"porko's pigstikka\": \"magic-item/porkos-pigstikka\",\n  \"potion of foolhardiness\": \"magic-item/potion-of-foolhardiness\",\n  \"potion of speed\": \"magic-item/potion-of-speed\",\n  \"potion of strength\": \"magic-item/potion-of-strength\",\n  \"potion of toughness\": \"magic-item/potion-of-toughness\",\n  \"power scroll\": \"magic-item/power-scroll\",\n  \"power vortex\": \"magic-item/power-vortex\",\n  \"prayer icon of quenelles\": \"magic-item/prayer-icon-of-quenelles\",\n  \"primeval club\": \"magic-item/primeval-club\",\n  \"pure of heart\": \"magic-item/pure-of-heart\",\n  \"railarian's mantle\": \"magic-item/railarians-mantle\",\n  \"rampaging banner\": \"magic-item/rampaging-banner\",\n  \"rapturous standard\": \"magic-item/rapturous-standard\",\n  \"razor standard\": \"magic-item/razor-standard\",\n  \"reaver bow\": \"magic-item/reaver-bow\",\n  \"rotten icon\": \"magic-item/rotten-icon\",\n  \"ruby ring of ruin\": \"magic-item/ruby-ring-of-ruin\",\n  \"rune maw\": \"magic-item/rune-maw\",\n  \"rune of banishment\": \"magic-item/rune-of-banishment\",\n  \"rune of battle\": \"magic-item/rune-of-battle\",\n  \"rune of burning\": \"magic-item/rune-of-burning\",\n  \"rune of cleaving\": \"magic-item/rune-of-cleaving\",\n  \"rune of confusion\": \"magic-item/rune-of-confusion\",\n  \"rune of courage\": \"magic-item/rune-of-courage\",\n  \"rune of fear\": \"magic-item/rune-of-fear\",\n  \"rune of fire\": \"magic-item/rune-of-fire\",\n  \"rune of forging\": \"magic-item/rune-of-forging\",\n  \"rune of fortitude\": \"magic-item/rune-of-fortitude\",\n  \"rune of fury\": \"magic-item/rune-of-fury\",\n  \"rune of iron\": \"magic-item/rune-of-iron\",\n  \"rune of luck\": \"magic-item/rune-of-luck\",\n  \"rune of might\": \"magic-item/rune-of-might\",\n  \"rune of parrying\": \"magic-item/rune-of-parrying\",\n  \"rune of passage\": \"magic-item/rune-of-passage\",\n  \"rune of preservation\": \"magic-item/rune-of-preservation\",\n  \"rune of reloading\": \"magic-item/rune-of-reloading\",\n  \"rune of shielding\": \"magic-item/rune-of-shielding\",\n  \"rune of skewering\": \"magic-item/rune-of-skewering\",\n  \"rune of speed\": \"magic-item/rune-of-speed\",\n  \"rune of spellbreaking\": \"magic-item/rune-of-spellbreaking\",\n  \"rune of stone\": \"magic-item/rune-of-stone\",\n  \"rune of striking\": \"magic-item/rune-of-striking\",\n  \"rune of the beast ascendant\": \"magic-item/rune-of-the-beast-ascendant\",\n  \"rune of the furnace\": \"magic-item/rune-of-the-furnace\",\n  \"rune of the true beast\": \"magic-item/rune-of-the-true-beast\",\n  \"rune of warding\": \"magic-item/rune-of-warding\",\n  runefang: \"magic-item/runefang\",\n  \"sacrament of the lady\": \"magic-item/sacrament-of-the-lady\",\n  \"scarab brooch\": \"magic-item/scarab-brooch\",\n  \"scimitar of the sun resplendent\":\n    \"magic-item/scimitar-of-the-sun-resplendent\",\n  \"scroll of binding\": \"magic-item/scroll-of-binding\",\n  \"scroll of transmogrification\": \"magic-item/scroll-of-transmogrification\",\n  \"sea guard\": \"magic-item/sea-guard\",\n  \"seed of rebirth\": \"magic-item/seed-of-rebirth\",\n  \"serpent staff\": \"magic-item/serpent-staff\",\n  \"shadow magnet\": \"magic-item/shadow-magnet\",\n  \"shadow stalker\": \"magic-item/shadow-stalker\",\n  \"shield of ghrond\": \"magic-item/shield-of-ghrond\",\n  \"shield of ptra\": \"magic-item/shield-of-ptra\",\n  \"shield of the mirror pool\": \"magic-item/shield-of-the-mirror-pool\",\n  \"shield of the warrior true\": \"magic-item/shield-of-the-warrior-true\",\n  \"shroud of iron\": \"magic-item/shroud-of-iron\",\n  \"shroud of the ancestor\": \"magic-item/shroud-of-the-ancestor\",\n  \"sigil of asuryan\": \"magic-item/sigil-of-asuryan\",\n  \"silver mirror\": \"magic-item/silver-mirror\",\n  \"silvery wand\": \"magic-item/silvery-wand\",\n  \"siren song\": \"magic-item/siren-song\",\n  \"siren standard\": \"magic-item/siren-standard\",\n  \"sirienne's locket\": \"magic-item/siriennes-locket\",\n  skalm: \"magic-item/skalm\",\n  skavenbrew: \"magic-item/skavenbrew\",\n  \"skavenpelt banner\": \"magic-item/skavenpelt-banner\",\n  \"skin of man\": \"magic-item/skin-of-man\",\n  \"skull of katam\": \"magic-item/skull-of-katam\",\n  \"skull totem\": \"magic-item/skull-totem\",\n  skullplucker: \"magic-item/skullplucker\",\n  \"sloppity bilepiper\": \"magic-item/sloppity-bilepiper\",\n  \"slug-skin\": \"magic-item/slug-skin\",\n  \"soporific musk\": \"magic-item/soporific-musk\",\n  \"sorcerous void\": \"magic-item/sorcerous-void\",\n  \"soul of stone\": \"magic-item/soul-of-stone\",\n  spangleshard: \"magic-item/spangleshard\",\n  \"spear of twilight\": \"magic-item/spear-of-twilight\",\n  \"spell eater\": \"magic-item/spell-eater\",\n  \"spell familiar\": \"magic-item/spell-familiar\",\n  \"spelleater axe\": \"magic-item/spelleater-axe\",\n  spellshield: \"magic-item/spellshield\",\n  \"spellthieving sword\": \"magic-item/spellthieving-sword\",\n  \"spoilpox scrivener\": \"magic-item/spoilpox-scrivener\",\n  \"staff of change\": \"magic-item/staff-of-change\",\n  \"staff of the lost sun\": \"magic-item/staff-of-the-lost-sun\",\n  \"stalwart rune\": \"magic-item/stalwart-rune\",\n  \"standard of chaotic glory\": \"magic-item/standard-of-chaotic-glory\",\n  \"standard of seeping decay\": \"magic-item/standard-of-seeping-decay\",\n  \"standard of slaughter\": \"magic-item/standard-of-slaughter\",\n  \"standard of the cursing word\": \"magic-item/standard-of-the-cursing-word\",\n  \"stone of spite\": \"magic-item/stone-of-spite\",\n  \"storm banner\": \"magic-item/storm-banner\",\n  \"storm daemon\": \"magic-item/storm-daemon\",\n  \"stream of contagion\": \"magic-item/stream-of-contagion\",\n  \"strollaz' rune\": \"magic-item/strollaz-rune\",\n  \"sun standard of chotec\": \"magic-item/sun-standard-of-chotec\",\n  \"sword of battle\": \"magic-item/sword-of-battle\",\n  \"sword of heroes\": \"magic-item/sword-of-heroes\",\n  \"sword of justice\": \"magic-item/sword-of-justice\",\n  \"sword of might\": \"magic-item/sword-of-might\",\n  \"sword of ruin\": \"magic-item/sword-of-ruin\",\n  \"sword of striking\": \"magic-item/sword-of-striking\",\n  \"sword of swiftness\": \"magic-item/sword-of-swiftness\",\n  \"sword of the quest\": \"magic-item/sword-of-the-quest\",\n  \"talisman of protection\": \"magic-item/talisman-of-protection\",\n  tenderiser: \"magic-item/tenderiser\",\n  \"the big red raggedy flag\": \"magic-item/the-big-red-raggedy-flag\",\n  \"the blackened plate\": \"magic-item/the-blackened-plate\",\n  \"the blade of leaping gold\": \"magic-item/the-blade-of-leaping-gold\",\n  \"the blazing banner\": \"magic-item/the-blazing-banner\",\n  \"the cloak of beards\": \"magic-item/the-cloak-of-beards\",\n  \"the collar of zorga\": \"magic-item/the-collar-of-zorga\",\n  \"the fellblade\": \"magic-item/the-fellblade\",\n  \"the gleaming pennant\": \"magic-item/the-gleaming-pennant\",\n  \"the graven sceptre\": \"magic-item/the-graven-sceptre\",\n  \"the guiding eye\": \"magic-item/the-guiding-eye\",\n  \"the lammasu's beard\": \"magic-item/the-lammasus-beard\",\n  \"the loremaster's cloak\": \"magic-item/the-loremasters-cloak\",\n  \"the mask of the furnace\": \"magic-item/the-mask-of-the-furnace\",\n  \"the plague chalice\": \"magic-item/the-plague-chalice\",\n  \"the silver horn\": \"magic-item/the-silver-horn\",\n  \"the white cloak\": \"magic-item/the-white-cloak\",\n  \"the white sword\": \"magic-item/the-white-sword\",\n  thundermace: \"magic-item/thundermace\",\n  \"tome of furion\": \"magic-item/tome-of-furion\",\n  \"totem of eternal war\": \"magic-item/totem-of-eternal-war\",\n  \"totem of prophecy\": \"magic-item/totem-of-prophecy\",\n  \"totem of rust\": \"magic-item/totem-of-rust\",\n  \"transcendent healing\": \"magic-item/transcendent-healing\",\n  \"trappings of nurgle\": \"magic-item/trappings-of-nurgle\",\n  \"trollhide trousers\": \"magic-item/trollhide-trousers\",\n  \"twin heads\": \"magic-item/twin-heads\",\n  \"uncanny senses\": \"magic-item/uncanny-senses\",\n  \"valorous standard\": \"magic-item/valorous-standard\",\n  \"venom of the firefly frog\": \"magic-item/venom-of-the-firefly-frog\",\n  \"vial of lammasu blood\": \"magic-item/vial-of-lammasu-blood\",\n  \"virtue of audacity\": \"magic-item/virtue-of-audacity\",\n  \"virtue of confidence\": \"magic-item/virtue-of-confidence\",\n  \"virtue of discipline\": \"magic-item/virtue-of-discipline\",\n  \"virtue of duty\": \"magic-item/virtue-of-duty\",\n  \"virtue of empathy\": \"magic-item/virtue-of-empathy\",\n  \"virtue of heroism\": \"magic-item/virtue-of-heroism\",\n  \"virtue of knightly temper\": \"magic-item/virtue-of-knightly-temper\",\n  \"virtue of noble disdain\": \"magic-item/virtue-of-noble-disdain\",\n  \"virtue of purity\": \"magic-item/virtue-of-purity\",\n  \"virtue of stoicism\": \"magic-item/virtue-of-stoicism\",\n  \"virtue of the ideal\": \"magic-item/virtue-of-the-ideal\",\n  \"virtue of the impetuous knight\": \"magic-item/virtue-of-the-impetuous-knight\",\n  \"virtue of the joust\": \"magic-item/virtue-of-the-joust\",\n  \"virtue of the penitent\": \"magic-item/virtue-of-the-penitent\",\n  \"vitriolic totem\": \"magic-item/vitriolic-totem\",\n  \"waaagh! banner\": \"magic-item/waaagh-banner\",\n  \"wailing arrow\": \"magic-item/wailing-arrow\",\n  \"wand of jet\": \"magic-item/wand-of-jet\",\n  \"wand of wych elm\": \"magic-item/wand-of-wych-elm\",\n  \"wandering deliberations\": \"magic-item/wandering-deliberations\",\n  \"war banner\": \"magic-item/war-banner\",\n  \"warden of saphery\": \"magic-item/warden-of-saphery\",\n  \"warp condenser\": \"magic-item/warp-condenser\",\n  \"warpstone amulet\": \"magic-item/warpstone-amulet\",\n  \"warpstone armour\": \"magic-item/warpstone-armour\",\n  \"warpstone tokens\": \"magic-item/warpstone-tokens\",\n  \"weeping blade\": \"magic-item/weeping-blade\",\n  \"whip of agony\": \"magic-item/whip-of-agony\",\n  \"will of tzeentch\": \"magic-item/will-of-tzeentch\",\n  \"winged horror\": \"magic-item/winged-horror\",\n  \"wizard's familiar\": \"magic-item/wizards-familiar\",\n  \"wizard's staff\": \"magic-item/wizards-staff\",\n  \"wizarding hat\": \"magic-item/wizarding-hat\",\n  \"wollopa's one hit wunda\": \"magic-item/wollopas-one-hit-wunda\",\n  wraithstone: \"magic-item/wraithstone\",\n};\n\nconst additionalOWBRules = {\n  \"throwing spears\": \"weapons-of-war/throwing-spear\",\n  halberds: \"weapons-of-war/halberd\",\n  \"additional hand weapons\":\n    \"weapons-of-war/two-hand-weapons-additional-hand-weapon\",\n  \"cavalry spears\": \"weapons-of-war/cavalry-spear\",\n  \"repeater handguns\": \"weapons-of-war/repeater-handgun\",\n  \"hand weapons\": \"weapons-of-war/hand-weapon\",\n  flails: \"weapons-of-war/flail\",\n  \"plague censers\": \"weapons-of-war/plague-censer\",\n  \"great weapons\": \"weapons-of-war/great-weapon\",\n  whips: \"weapons-of-war/whip\",\n  spears: \"weapons-of-war/spears\",\n  \"morning stars\": \"weapons-of-war/morning-star\",\n  blowpipes: \"weapons-of-war/blowpipe\",\n  \"warplock jezzails\": \"weapons-of-war/warplock-jezzail\",\n  handguns: \"weapons-of-war/handgun\",\n  lances: \"weapons-of-war/lance\",\n  shortbows: \"weapons-of-war/shortbow\",\n  \"thrusting spears\": \"weapons-of-war/thrusting-spear\",\n  javelins: \"weapons-of-war/javelin\",\n  longbows: \"weapons-of-war/longbow\",\n  pistols: \"weapons-of-war/pistol\",\n  \"throwing axes\": \"weapons-of-war/throwing-axe\",\n  warbows: \"weapons-of-war/warbow\",\n  hellblades: \"weapons-of-war/hellblade\",\n  \"repeater pistols\": \"weapons-of-war/repeater-pistol\",\n  \"blackbriar javelins\": \"weapons-of-war/blackbriar-javelin\",\n  drakeguns: \"weapons-of-war/drakegun\",\n  \"great hammers\": \"weapons-of-war/great-hammer\",\n  \"brimstone guns\": \"weapons-of-war/brimstone-gun\",\n  clatterguns: \"weapons-of-war/clattergun\",\n  \"steam guns\": \"weapons-of-war/steam-gun-dwarfs\",\n  crossbows: \"weapons-of-war/crossbow\",\n  \"throwing weapons\": \"weapons-of-war/throwing-weapons\",\n  slings: \"weapons-of-war/sling\",\n  \"repeater handbows\": \"weapons-of-war/repeater-handbow\",\n  \"repeater crossbows\": \"weapons-of-war/repeater-crossbow\",\n  \"daemons of khorne\": \"special-rules/daemon-of-khorne\",\n  \"daemons of tzeentch\": \"special-rules/daemon-of-tzeentch\",\n  \"daemons of nurgle\": \"special-rules/daemon-of-nurgle\",\n  \"daemons of slaanesh\": \"special-rules/daemon-of-slaanesh\",\n  \"asrai spears\": \"weapons-of-war/asrai-spear\",\n  \"asrai longbows\": \"weapons-of-war/asrai-longbow\",\n  shield: \"weapons-of-war/shield\",\n  shields: \"weapons-of-war/shield\",\n  ironfists: \"weapons-of-war/ironfist\",\n  general: \"characters/the-general-characters\",\n  \"moonfire shots\": \"weapons-of-war/moonfire-shot\",\n  \"battle standard bearer\": \"characters/the-battle-standard\",\n  \"revered guardian\": \"characters/the-battle-standard\",\n  \"patrol leader\": \"characters/the-battle-standard\",\n  ancient: \"characters/the-battle-standard\",\n  \"sky leader\": \"characters/the-battle-standard\",\n  boss: \"command-groups/champions\",\n  marksman: \"command-groups/champions\",\n  preceptor: \"command-groups/champions\",\n  \"inner circle preceptor\": \"command-groups/champions\",\n  \"glade knight\": \"command-groups/champions\",\n  sharpshooter: \"command-groups/champions\",\n  crusher: \"command-groups/champions\",\n  \"demigryph preceptor\": \"command-groups/champions\",\n  \"count's champion\": \"command-groups/champions\",\n  \"wildwood warden\": \"command-groups/champions\",\n  \"first knight\": \"command-groups/champions\",\n  bladesinger: \"command-groups/champions\",\n  \"handmaiden of the thorn\": \"command-groups/champions\",\n  plagueridden: \"command-groups/champions\",\n  \"spawn leader\": \"command-groups/champions\",\n  \"iridescent horror\": \"command-groups/champions\",\n  \"ectoplasmic horror\": \"command-groups/champions\",\n  heartseeker: \"command-groups/champions\",\n  alluress: \"command-groups/champions\",\n  \"master moulder\": \"command-groups/champions\",\n  sergeant: \"command-groups/champions\",\n  bloodreaper: \"command-groups/champions\",\n  nymph: \"command-groups/champions\",\n  guardian: \"command-groups/champions\",\n  harbinger: \"command-groups/champions\",\n  \"high sister\": \"command-groups/champions\",\n  groinbiter: \"command-groups/champions\",\n  snarefinger: \"command-groups/champions\",\n  \"high helm\": \"command-groups/champions\",\n  \"maneater captain\": \"command-groups/champions\",\n  thunderfist: \"command-groups/champions\",\n  \"keeper of the flame\": \"command-groups/champions\",\n  nightleader: \"command-groups/champions\",\n  assassin: \"command-groups/champions\",\n  greyback: \"command-groups/champions\",\n  \"sea master\": \"command-groups/champions\",\n  \"pack leader\": \"command-groups/champions\",\n  \"grail guardian\": \"command-groups/champions\",\n  champion: \"command-groups/champions\",\n  gutlord: \"command-groups/champions\",\n  desperado: \"command-groups/champions\",\n  \"wild hunter\": \"command-groups/champions\",\n  \"wind rider\": \"command-groups/champions\",\n  esquire: \"command-groups/champions\",\n  elder: \"command-groups/champions\",\n  \"lord's bowmen\": \"command-groups/champions\",\n  \"ol' deadeye\": \"command-groups/champions\",\n  \"royal champion\": \"command-groups/champions\",\n  sentinel: \"command-groups/champions\",\n  yeoman: \"command-groups/champions\",\n  gallant: \"command-groups/champions\",\n  pyroclaster: \"command-groups/champions\",\n  villein: \"command-groups/champions\",\n  paragon: \"command-groups/champions\",\n  warden: \"command-groups/champions\",\n  \"militia leader\": \"command-groups/champions\",\n  ironbeard: \"command-groups/champions\",\n  \"ripperdactyl champion\": \"command-groups/champions\",\n  prospector: \"command-groups/champions\",\n  \"eternal warden\": \"command-groups/champions\",\n  ironwarden: \"command-groups/champions\",\n  \"prophet of doom\": \"command-groups/champions\",\n  overseer: \"command-groups/champions\",\n  deathmask: \"command-groups/champions\",\n  \"plague deacon\": \"command-groups/champions\",\n  fangleader: \"command-groups/champions\",\n  clawleader: \"command-groups/champions\",\n  \"standard bearer\": \"command-groups/standard-bearers\",\n  musician: \"command-groups/musicians\",\n  bellower: \"special-rules/bellowers-and-musicians\",\n  \"level 1 wizard\": \"magic/levels-of-wizardry\",\n  \"level 2 wizard\": \"magic/levels-of-wizardry\",\n  \"level 3 wizard\": \"magic/levels-of-wizardry\",\n  \"level 4 wizard\": \"magic/levels-of-wizardry\",\n};\n\nexport const rulesMap = {\n  ...rulesIndexExport,\n  ...additionalOWBRules,\n};\n","import React, { useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport { Dialog } from \"../../components/dialog\";\nimport { Spinner } from \"../../components/spinner\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport { closeRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap } from \"./rules-map\";\nimport \"./RulesIndex.css\";\n\nexport const RulesIndex = () => {\n  const { open, activeRule } = useSelector((state) => state.rulesIndex);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setIsLoading(true);\n    dispatch(closeRulesIndex());\n  };\n  const normalizedRuleName = normalizeRuleName(activeRule);\n  const rulePath = rulesMap[normalizedRuleName];\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {rulesMap[normalizedRuleName] ? (\n        <>\n          <iframe\n            onLoad={() => setIsLoading(false)}\n            className={classNames(\n              \"rules-index__iframe\",\n              !isLoading && \"rules-index__iframe--show\"\n            )}\n            src={`https://tow.whfb.app/${rulePath}?minimal=true&utm_source=owb&utm_medium=referral`}\n            title=\"test\"\n            height=\"500\"\n            width=\"500\"\n          />\n          {isLoading && <Spinner className=\"rules-index__spinner\" />}\n        </>\n      ) : (\n        <p>\n          <FormattedMessage id=\"editor.noRuleFound\" />\n        </p>\n      )}\n    </Dialog>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const updateLocalList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists =\n    localLists &&\n    localLists.map((list) => {\n      if (list.id === updatedList.id) {\n        return updatedList;\n      } else {\n        return list;\n      }\n    });\n\n  localLists && localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeFromLocalList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","/**\n * Returns whether the magic item can be taken multiple times.\n *\n * Typically, these are common potions, scrolls or runes\n *\n * @param {object} magicItem\n * @param {string} magicItem.type\n * @param {boolean} [magicItem.stackable]\n * @param {number} [magicItem.maximum]\n * @returns {boolean}\n */\nexport const isMultipleAllowedItem = ({ type, stackable, maximum }) =>\n  Boolean(stackable || maximum);\n\n/**\n * Calculates the maximum amount of a magic item that can be taken given the remaining points.\n *\n * @param {object} magicItem\n * @param {number} selectedAmount\n * @param {number} unitPointsRemaining\n * @returns\n */\nexport const maxAllowedOfItem = (\n  magicItem,\n  selectedAmount,\n  unitPointsRemaining\n) => {\n  if (!magicItem.stackable && !magicItem.maximum) {\n    return 1;\n  }\n\n  const pointsRemainingMax =\n    Math.floor(unitPointsRemaining / magicItem.points) + selectedAmount;\n\n  if (magicItem.maximum) {\n    return Math.min(magicItem.maximum, pointsRemainingMax);\n  }\n\n  return pointsRemainingMax;\n};\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Gewöhnliche Magische Gegenstände\",\n    name_en: \"Common Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  \"armor-mages\": {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    // deprecated\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"arcane-item\": {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n  \"chaos-mutations\": {\n    name_de: \"Chaos Mutations\",\n    name_en: \"Chaos Mutations\",\n  },\n  \"chaos-mutation\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-character\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-chieftain\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"gifts-of-chaos\": {\n    name_de: \"Gifts of Chaos\",\n    name_en: \"Gifts of Chaos\",\n  },\n  \"gift-of-chaos\": {\n    name_de: \"Gift of Chaos\",\n    name_en: \"Gift of Chaos\",\n  },\n  \"forest-spites\": {\n    name_de: \"Forest Spites\",\n    name_en: \"Forest Spites\",\n  },\n  \"forest-spite\": {\n    name_de: \"Forest Spite\",\n    name_en: \"Forest Spite\",\n  },\n  \"beastmen-brayherds\": {\n    name_de: \"Beastmen Brayherds\",\n    name_en: \"Beastmen Brayherds\",\n  },\n  \"orc-and-goblin-tribes\": {\n    name_de: \"Orc & Goblin Tribes\",\n    name_en: \"Orc & Goblin Tribes\",\n  },\n  \"dwarfen-mountain-holds\": {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  \"empire-of-man\": {\n    name_de: \"Empire of Man\",\n    name_en: \"Empire of Man\",\n  },\n  \"wood-elf-realms\": {\n    name_de: \"Wood Elf Realms\",\n    name_en: \"Wood Elf Realms\",\n  },\n  \"high-elf-realms\": {\n    name_de: \"High Elf Realms\",\n    name_en: \"High Elf Realms\",\n  },\n  \"tomb-kings-of-khemri\": {\n    name_de: \"Tomb Kings of Khemri\",\n    name_en: \"Tomb Kings of Khemri\",\n  },\n  \"warriors-of-chaos\": {\n    name_de: \"Warriors of Chaos\",\n    name_en: \"Warriors of Chaos\",\n  },\n  \"knightly-virtues\": {\n    name_de: \"Knightly Virtues\",\n    name_en: \"Knightly Virtues\",\n  },\n  \"knightly-virtue\": {\n    name_de: \"Knightly Virtue\",\n    name_en: \"Knightly Virtue\",\n  },\n  \"knightly-virtue-character\": {\n    name_de: \"Knightly Virtue (Characters only)\",\n    name_en: \"Knightly Virtue (Characters only)\",\n  },\n  \"elven-honours\": {\n    name_de: \"Elven Honours\",\n    name_en: \"Elven Honours\",\n  },\n  \"elven-honour\": {\n    name_de: \"Elven Honour\",\n    name_en: \"Elven Honour\",\n  },\n  daemonology: {\n    name_de: \"Daemonology\",\n    name_en: \"Daemonology\",\n  },\n  \"dark-magic\": {\n    name_de: \"Dark Magic\",\n    name_en: \"Dark Magic\",\n  },\n  elementalism: {\n    name_de: \"Elementalism\",\n    name_en: \"Elementalism\",\n  },\n  \"battle-magic\": {\n    name_de: \"Battle Magic\",\n    name_en: \"Battle Magic\",\n  },\n  \"high-magic\": {\n    name_de: \"High Magic\",\n    name_en: \"High Magic\",\n  },\n  illusion: {\n    name_de: \"Illusion\",\n    name_en: \"Illusion\",\n  },\n  necromancy: {\n    name_de: \"Necromancy\",\n    name_en: \"Necromancy\",\n  },\n  \"waaagh-magic\": {\n    name_de: \"Waaagh! Magic\",\n    name_en: \"Waaagh! Magic\",\n  },\n  \"errantry-crusades\": {\n    name_en: \"Errantry Crusades\",\n    name_de: \"Errantry Crusades\",\n  },\n  \"bretonnian-exiles\": {\n    name_en: \"Bretonnian Exiles\",\n    name_de: \"Bretonnian Exiles\",\n  },\n  \"nehekharan-royal-hosts\": {\n    name_en: \"Nehekharan Royal Hosts\",\n    name_de: \"Nehekharan Royal Hosts\",\n  },\n  \"mortuary-cults\": {\n    name_en: \"Mortuary Cults\",\n    name_de: \"Mortuary Cults\",\n  },\n  \"nomadic-waaagh\": {\n    name_en: \"Nomadic Waaagh!\",\n    name_de: \"Nomadic Waaagh!\",\n  },\n  \"troll-horde\": {\n    name_en: \"Troll Horde\",\n    name_de: \"Troll Horde\",\n  },\n  \"chaos-dwarfs\": {\n    name_en: \"Chaos Dwarfs\",\n    name_de: \"Chaos Dwarfs\",\n  },\n  \"vampire-counts\": {\n    name_en: \"Vampire Counts\",\n    name_de: \"Vampire Counts\",\n  },\n  \"vampiric-powers\": {\n    name_en: \"Vampiric Powers\",\n    name_de: \"Vampiric Powers\",\n  },\n  \"vampiric-power\": {\n    name_en: \"Vampiric Power\",\n    name_de: \"Vampiric Power\",\n  },\n  \"dark-elves\": {\n    name_en: \"Dark Elves\",\n    name_de: \"Dark Elves\",\n  },\n  skaven: {\n    name_en: \"Skaven\",\n    name_de: \"Skaven\",\n  },\n  \"daemons-of-chaos\": {\n    name_en: \"Daemons of Chaos\",\n    name_de: \"Daemons of Chaos\",\n  },\n  \"daemonic-gifts-common\": {\n    name_en: \"Chaotic Gifts\",\n    name_de: \"Chaotic Gifts\",\n  },\n  \"daemonic-gift-common\": {\n    name_en: \"Chaotic Gift\",\n    name_de: \"Chaotic Gift\",\n  },\n  \"daemonic-icons-common\": {\n    name_en: \"Chaotic Icons\",\n    name_de: \"Chaotic Icons\",\n  },\n  \"daemonic-icon-common\": {\n    name_en: \"Chaotic Icon\",\n    name_de: \"Chaotic Icon\",\n  },\n  \"daemonic-gifts-khorne\": {\n    name_en: \"Gifts Of Khorne\",\n    name_de: \"Gifts Of Khorne\",\n  },\n  \"daemonic-gift-khorne\": {\n    name_en: \"Gift Of Khorne\",\n    name_de: \"Gift Of Khorne\",\n  },\n  \"daemonic-icons-khorne\": {\n    name_en: \"Icons Of Khorne\",\n    name_de: \"Icons Of Khorne\",\n  },\n  \"daemonic-icon-khorne\": {\n    name_en: \"Icon Of Khorne\",\n    name_de: \"Icon Of Khorne\",\n  },\n  \"daemonic-gifts-nurgle\": {\n    name_en: \"Gifts Of Nurgle\",\n    name_de: \"Gifts Of Nurgle\",\n  },\n  \"daemonic-gift-nurgle\": {\n    name_en: \"Gift Of Nurgle\",\n    name_de: \"Gift Of Nurgle\",\n  },\n  \"daemonic-icons-nurgle\": {\n    name_en: \"Icons Of Nurgle\",\n    name_de: \"Icons Of Nurgle\",\n  },\n  \"daemonic-icon-nurgle\": {\n    name_en: \"Icon Of Nurgle\",\n    name_de: \"Icon Of Nurgle\",\n  },\n  \"daemonic-gifts-slaanesh\": {\n    name_en: \"Gifts Of Slaanesh\",\n    name_de: \"Gifts Of Slaanesh\",\n  },\n  \"daemonic-gift-slaanesh\": {\n    name_en: \"Gift Of Slaanesh\",\n    name_de: \"Gift Of Slaanesh\",\n  },\n  \"daemonic-icons-slaanesh\": {\n    name_en: \"Icons Of Slaanesh\",\n    name_de: \"Icons Of Slaanesh\",\n  },\n  \"daemonic-icon-slaanesh\": {\n    name_en: \"Icon Of Slaanesh\",\n    name_de: \"Icon Of Slaanesh\",\n  },\n  \"daemonic-gifts-tzeentch\": {\n    name_en: \"Gifts Of Tzeentch\",\n    name_de: \"Gifts Of Tzeentch\",\n  },\n  \"daemonic-gift-tzeentch\": {\n    name_en: \"Gift Of Tzeentch\",\n    name_de: \"Gift Of Tzeentch\",\n  },\n  \"daemonic-icons-tzeentch\": {\n    name_en: \"Icons Of Tzeentch\",\n    name_de: \"Icons Of Tzeentch\",\n  },\n  \"daemonic-icon-tzeentch\": {\n    name_en: \"Icon Of Tzeentch\",\n    name_de: \"Icon Of Tzeentch\",\n  },\n  \"forbidden-poisons\": {\n    name_en: \"Forbidden Poisons\",\n    name_de: \"Forbidden Poisons\",\n  },\n  \"gifts-of-khaine\": {\n    name_en: \"Gifts of Khaine\",\n    name_de: \"Gifts of Khaine\",\n  },\n  \"forbidden-poison\": {\n    name_en: \"Forbidden Poison\",\n    name_de: \"Forbidden Poison\",\n  },\n  \"gift-of-khaine\": {\n    name_en: \"Gift of Khaine\",\n    name_de: \"Gift of Khaine\",\n  },\n  \"ogre-kingdoms\": {\n    name_en: \"Ogre Kingdoms\",\n    name_de: \"Ogre Kingdoms\",\n  },\n  \"big-names\": {\n    name_en: \"Big Names\",\n    name_de: \"Big Names\",\n  },\n  \"big-name\": {\n    name_en: \"Big Name\",\n    name_de: \"Big Name\",\n  },\n  \"disciplines-old-ones\": {\n    name_en: \"Disciplines Of The Old Ones\",\n    name_de: \"Disciplines Of The Old Ones\",\n  },\n  \"discipline-old-ones\": {\n    name_en: \"Discipline Of The Old Ones\",\n    name_de: \"Discipline Of The Old Ones\",\n  },\n  lizardmen: {\n    name_en: \"Lizardmen\",\n    name_de: \"Lizardmen\",\n  },\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { RulesIndex, rulesMap } from \"../../components/rules-index\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { normalizeRuleName } from \"../../utils/string\";\nimport gameSystems from \"../../assets/armies.json\";\nimport {\n  isMultipleAllowedItem,\n  maxAllowedOfItem,\n} from \"../../utils/magic-item-limitations\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  let prevItemType, isFirstItemType;\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const { listId, type, unitId, command, group } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const armyId = unit?.army || list?.army;\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => armyId === id);\n  const items = useSelector((state) => state.items);\n  let maxMagicPoints = 0;\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleMagicChange = (event, magicItem, isCommand) => {\n    let magicItems;\n    const inputType = event.target.type;\n\n    if (event.target.checked) {\n      if (isCommand) {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.command[command].magic.selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      } else {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.items[group].selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      }\n    } else {\n      if (isCommand) {\n        magicItems = unit.command[command].magic.selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      } else {\n        magicItems = unit.items[group].selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      }\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n  const handleAmountChange = ({ event, parentId, isCommand }) => {\n    let magicItems;\n\n    if (isCommand) {\n      magicItems = (unit.command[command].magic.selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    } else {\n      magicItems = (unit.items[group].selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      list &&\n      unit &&\n      (!items || unit.army !== list.army) &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, list, unit, items, dispatch]);\n\n  if (!unit || !army || !items) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({\n    isChecked,\n    selectedAmount,\n    magicItem,\n    itemGroup,\n    isConditional,\n    isTypeLimitReached,\n  }) => {\n    const isCommand = Boolean(unit?.command[command]?.magic?.types.length);\n\n    const max = !maxMagicPoints\n      ? // No maximum of this item if there is no point max.\n        undefined\n      : maxAllowedOfItem(magicItem, selectedAmount, unitPointsRemaining);\n\n    return (\n      <Fragment key={magicItem.id}>\n        <div\n          className={classNames(\n            \"checkbox\",\n            isConditional && \"checkbox--conditional\"\n          )}\n        >\n          <input\n            type=\"checkbox\"\n            id={`${itemGroup.id}-${magicItem.id}`}\n            value={`${itemGroup.id}-${magicItem.id}`}\n            onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n            checked={isChecked}\n            className=\"checkbox__input\"\n            disabled={\n              !isChecked &&\n              // Sometimes there is no limit (often for magic banners),\n              // otherwise we need to check if the unit has enough points left.\n              ((maxMagicPoints && magicItem.points > unitPointsRemaining) ||\n                isTypeLimitReached)\n            }\n          />\n          <label\n            htmlFor={`${itemGroup.id}-${magicItem.id}`}\n            className=\"checkbox__label\"\n          >\n            <span className=\"magic__label-text\">\n              {magicItem[`name_${language}`] || magicItem.name_en}\n            </span>\n            <i className=\"checkbox__points\">{`${\n              magicItem.points\n            } ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n            {rulesMap[normalizeRuleName(magicItem.name_en)] ? (\n              <Button\n                type=\"text\"\n                className=\"magic__rules\"\n                color=\"dark\"\n                label={intl.formatMessage({ id: \"misc.showRules\" })}\n                icon=\"preview\"\n                onClick={() =>\n                  handleRulesClick({\n                    name: magicItem.name_en,\n                  })\n                }\n              />\n            ) : null}\n          </label>\n        </div>\n\n        {isMultipleAllowedItem(magicItem) && isChecked && max !== 1 && (\n          <NumberInput\n            id={`${itemGroup.id}-${magicItem.id}-amount`}\n            min={1}\n            max={isTypeLimitReached ? selectedAmount : max}\n            value={selectedAmount}\n            onChange={(event) => {\n              handleAmountChange({\n                parentId: `${itemGroup.id}-${magicItem.id}`,\n                event,\n                isCommand,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  let unitMagicPoints = 0;\n  const hasCommandMagicItems = Boolean(\n    unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.types.length\n  );\n  const hasMagicItems = Boolean(unit?.items?.length);\n\n  if (hasCommandMagicItems) {\n    maxMagicPoints = unit.command[command].magic.maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.command[command].magic.selected,\n    });\n  } else if (hasMagicItems) {\n    maxMagicPoints = unit.items[group].maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.items[group].selected,\n    });\n  }\n\n  const unitPointsRemaining = maxMagicPoints - unitMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <>\n          <Header\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n          <RulesIndex />\n        </>\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n        )}\n        {items.map((itemGroup) => {\n          const commandMagicItems = itemGroup.items.filter(\n            (item) =>\n              hasCommandMagicItems &&\n              unit.command[command].magic.types.includes(item.type)\n          );\n          const magicItems = itemGroup.items.filter(\n            (item) =>\n              hasMagicItems &&\n              !command &&\n              unit.items[group].types.includes(item.type)\n          );\n          const itemGroupItems = (\n            hasCommandMagicItems ? commandMagicItems : magicItems\n          ).filter(\n            (item) =>\n              (!maxMagicPoints || item.points <= maxMagicPoints) &&\n              (item?.armyComposition === list?.armyComposition ||\n                !item.armyComposition)\n          );\n\n          if (itemGroupItems.length > 0) {\n            prevItemType = null;\n            isFirstItemType = false;\n          }\n\n          const unitSelectedItems = hasCommandMagicItems\n            ? unit.command[command].magic.selected ?? []\n            : unit.items[group].selected ?? [];\n\n          return (\n            <Fragment key={itemGroup.name_de}>\n              {itemGroupItems.length > 0 && (\n                <h2 className=\"unit__subline\">\n                  {itemGroup[`name_${language}`] || itemGroup.name_en}\n                </h2>\n              )}\n              {itemGroupItems.map((magicItem) => {\n                if (prevItemType !== magicItem.type) {\n                  prevItemType = magicItem.type;\n                  isFirstItemType = true;\n                } else {\n                  isFirstItemType = false;\n                }\n\n                const selectedItem = unitSelectedItems.find(\n                  ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                );\n                let runesAmountInCategory = 0;\n\n                unitSelectedItems.forEach(({ type: itemType, amount }) => {\n                  if (itemType === magicItem.type) {\n                    runesAmountInCategory += amount ?? 1;\n                  }\n                });\n                const selectedAmount = selectedItem?.amount ?? 1;\n                const isChecked = Boolean(selectedItem);\n                const isRune = Boolean(magicItem.type.includes(\"runes\"));\n\n                const isTypeLimitReached = magicItem.nonExclusive\n                  ? false\n                  : unitSelectedItems.some(\n                      (item) =>\n                        (!magicItem.stackable &&\n                          !item.stackable &&\n                          item.type === magicItem.type &&\n                          !isRune) ||\n                        (isRune && runesAmountInCategory >= 3)\n                    );\n\n                return (\n                  <Fragment key={magicItem.name_de}>\n                    {isFirstItemType && (\n                      <h3 className=\"magic__type\">\n                        {nameMap[magicItem.type][`name_${language}`] ||\n                          nameMap[magicItem.type].name_en}\n                      </h3>\n                    )}\n                    {getCheckbox({\n                      magicItem,\n                      itemGroup,\n                      selectedAmount,\n                      isChecked,\n                      isTypeLimitReached,\n                    })}\n\n                    {magicItem.conditional && isChecked\n                      ? magicItem.conditional.map((conditionalItem) =>\n                          getCheckbox({\n                            magicItem: conditionalItem,\n                            itemGroup,\n                            selectedAmount,\n                            isChecked,\n                            isConditional: true,\n                            isTypeLimitReached,\n                          })\n                        )\n                      : null}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        })}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\nimport { nameMap } from \"../magic\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [armyComposition, setArmyComposition] = useState(\"empire-of-man\");\n  const [redirect, setRedirect] = useState(null);\n  const armies = gameSystems.filter(({ id }) => id === game)[0].armies;\n  const journalArmies = armies.find(({ id }) => army === id)?.armyComposition;\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n        armyComposition: armyComposition,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n    setArmyComposition(value);\n  };\n  const handleArcaneJournalChange = (value) => {\n    setArmyComposition(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <>\n                    <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                    <p className=\"new-list__beta\">Beta</p>\n                  </>\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={armies}\n            onChange={handleArmyChange}\n            selected=\"empire-of-man\"\n            spaceBottom\n            required\n          />\n          {journalArmies ? (\n            <>\n              <label htmlFor=\"arcane-journal\">\n                <FormattedMessage id=\"new.armyComposition\" />\n              </label>\n              <Select\n                id=\"arcane-journal\"\n                options={[\n                  {\n                    id: army,\n                    name_en: intl.formatMessage({ id: \"new.grandArmy\" }),\n                  },\n                  ...journalArmies.map((journalArmy) => ({\n                    id: journalArmy,\n                    name_en: nameMap[journalArmy].name_en,\n                    name_de: nameMap[journalArmy].name_de,\n                    name_es: nameMap[journalArmy].name_es,\n                    name_fr: nameMap[journalArmy].name_fr,\n                  })),\n                ]}\n                onChange={handleArcaneJournalChange}\n                selected={army}\n                spaceBottom\n              />\n            </>\n          ) : null}\n          <Button centered icon=\"add-list\" submitButton spaceBottom>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  \"grand-army\": {\n    lords: { maxPercent: 25 },\n    heroes: { maxPercent: 25 },\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: { maxPercent: 25 },\n  },\n  \"kingdom-of-bretonnia\": {\n    characters: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"duke\",\n          min: 0,\n          max: 1,\n        },\n        {\n          id: \"baron\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n        {\n          id: \"prophetees\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    core: {\n      minPercent: 25,\n      units: [\n        {\n          ids: [\"knights-of-the-realm\", \"mounted-knights-of-the-realm\"],\n          min: 1,\n        },\n        {\n          ids: [\"men-at-arms\", \"peasant-bowmen\"],\n          min: 1,\n        },\n      ],\n    },\n    special: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"battle-pilgrims\",\n          min: 0,\n          max: 2,\n          perPoints: 1000,\n        },\n      ],\n    },\n    rare: {\n      maxPercent: 25,\n      units: [\n        {\n          id: \"field-trebuchet\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: {\n      maxPercent: 25,\n      armies: [\n        \"errantry-crusades\",\n        \"bretonnian-exiles\",\n        \"dwarfen-mountain-holds\",\n        \"empire-of-man\",\n        \"high-elf-realms\",\n        \"wood-elf-realms\",\n      ],\n    },\n  },\n  \"errantry-crusades\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Empire Knights & Empire Inner Circle Knights ...\",\n    },\n  },\n  \"bretonnian-exiles\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 33,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Free Company Militia & Empire Archers ...\",\n    },\n  },\n  \"tomb-kings-of-khemri\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: {\n      maxPercent: 20,\n    },\n    allies: {\n      maxPercent: 25,\n    },\n  },\n  \"nehekharan-royal-hosts\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n  },\n  \"mortuary-cults\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n  },\n};\n\nexport const getMaxPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const categoryData = rules[armyComposition]\n    ? rules[armyComposition][type]\n    : rules[\"grand-army\"][type];\n\n  if (!categoryData) {\n    return null;\n  }\n\n  const maxPercent = categoryData.maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const minPercent = rules[armyComposition]\n    ? rules[armyComposition][type].minPercent\n    : rules[\"grand-army\"][type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const ListItem = forwardRef(\n  ({ to, onClick, children, className, active, ...attributes }, ref) => {\n    const Component = to ? Link : \"button\";\n\n    return (\n      <li\n        {...attributes}\n        ref={ref}\n        className={classNames(\"list\", active && \"list--active\", className)}\n      >\n        <Component to={to} className=\"list__inner\" onClick={onClick}>\n          {children}\n        </Component>\n      </li>\n    );\n  }\n);\n\nListItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n/**\n * A list that allows its children to be reordered by dragging and dropping.\n *\n * @example\n * ```jsx\n * <OrderableList\n *    id=\"items\"\n *    onMoved={({sourceIndex, destinationIndex}) =>\n *      swap(items, sourceIndex, destinationIndex)}\n * >\n *   {items.map((item) => (\n *      <li>{item}</li>\n *   ))}\n * </OrderableList>\n * ```\n *\n * @param {object} props\n * @param {React.ReactElement[]} props.children\n * @param {string} props.id\n */\nexport const OrderableList = ({ id, children, onMoved }) => {\n  const handleDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    onMoved({\n      sourceIndex: result.source.index,\n      destinationIndex: result.destination.index,\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId={`droppable-${id}`}>\n        {(provided, _snapshot) => (\n          <ol {...provided.droppableProps} ref={provided.innerRef}>\n            {/* We clone the children and add the drag handlers props */}\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child) ? (\n                <Draggable\n                  key={child.key}\n                  draggableId={child.key}\n                  index={index}\n                >\n                  {(provided, snapshot) => {\n                    // Block horizontal movement\n                    const style = provided.draggableProps.style;\n                    if (style.transform) {\n                      style.transform = style.transform.replace(/\\d+/, \"0\");\n                    }\n\n                    return React.cloneElement(child, {\n                      // Add a dragging attribute for styling\n                      ...(snapshot.isDragging && !snapshot.isDropAnimating\n                        ? { dragging: \"\" }\n                        : {}),\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                    });\n                  }}\n                </Draggable>\n              ) : (\n                child\n              )\n            )}\n            {provided.placeholder}\n          </ol>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n","import { nameMap } from \"../pages/magic\";\n\nexport const getAllOptions = (\n  {\n    mounts,\n    equipment,\n    armor,\n    options,\n    command,\n    items,\n    detachments,\n    activeLore,\n    lores,\n  },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = [];\n\n  if (command) {\n    command.forEach(({ active, magic, name_en, ...entry }) => {\n      if (active) {\n        allCommand.push(entry[`name_${language}`] || name_en);\n      }\n      if (active && magic && magic?.selected?.length) {\n        magic.selected.forEach((selectedItem) => {\n          allCommand.push(\n            selectedItem.amount > 1\n              ? `${selectedItem.amount}x ` + selectedItem[`name_${language}`] ||\n                  selectedItem.name_en\n              : selectedItem[`name_${language}`] || selectedItem.name_en\n          );\n        });\n      }\n    });\n  }\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active, equippedDefault }) => active || equippedDefault)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allArmor = armor\n    ? armor\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_en, stackableCount, ...item }) =>\n            `${stackableCount} ${item[`name_${language}`] || name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allItems = [];\n  if (items?.length) {\n    items.forEach((item) => {\n      (item.selected || []).forEach((selectedItem) => {\n        allItems.push(\n          selectedItem.amount > 1\n            ? `${selectedItem.amount}x ` +\n                (selectedItem[`name_${language}`] || selectedItem.name_en)\n            : selectedItem[`name_${language}`] || selectedItem.name_en\n        );\n      });\n    });\n  }\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(({ name_en, strength, equipment, armor, options, ...item }) => {\n          let equipmentSelection = [];\n\n          if (equipment && equipment.length) {\n            equipment.forEach((option) => {\n              (option.active || option.equippedDefault) &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (armor && armor.length) {\n            armor.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (options && options.length) {\n            options.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n\n          return `${strength} ${item[`name_${language}`] || name_en}${\n            equipmentSelection.length\n              ? ` (${equipmentSelection\n                  .map((option) => option.replace(\", \", \" + \"))\n                  .join(\" + \")})`\n              : \"\"\n          }`;\n        })\n    : [];\n  const lore = [];\n  if (activeLore) {\n    lore.push(\n      nameMap[activeLore][`name_${language}`] || nameMap[activeLore].name_en\n    );\n  } else if (lores?.length) {\n    lore.push(\n      nameMap[lores[0]][`name_${language}`] || nameMap[lores[0]].name_en\n    );\n  }\n\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allArmor,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allItems : []),\n    ...allDetachments,\n    ...lore,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \").replace(/\\*/g, \"\");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { Dialog } from \"../../components/dialog\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList, moveUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeFromLocalList, updateLocalList } from \"../../utils/list\";\nimport { ListItem } from \"../../components/list/ListItem\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const location = useLocation();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault();\n    setIsDialogOpen(false);\n  };\n\n  const handleDeleteConfirm = () => {\n    setIsDialogOpen(false);\n    dispatch(deleteList(listId));\n    removeFromLocalList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"lords\",\n      armyPoints: list.points,\n      points: lordsPoints,\n      armyComposition: list.armyComposition,\n    });\n  const heroesData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"heroes\",\n      armyPoints: list.points,\n      points: heroesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const charactersData =\n    list.characters &&\n    getMaxPercentData({\n      type: \"characters\",\n      armyPoints: list.points,\n      points: charactersPoints,\n      armyComposition: list.armyComposition,\n    });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n    armyComposition: list.armyComposition,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n    armyComposition: list.armyComposition,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n    armyComposition: list.armyComposition,\n  });\n  const mercenariesData =\n    list.mercenaries &&\n    getMaxPercentData({\n      type: \"mercenaries\",\n      armyPoints: list.points,\n      points: mercenariesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const alliesData =\n    list.allies &&\n    getMaxPercentData({\n      type: \"allies\",\n      armyPoints: list.points,\n      points: alliesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: () => setIsDialogOpen(true),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>\n        <p>\n          <FormattedMessage\n            id=\"editor.confirmDelete\"\n            values={{\n              list: <b>{list.name}</b>,\n            }}\n          />\n        </p>\n        <div className=\"editor__delete-dialog\">\n          <Button\n            type=\"text\"\n            onClick={handleDeleteClick}\n            icon=\"close\"\n            spaceTop\n            color=\"dark\"\n          >\n            <FormattedMessage id=\"misc.cancel\" />\n          </Button>\n          <Button\n            type=\"secondary\"\n            submitButton\n            onClick={handleDeleteConfirm}\n            icon=\"delete\"\n            spaceTop\n          >\n            <FormattedMessage id=\"misc.delete\" />\n          </Button>\n        </div>\n      </Dialog>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.lords}\n              type=\"lords\"\n              listId={listId}\n            />\n\n            <Button\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.heroes}\n              type=\"heroes\"\n              listId={listId}\n            />\n\n            <Button\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.characters}\n              type=\"characters\"\n              listId={listId}\n            />\n\n            <Button\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.core} type=\"core\" listId={listId} />\n\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList\n            units={list.special}\n            type=\"special\"\n            listId={listId}\n          />\n\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n\n          <OrderableUnitList units={list.rare} type=\"rare\" listId={listId} />\n\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.allies && alliesData && list?.army !== \"daemons-of-chaos\" && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n\n            <OrderableUnitList\n              units={list.allies}\n              type=\"allies\"\n              listId={listId}\n            />\n\n            <Button\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.mercenaries &&\n          mercenariesData &&\n          list.armyComposition &&\n          list.army !== list.armyComposition && (\n            <section className=\"editor__section\">\n              <header className=\"editor__header\">\n                <h2>\n                  <FormattedMessage id=\"editor.mercenaries\" />\n                </h2>\n                <p className=\"editor__points\">\n                  {mercenariesData.diff > 0 ? (\n                    <>\n                      <strong>{mercenariesData.diff}</strong>\n                      <FormattedMessage id=\"editor.tooManyPoints\" />\n                      <Icon symbol=\"error\" color=\"red\" />\n                    </>\n                  ) : (\n                    <>\n                      <strong>\n                        {mercenariesData.points - mercenariesPoints}\n                      </strong>\n                      <FormattedMessage id=\"editor.availablePoints\" />\n                      <Icon symbol=\"check\" />\n                    </>\n                  )}\n                </p>\n              </header>\n\n              <OrderableUnitList\n                units={list.mercenaries}\n                type=\"mercenaries\"\n                listId={listId}\n              />\n\n              <Button\n                centered\n                to={`/editor/${listId}/add/mercenaries`}\n                icon=\"add\"\n                spaceTop\n              >\n                <FormattedMessage id=\"editor.add\" />\n              </Button>\n            </section>\n          )}\n      </MainComponent>\n    </>\n  );\n};\n\n/**\n * @param {object} props\n * @param {object[]} props.units\n * @param {string} props.type\n * @param {string} props.listId\n */\nexport const OrderableUnitList = ({ units, type, listId }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n\n  const handleMoved = (indexes) =>\n    dispatch(\n      moveUnit({\n        listId,\n        type,\n        ...indexes,\n      })\n    );\n\n  return (\n    <OrderableList id={type} onMoved={handleMoved}>\n      {units.map((unit, index) => (\n        <ListItem\n          key={index}\n          to={`/editor/${listId}/${type}/${unit.id}`}\n          className=\"editor__list\"\n          active={location.pathname.includes(unit.id)}\n        >\n          <div className=\"editor__list-inner\">\n            {unit.strength || unit.minimum ? (\n              <span>{`${unit.strength || unit.minimum}`}</span>\n            ) : null}\n            <b>{unit[`name_${language}`] || unit.name_en}</b>\n            <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n          </div>\n          {getAllOptions(unit)}\n        </ListItem>\n      ))}\n    </OrderableList>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","export default __webpack_public_path__ + \"static/media/forg3d.33b515df.jpg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n// import { CustomEvent } from \"@piwikpro/react-piwik-pro\";\n\nimport { Button } from \"../../components/button\";\nimport { ListItem, OrderableList } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport { setArmy } from \"../../state/army\";\nimport { setItems } from \"../../state/items\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\nimport forg3dBanner from \"../../assets/forg3d.jpg\";\nimport { swap } from \"../../utils/collection\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblin-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const resetState = () => {\n    dispatch(setArmy(null));\n    dispatch(setItems(null));\n  };\n  const handleListMoved = ({ sourceIndex, destinationIndex }) => {\n    const newLists = swap(lists, sourceIndex, destinationIndex);\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    return dispatch(setLists(newLists));\n  };\n  const handleForg3dClick = () => {\n    // CustomEvent.trackEvent(\"affiliate_link\", \"click\", \"forg3d\");\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer: The Old World and\n          Warhammer Fantasy Battles\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/\" />\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <OrderableList id=\"armies\" onMoved={handleListMoved}>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <ListItem\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n                onClick={resetState}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </ListItem>\n            )\n          )}\n        </OrderableList>\n        <Button\n          centered\n          to=\"/new\"\n          icon=\"new-list\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n        <Button\n          centered\n          to=\"/import\"\n          type=\"text\"\n          icon=\"import\"\n          color=\"dark\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.import\" />\n        </Button>\n\n        <hr />\n\n        <p>\n          <b>\n            <i>\n              <FormattedMessage id=\"home.sponsored\" />\n            </i>\n          </b>\n        </p>\n        <a\n          className=\"home__banner-link\"\n          href=\"https://tinyurl.com/Forg3dOWB\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={handleForg3dClick}\n        >\n          <img\n            src={forg3dBanner}\n            className=\"home__banner-image\"\n            alt={intl.formatMessage({ id: \"home.forg3d\" })}\n            loading=\"lazy\"\n          />\n        </a>\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitMagicPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { RulesIndex, rulesMap } from \"../../components/rules-index\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { updateIds, getRandomId } from \"../../utils/id\";\nimport { normalizeRuleName } from \"../../utils/string\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachments =\n    army &&\n    [...army.core, ...army.special, ...army.rare].filter(\n      (coreUnit) => coreUnit.detachment\n    );\n  const handleRulesClick = ({ name }) => {\n    dispatch(openRulesIndex({ activeRule: name }));\n  };\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleAddDetachmentClick = ({ id }) => {\n    const detachment = detachments.find((detachment) => detachment.id === id);\n    const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n    unitDetachments.push({\n      id: `${id}.${getRandomId()}`,\n      name_de: detachment.name_de,\n      name_en: detachment.name_en,\n      points: detachment.points,\n      strength: detachment.minDetachmentSize || 5,\n      minDetachmentSize: detachment.minDetachmentSize || 5,\n      maxDetachmentSize: detachment.maxDetachmentSize,\n      equipment: detachment.equipment,\n      armor: detachment.armor,\n      options: detachment.options,\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDeleteDetachmentClick = ({ id }) => {\n    const unitDetachments = [...unit.detachments].filter(\n      (detachment) => detachment.id !== id\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentStrengthClick = ({ id, strength }) => {\n    const unitDetachments = [...unit.detachments].map((detachment) =>\n      detachment.id === id ? { ...detachment, strength } : detachment\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentEquipmentChange = ({\n    detachmentId,\n    equipmentId,\n    category,\n    isCheckbox,\n  }) => {\n    const unitDetachments = [...unit.detachments].map((detachment) => {\n      if (detachment.id === detachmentId) {\n        const equipment = detachment[category].map((item) => {\n          let active = false;\n\n          if (isCheckbox && item.id === equipmentId) {\n            active = !item.active;\n          } else if (item.id === equipmentId) {\n            active = true;\n          } else if (isCheckbox) {\n            active = item.active;\n          }\n\n          return {\n            ...item,\n            active,\n          };\n        });\n\n        return { ...detachment, [category]: equipment };\n      }\n\n      return detachment;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleArmorChange = (id) => {\n    const armor = unit.armor.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        armor,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n  const handleLoresChange = (lore) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        activeLore: lore,\n      })\n    );\n  };\n  const getRulesLinksText = (textObject) => {\n    const textEn = textObject.name_en.split(\", \");\n    const ruleString = textObject[`name_${language}`] || textObject.name_en;\n    let ruleButtons = ruleString.split(\", \");\n\n    ruleButtons = ruleButtons.map((rule, index) => (\n      <Fragment key={rule}>\n        {rulesMap[normalizeRuleName(textEn[index])] ? (\n          <button\n            className=\"unit__rule\"\n            onClick={() =>\n              dispatch(openRulesIndex({ activeRule: textEn[index] }))\n            }\n          >\n            {rule}\n            {index !== ruleButtons.length - 1 && \", \"}\n          </button>\n        ) : (\n          <>\n            {rule}\n            {index !== ruleButtons.length - 1 && \", \"}\n          </>\n        )}\n      </Fragment>\n    ));\n\n    return ruleButtons;\n  };\n  const getRulesIcon = (textObject) => {\n    const textEn = textObject.name_en.split(\", \");\n    const ruleString = textObject[`name_${language}`] || textObject.name_en;\n    let ruleButtons = ruleString.split(\", \");\n\n    ruleButtons = ruleButtons.map((rule, index) => (\n      <Fragment key={rule}>\n        {rulesMap[normalizeRuleName(textEn[index])] ? (\n          <span className=\"unit__rule-wrapper\">\n            {rule}\n            <Button\n              type=\"text\"\n              className=\"unit__rules\"\n              color=\"dark\"\n              label={intl.formatMessage({ id: \"misc.showRules\" })}\n              icon=\"preview\"\n              onClick={() =>\n                handleRulesClick({\n                  name: rule,\n                })\n              }\n            />\n            {index !== ruleButtons.length - 1 && \",\"}\n          </span>\n        ) : (\n          <>\n            {rule}\n            {index !== ruleButtons.length - 1 && \", \"}\n          </>\n        )}\n      </Fragment>\n    ));\n\n    return ruleButtons;\n  };\n  const getPointsText = ({ points, perModel }) => {\n    if (points === 0) {\n      return intl.formatMessage({\n        id: \"app.free\",\n      });\n    }\n\n    return (\n      <>\n        {`${points} ${\n          points === 1\n            ? intl.formatMessage({\n                id: \"app.point\",\n              })\n            : intl.formatMessage({\n                id: \"app.points\",\n              })\n        }`}\n        {perModel &&\n          type !== \"characters\" &&\n          ` ${intl.formatMessage({\n            id: \"unit.perModel\",\n          })}`}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`] || unit.name_en}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <RulesIndex />\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          (!unit.lores || (unit.lores && !unit.lores.length)) &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.armor || (unit.armor && !unit.armor.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic ||\n            (unit.magic && !unit.magic.maxPoints && !unit.items?.length)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.notes && unit.notes.name_en ? (\n          <p className=\"unit__notes\">\n            <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n            {unit.notes[`name_${language}`] || unit.notes.name_en}\n          </p>\n        ) : null}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            {type !== \"characters\" && (\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n            )}\n            {unit.command.map(\n              (\n                { points, perModel, id, active = false, magic, ...command },\n                index\n              ) => {\n                const commandMagicPoints = getUnitMagicPoints({\n                  selected: magic?.selected,\n                });\n\n                return (\n                  <Fragment key={id}>\n                    <div\n                      className={classNames(\n                        \"checkbox\",\n                        type === \"characters\" && \"unit__bsb\"\n                      )}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        <span className=\"unit__label-text\">\n                          {getRulesIcon(command).map((item) => item)}\n                        </span>\n                        <i className=\"checkbox__points\">\n                          {getPointsText({ points })}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.types && magic.types.length && active ? (\n                      <>\n                        <hr className=\"unit__hr\" />\n                        <ListItem\n                          to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link unit__command-list\"\n                          active={location.pathname.includes(`magic/${index}`)}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (itemType) =>\n                                    nameMap[itemType][`name_${language}`] ||\n                                    nameMap[itemType].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    unit.command[index].magic.maxPoints > 0 &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {commandMagicPoints}\n                              </span>{\" \"}\n                              {unit.command[index].magic.maxPoints > 0 && (\n                                <>{` / ${unit.command[index].magic.maxPoints}`}</>\n                              )}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints &&\n                              unit.command[index].magic.maxPoints > 0 && (\n                                <Icon\n                                  symbol=\"error\"\n                                  color=\"red\"\n                                  className=\"unit__magic-icon\"\n                                />\n                              )}\n                          </div>\n                          {magic?.selected && (\n                            <p>\n                              {magic.selected\n                                .map((selectedItem) =>\n                                  selectedItem.amount > 1\n                                    ? `${selectedItem.amount}x ` +\n                                      (selectedItem[`name_${language}`] ||\n                                        selectedItem.name_en)\n                                    : selectedItem[`name_${language}`] ||\n                                      selectedItem.name_en\n                                )\n                                .join(\", \")\n                                .replace(/\\*/g, \"\")}\n                            </p>\n                          )}\n                        </ListItem>\n                      </>\n                    ) : null}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      {getRulesIcon(equipment).map((item) => item)}\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.armor && unit.armor.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.armor\" />\n            </h2>\n            {unit.armor.map(\n              ({ points, perModel, id, active = false, ...equipment }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`armor-${id}`}\n                    name=\"armor\"\n                    value={id}\n                    onChange={() => handleArmorChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`armor-${id}`} className=\"radio__label\">\n                    <span className=\"unit__label-text\">\n                      {getRulesIcon(equipment).map((item) => item)}\n                    </span>\n                    <i className=\"checkbox__points\">\n                      {getPointsText({ points, perModel })}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n                ...equipment\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      <span className=\"unit__label-text\">\n                        {getRulesIcon(equipment).map((item) => item)}\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      <span className=\"unit__label-text\">\n                        {getRulesIcon(equipment).map((item) => item)}\n                      </span>\n                      <i className=\"checkbox__points\">\n                        {getPointsText({ points, perModel })}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_en, id, ...detachment }) => (\n              <Fragment key={id}>\n                <div className=\"list\">\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {detachment[`name_${language}`] || name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                      disabled={\n                        unit?.detachments?.length >= unit.maxDetachments\n                      }\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(\n                      ({\n                        name_en,\n                        strength,\n                        id,\n                        points,\n                        minDetachmentSize,\n                        maxDetachmentSize,\n                        equipment: detachmentEquipment,\n                        armor: detachmentArmor,\n                        options: detachmentOptions,\n                        ...detachment\n                      }) => (\n                        <div\n                          className=\"list unit__detachments-wrapper\"\n                          key={id}\n                        >\n                          <div className=\"list__inner unit__detachments\">\n                            <NumberInput\n                              noError\n                              id={`strength-${id}`}\n                              min={minDetachmentSize || 5}\n                              max={\n                                maxDetachmentSize ||\n                                Math.floor(unit.strength / 2)\n                              }\n                              value={strength}\n                              onChange={(event) =>\n                                handleDetachmentStrengthClick({\n                                  id,\n                                  strength: event.target.value,\n                                })\n                              }\n                            />\n                            <span>\n                              <b>{detachment[`name_${language}`] || name_en}</b>\n                              <i>{getPointsText({ points })}</i>\n                            </span>\n                            <Button\n                              onClick={() =>\n                                handleDeleteDetachmentClick({\n                                  id,\n                                })\n                              }\n                              type=\"secondary\"\n                              icon=\"close\"\n                              label={intl.formatMessage({ id: \"misc.remove\" })}\n                              size=\"small\"\n                            />\n                          </div>\n                          <div className=\"unit__detachments-section\">\n                            {detachmentEquipment &&\n                              detachmentEquipment.length > 0 && (\n                                <>\n                                  <h3 className=\"unit__subline\">\n                                    <FormattedMessage id=\"unit.equipment\" />\n                                  </h3>\n                                  {detachmentEquipment.map((equipment) => (\n                                    <div className=\"radio\" key={equipment.id}>\n                                      <input\n                                        type=\"radio\"\n                                        id={`equipment-${id}-${equipment.id}`}\n                                        name={`equipment-${id}`}\n                                        value={equipment.id}\n                                        onChange={() =>\n                                          handleDetachmentEquipmentChange({\n                                            detachmentId: id,\n                                            equipmentId: equipment.id,\n                                            category: \"equipment\",\n                                          })\n                                        }\n                                        checked={equipment.active || false}\n                                        className=\"radio__input\"\n                                      />\n                                      <label\n                                        htmlFor={`equipment-${id}-${equipment.id}`}\n                                        className=\"radio__label\"\n                                      >\n                                        <span className=\"unit__label-text\">\n                                          {getRulesIcon(equipment).map(\n                                            (item) => item\n                                          )}\n                                        </span>\n                                        <i className=\"checkbox__points\">\n                                          {getPointsText({\n                                            points: equipment.points,\n                                            perModel: equipment.perModel,\n                                          })}\n                                        </i>\n                                      </label>\n                                    </div>\n                                  ))}\n                                </>\n                              )}\n                            {detachmentArmor && detachmentArmor.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.armor\" />\n                                </h3>\n                                {detachmentArmor.map((armor) => (\n                                  <div className=\"radio\" key={armor.id}>\n                                    <input\n                                      type=\"radio\"\n                                      id={`armor-${id}-${armor.id}`}\n                                      name={`armor-${id}`}\n                                      value={armor.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: armor.id,\n                                          category: \"armor\",\n                                        })\n                                      }\n                                      checked={armor.active}\n                                      className=\"radio__input\"\n                                    />\n                                    <label\n                                      htmlFor={`armor-${id}-${armor.id}`}\n                                      className=\"radio__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        {getRulesIcon(armor).map(\n                                          (item) => item\n                                        )}\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: armor.points,\n                                          perModel: armor.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                            {detachmentOptions && detachmentOptions.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.options\" />\n                                </h3>\n                                {detachmentOptions.map((option) => (\n                                  <div className=\"checkbox\" key={option.id}>\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`options-${id}-${option.id}`}\n                                      value={option.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: option.id,\n                                          category: \"options\",\n                                          isCheckbox: true,\n                                        })\n                                      }\n                                      checked={option.active || false}\n                                      className=\"checkbox__input\"\n                                    />\n                                    <label\n                                      htmlFor={`options-${id}-${option.id}`}\n                                      className=\"checkbox__label\"\n                                    >\n                                      <span className=\"unit__label-text\">\n                                        {getRulesIcon(option).map(\n                                          (item) => item\n                                        )}\n                                      </span>\n                                      <i className=\"checkbox__points\">\n                                        {getPointsText({\n                                          points: option.points,\n                                          perModel: option.perModel,\n                                        })}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )\n                    )}\n              </Fragment>\n            ))}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(({ points, id, active = false, ...mount }) => (\n              <div className=\"radio\" key={id}>\n                <input\n                  type=\"radio\"\n                  id={`mounts-${id}`}\n                  name=\"mounts\"\n                  value={id}\n                  onChange={() => handleMountsChange(id)}\n                  checked={active}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                  <span className=\"unit__label-text\">\n                    {getRulesIcon(mount).map((item) => item)}\n                  </span>\n                  <i className=\"checkbox__points\">\n                    {getPointsText({ points })}\n                  </i>\n                </label>\n              </div>\n            ))}\n          </>\n        )}\n        {unit.lores && unit.lores.length ? (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.lore\" />\n            </h2>\n            {unit.lores.map((lore) => (\n              <div className=\"radio\" key={lore}>\n                <input\n                  type=\"radio\"\n                  id={`lore-${lore}`}\n                  name=\"lores\"\n                  value={lore}\n                  onChange={() => handleLoresChange(lore)}\n                  checked={(unit.activeLore || unit.lores[0]) === lore}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                  {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  {rulesMap[normalizeRuleName(nameMap[lore].name_en)] ? (\n                    <Button\n                      type=\"text\"\n                      className=\"unit__rules\"\n                      color=\"dark\"\n                      label={intl.formatMessage({ id: \"misc.showRules\" })}\n                      icon=\"preview\"\n                      onClick={() =>\n                        handleRulesClick({\n                          name: nameMap[lore].name_en,\n                        })\n                      }\n                    />\n                  ) : null}\n                </label>\n              </div>\n            ))}\n          </>\n        ) : null}\n        {unit.items && unit.items.length ? (\n          <hr className=\"unit__hr unit__hr--space-top\" />\n        ) : null}\n        {unit.items && unit.items.length\n          ? unit.items.map((item, itemIndex) => {\n              const itemsPoints = getUnitMagicPoints({\n                selected: item.selected,\n              });\n\n              return (\n                <ListItem\n                  to={`/editor/${listId}/${type}/${unitId}/items/${itemIndex}`}\n                  className=\"editor__list unit__link\"\n                  active={location.pathname.includes(`items/${itemIndex}`)}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span\n                        className={classNames(\n                          itemsPoints > item.maxPoints &&\n                            item.maxPoints > 0 &&\n                            \"editor__error\"\n                        )}\n                      >\n                        {itemsPoints}\n                      </span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                    {itemsPoints > item.maxPoints && item.maxPoints > 0 && (\n                      <Icon\n                        symbol=\"error\"\n                        color=\"red\"\n                        className=\"unit__magic-icon\"\n                      />\n                    )}\n                  </div>\n                  {item.selected && (\n                    <p>\n                      {item.selected\n                        .map((selectedItem) =>\n                          selectedItem.amount > 1\n                            ? `${selectedItem.amount}x ` +\n                              (selectedItem[`name_${language}`] ||\n                                selectedItem.name_en)\n                            : selectedItem[`name_${language}`] ||\n                              selectedItem.name_en\n                        )\n                        .join(\", \")\n                        .replace(/\\*/g, \"\")}\n                    </p>\n                  )}\n                </ListItem>\n              );\n            })\n          : null}\n        {unit.specialRules && unit.specialRules.name_en ? (\n          <>\n            <h2 className=\"unit__subline unit__subline--space-before\">\n              <FormattedMessage id=\"unit.specialRules\" />\n            </h2>\n            <p>{getRulesLinksText(unit.specialRules).map((item) => item)}</p>\n          </>\n        ) : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n          interval={50}\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { loadScript } from \"../../utils/script\";\n\nimport \"./About.css\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    loadScript(\"https://www.paypalobjects.com/donate/sdk/donate-sdk.js\", () => {\n      window.PayPal.Donation.Button({\n        env: \"production\",\n        hosted_button_id: \"VU2Z6Q32Q656A\",\n        image: {\n          src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\",\n          alt: \"Donate with PayPal button\",\n          title: \"PayPal - The safer, easier way to pay online!\",\n        },\n      }).render(\"#donate-button\");\n    });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/about\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage id=\"about.donation\" />\n        </p>\n        <div id=\"donate-button-container\" className=\"about__donation\">\n          <div id=\"donate-button\"></div>\n        </div>\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.rulesIndex\"\n            values={{\n              rulesIndex: (\n                <a\n                  href=\"https://www.whfb.app/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Online Rules Index\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <br />\n        <p>\n          <b>\n            <FormattedMessage id=\"about.disclaimer\" />\n          </b>\n        </p>\n        <p>\n          Warhammer: the Old World, Citadel, Forge World, Games Workshop, GW,\n          Warhammer, the 'winged-hammer' Warhammer logo, the Chaos devices, the\n          Chaos logo, Citadel Device, the Double-Headed/Imperial Eagle device,\n          'Eavy Metal, Games Workshop logo, Golden Demon, Great Unclean One, the\n          Hammer of Sigmar logo, Horned Rat logo, Keeper of Secrets, Khemri,\n          Khorne, Lord of Change, Nurgle, Skaven, the Skaven symbol devices,\n          Slaanesh, Tomb Kings, Trio of Warriors, Twin Tailed Comet Logo,\n          Tzeentch, Warhammer Online, Warhammer World logo, White Dwarf, the\n          White Dwarf logo, and all associated logos, marks, names, races, race\n          insignia, characters, vehicles, locations, units, illustrations and\n          images from the Warhammer world are either ®, TM and/or © Copyright\n          Games Workshop Ltd 2000-2024, variably registered in the UK and other\n          countries around the world. Used without permission. No challenge to\n          their status intended. All Rights Reserved to their respective owners.\n        </p>\n      </Main>\n    </>\n  );\n};\n","export const loadScript = (src, done) => {\n  const js = document.createElement(\"script\");\n\n  js.src = src;\n  js.onload = function () {\n    done && done();\n  };\n  js.onerror = function () {\n    done && done(new Error(\"Failed to load script \" + src));\n  };\n  document.head.appendChild(js);\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { ListItem } from \"../../components/list\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nconst getArmyData = ({ data, armyComposition }) => {\n  // Remove units that don't belong to the army composition\n  const characters = data.characters.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const core = data.core.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const special = data.special.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const rare = data.rare.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n\n  // Get units moving category\n  const specialToCore = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"core\"\n  );\n  const rareToCore = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n  const rareToSpecial = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const coreToSpecial = core.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const specialToRare = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n\n  // Remove units from old category\n  const allCore = [...core, ...specialToCore, ...rareToCore].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"core\") ||\n      !unit.armyComposition\n  );\n  const allSpecial = [...special, ...coreToSpecial, ...rareToSpecial].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"special\") ||\n      !unit.armyComposition\n  );\n  const allRare = [...rare, ...specialToRare].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"rare\") ||\n      !unit.armyComposition\n  );\n\n  return {\n    lords: updateIds(data.lords),\n    heroes: updateIds(data.heroes),\n    characters: updateIds(characters),\n    core: updateIds(allCore),\n    special: updateIds(allSpecial),\n    rare: updateIds(allRare),\n    mercenaries: updateIds(data.mercenaries),\n    allies: updateIds(data.allies),\n  };\n};\n\nlet allAllies = [];\nlet allMercenaries = [];\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const [alliesLoaded, setAlliesLoaded] = useState(0);\n  const [mercenariesLoaded, setMercenariesLoaded] = useState(0);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const game = gameSystems.find((game) => game.id === list?.game);\n  const armyData = game?.armies.find((army) => army.id === list.army);\n  const allies = armyData?.allies;\n  const mercenaries = armyData?.mercenaries;\n  const handleAdd = (unit, ally) => {\n    const newUnit = {\n      ...unit,\n      army: ally,\n      id: `${unit.id}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit: newUnit }));\n    setRedirect(newUnit.id);\n  };\n  const getUnit = (unit, ally) => (\n    <ListItem key={unit.id} onClick={() => handleAdd(unit, ally)}>\n      <span className=\"unit__name\">\n        {unit.minimum ? `${unit.minimum} ` : null}\n        <b>{unit[`name_${language}`] || unit.name_en}</b>\n      </span>\n      <i className=\"unit__points\">{`${\n        unit.minimum ? unit.points * unit.minimum : unit.points\n      } ${intl.formatMessage({\n        id: \"app.points\",\n      })}`}</i>\n    </ListItem>\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    allAllies = [];\n    allMercenaries = [];\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list && !army && type !== \"allies\") {\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          const armyData = getArmyData({\n            data,\n            armyComposition: list.armyComposition || list.army,\n          });\n          dispatch(setArmy(armyData));\n        },\n      });\n    } else if (list && type === \"allies\" && allAllies.length === 0 && allies) {\n      setAlliesLoaded(false);\n      allies.forEach((ally, index) => {\n        fetcher({\n          url: `games/${list.game}/${ally}`,\n          onSuccess: (data) => {\n            const armyData = getArmyData({\n              data,\n              armyComposition: ally,\n            });\n            allAllies = [...allAllies, { ...armyData, ally }];\n            setAlliesLoaded(index + 1);\n          },\n        });\n      });\n    } else if (\n      list &&\n      type === \"mercenaries\" &&\n      allMercenaries.length === 0 &&\n      mercenaries\n    ) {\n      setMercenariesLoaded(false);\n      mercenaries[list.armyComposition] &&\n        mercenaries[list.armyComposition].forEach((mercenary, index) => {\n          fetcher({\n            url: `games/${list.game}/${mercenary.army}`,\n            onSuccess: (data) => {\n              const armyData = getArmyData({\n                data,\n                armyComposition: mercenary.army,\n              });\n              const allUnits = [\n                ...armyData.characters,\n                ...armyData.core,\n                ...armyData.special,\n                ...armyData.rare,\n              ];\n              const mercenaryUnits = allUnits.filter((unit) =>\n                mercenary.units.includes(unit.id)\n              );\n              allMercenaries = [...allMercenaries, ...mercenaryUnits].map(\n                (mercenaryUnit) => ({ ...mercenaryUnit, army: mercenary.army })\n              );\n              setMercenariesLoaded(index + 1);\n            },\n          });\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [list, army, allies, type]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect}`} />;\n  }\n\n  if (\n    (!army && type !== \"allies\" && type !== \"mercenaries\") ||\n    (type === \"allies\" &&\n      !allies &&\n      alliesLoaded === 0 &&\n      allAllies.length !== allies?.length) ||\n    (type === \"mercenaries\" &&\n      !mercenaries &&\n      mercenariesLoaded === 0 &&\n      allMercenaries.length !== mercenaries?.length)\n  ) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        {type === \"allies\" && (\n          <>\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              <FormattedMessage id=\"add.alliesInfo\" />\n            </p>\n            <ul>\n              {allAllies.map(\n                ({ characters, core, special, rare, ally }, index) => (\n                  <Fragment key={index}>\n                    <header className=\"editor__header\">\n                      <h2>\n                        {game?.armies.find((army) => army.id === ally)[\n                          `name_${language}`\n                        ] ||\n                          game?.armies.find((army) => army.id === ally).name_en}\n                      </h2>\n                    </header>\n                    {characters.map((unit) => getUnit(unit, ally))}\n                    {core.map((unit) => getUnit(unit, ally))}\n                    {special.map((unit) => getUnit(unit, ally))}\n                    {rare.map((unit) => getUnit(unit, ally))}\n                  </Fragment>\n                )\n              )}\n            </ul>\n          </>\n        )}\n        {type === \"mercenaries\" && (\n          <ul>{allMercenaries.map((unit) => getUnit(unit, unit.army))}</ul>\n        )}\n        {type !== \"allies\" && type !== \"mercenaries\" && (\n          <ul>{army[type].map((unit) => getUnit(unit))}</ul>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/help\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { nameMap } from \"../magic\";\n\nconst getUnitsString = ({\n  units,\n  isShowList,\n  isCompactList,\n  showSpecialRules,\n  intl,\n  language,\n}) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n      let optionsString = \"\";\n\n      if (allOptions) {\n        if (isCompactList) {\n          optionsString = `(${allOptions})\\n`;\n        } else {\n          optionsString = `- ${allOptions.split(\", \").join(\"\\n- \")}\\n`;\n        }\n      }\n      if (showSpecialRules && unit.specialRules) {\n        optionsString += `${intl.formatMessage({\n          id: \"unit.specialRules\",\n        })}: ${\n          unit.specialRules[`name_${language}`] || unit.specialRules.name_en\n        }\\n`;\n      }\n\n      // prettier-ignore\n      return `${unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n}${unit[`name_${language}`] || unit.name_en}${isShowList ? '' : ' [' + getUnitPoints(unit) + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${optionsString}\n`;\n    })\n    .join(\"\");\n};\n\nexport const getListAsText = ({\n  list,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n  showSpecialRules,\n}) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const armyCompositionString = armyCompositionName\n    ? `, ${armyCompositionName}`\n    : \"\";\n  let listString = \"\";\n\n  // HEADER\n  // prettier-ignore\n  if (!isCompactList) {\n    listString += `===\n${list.name}${isShowList ? '' : ' [' + allPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${game.name}, ${armyName}${armyCompositionString}\n===\n\n`;\n  }\n\n  // CHARACTERS\n  // prettier-ignore\n  if (list.characters?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})}${isShowList ? '' : ' [' + charactersPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.characters,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // LORDS\n  // prettier-ignore\n  if (list.lords?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})}${isShowList ? '' : ' [' + lordsPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.lords,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // HEROES\n  // prettier-ignore\n  if (list.heroes?.length) {\n      listString += `++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})}${isShowList ? '' : ' [' + heroesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.heroes,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // CORE\n  // prettier-ignore\n  if (list.core.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.core\",\n})}${isShowList ? '' : ' [' + corePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.core,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // SPECIAL\n  // prettier-ignore\n  if (list.special.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.special\",\n})}${isShowList ? '' : ' [' + specialPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.special,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // RARE\n  // prettier-ignore\n  if (list.rare.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})}${isShowList ? '' : ' [' + rarePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.rare,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // MERCENARIES\n  // prettier-ignore\n  if (list.mercenaries?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})}${isShowList ? '' : ' [' + mercenariesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.mercenaries,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // ALLIES\n  // prettier-ignore\n  if (list.allies?.length) {\n  listString += `++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})}${isShowList ? '' : ' [' + alliesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n\n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.allies,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  listString += `---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n\n  return listString;\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport { getListAsText } from \"./get-list-as-text\";\n// import { getListAsMarkdown } from \"./get-list-as-markdown\";\nimport \"./Export.css\";\n\nconst getFile = ({ list, listText, asText }) => {\n  const fileName = `${list?.name\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/,/g, \"\")}.${asText ? \"txt\" : \"owb.json\"}`;\n  const file = new File([asText ? listText : JSON.stringify(list)], fileName, {\n    type: asText ? \"text/plain\" : \"application/json\",\n  });\n  const fileUrl = URL.createObjectURL(file);\n\n  return {\n    file,\n    fileUrl,\n    fileName,\n  };\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const { listId } = useParams();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [shareOwbError, setOwbShareError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [isCompactList, setIsCompactList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  // const [isMarkdownList, setIsMarkdownList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({\n        list,\n        isShowList,\n        isCompactList,\n        showSpecialRules,\n        intl,\n        language,\n      })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const { file, fileUrl, fileName } = getFile({ list });\n  const { fileName: textFileName, fileUrl: textFileUrl } = getFile({\n    list,\n    listText,\n    asText: true,\n  });\n  const share = async ({ asText }) => {\n    const shareData = {};\n\n    asText ? setShareError(false) : setOwbShareError(false);\n\n    if (asText) {\n      shareData.text = listText;\n    } else {\n      shareData.title = list.name;\n      shareData.files = [file];\n      shareData.text = list.description;\n    }\n\n    if (!navigator.canShare) {\n      asText ? setShareError(true) : setOwbShareError(true);\n      return;\n    }\n\n    try {\n      await navigator.share(shareData);\n    } catch (error) {\n      asText ? setShareError(true) : setOwbShareError(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.copyTitle\" />\n        </h2>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"compact\"\n            onChange={() => setIsCompactList(!isCompactList)}\n            checked={isCompactList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"compact\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.compactList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.compactListDescription\" />\n          </i>\n        </p>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.visibleListDescription\" />\n          </i>\n        </p>\n        {/* <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"forum\"\n            onChange={() => setIsForumList(!isForumList)}\n            checked={isForumList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"forum\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.forumText\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.forumTextDescription\" />\n          </i>\n        </p> */}\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"specialRules\"\n            onChange={() => setShowSpecialRules(!showSpecialRules)}\n            checked={showSpecialRules}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.specialRules\" />\n          </label>\n        </div>\n        <p className=\"export__description\"></p>\n        <Expandable headline={<FormattedMessage id=\"export.preview\" />}>\n          <textarea className=\"export__text\" value={listText} readOnly />\n        </Expandable>\n        <Button icon=\"share\" onClick={() => share({ asText: true })}>\n          <FormattedMessage id=\"export.shareText\" />\n        </Button>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          onClick={copyText}\n          spaceTop\n          spaceBottom\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        <br />\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button icon=\"download\" href={textFileUrl} download={textFileName}>\n          <FormattedMessage id=\"export.downloadAsText\" />\n        </Button>\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.owbTitle\" />\n        </h2>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.dowloadInfo\" />\n          </i>\n        </p>\n        <Button\n          icon=\"download\"\n          href={fileUrl}\n          download={fileName}\n          spaceBottom\n          spaceTop\n        >\n          <FormattedMessage id=\"export.download\" />\n        </Button>\n        <br />\n        <Button icon=\"share\" onClick={share}>\n          <FormattedMessage id=\"export.shareOwb\" />\n        </Button>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareOwbError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { nameMap } from \"../magic\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const army = game.armies.find((army) => army.id === list.army);\n  const armyName = army[`name_${language}`] || army.name_en;\n  const armyCompositionName =\n    list.army !== list.armyComposition && nameMap[list.armyComposition]\n      ? nameMap[list.armyComposition][`name_${language}`] ||\n        nameMap[list.armyComposition].name_en\n      : \"\";\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Button\n          to={`/editor/${listId}`}\n          centered\n          icon=\"back\"\n          spaceTop\n          spaceBottom\n        >\n          <FormattedMessage id=\"header.back\" />\n        </Button>\n        {isPrinting ? (\n          <p className=\"print-info\">\n            <FormattedMessage id=\"print.printing\" />\n          </p>\n        ) : (\n          <>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"show\"\n                onChange={() => setIsShowList(!isShowList)}\n                checked={isShowList}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"show\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.visibleList\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\">\n              <i>\n                <FormattedMessage id=\"export.visibleListDescription\" />\n              </i>\n            </p>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"specialRules\"\n                onChange={() => setShowSpecialRules(!showSpecialRules)}\n                checked={showSpecialRules}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.specialRules\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\"></p>\n            <Button\n              onClick={handlePrintClick}\n              centered\n              icon=\"print\"\n              spaceTop\n              spaceBottom\n            >\n              <FormattedMessage id=\"misc.print\" />\n            </Button>\n          </>\n        )}\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n          {armyCompositionName ? `, ${armyCompositionName}` : \"\"}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.characters\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            <ul>\n              {list.characters.map((unit) => (\n                <li key={unit.id}>\n                  <h3>\n                    {unit[`name_${language}`] || unit.name_en}\n                    {!isShowList && (\n                      <span className=\"print__points\">\n                        [{getUnitPoints(unit)}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h3>\n                  {getAllOptions(unit)}\n                  {showSpecialRules && unit.specialRules ? (\n                    <p className=\"print__special-rules\">\n                      <b>\n                        <FormattedMessage id=\"unit.specialRules\" />:\n                      </b>{\" \"}\n                      <i>\n                        {unit.specialRules[`name_${language}`] ||\n                          unit.specialRules.name_en}\n                      </i>\n                    </p>\n                  ) : null}\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.lords.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p className=\"print__special-rules\">\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        <i>\n                          {unit.specialRules[`name_${language}`] ||\n                            unit.specialRules.name_en}\n                        </i>\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.heroes.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p className=\"print__special-rules\">\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        <i>\n                          {unit.specialRules[`name_${language}`] ||\n                            unit.specialRules.name_en}\n                        </i>\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{corePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p className=\"print__special-rules\">\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    <i>\n                      {unit.specialRules[`name_${language}`] ||\n                        unit.specialRules.name_en}\n                    </i>\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{specialPoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p className=\"print__special-rules\">\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    <i>\n                      {unit.specialRules[`name_${language}`] ||\n                        unit.specialRules.name_en}\n                    </i>\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{rarePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p className=\"print__special-rules\">\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    <i>\n                      {unit.specialRules[`name_${language}`] ||\n                        unit.specialRules.name_en}\n                    </i>\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        {list.game === \"the-old-world\" && (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.allies.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit.strength || unit.minimum ? (\n                        <span className=\"print__strength\">\n                          {`${unit.strength || unit.minimum} `}\n                        </span>\n                      ) : null}\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p className=\"print__special-rules\">\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        <i>\n                          {unit.specialRules[`name_${language}`] ||\n                            unit.specialRules.name_en}\n                        </i>\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.mercenaries.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit.strength || unit.minimum ? (\n                        <span className=\"print__strength\">\n                          {`${unit.strength || unit.minimum} `}\n                        </span>\n                      ) : null}\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p className=\"print__special-rules\">\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        <i>\n                          {unit.specialRules[`name_${language}`] ||\n                            unit.specialRules.name_en}\n                        </i>\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list?.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[`name_${language}`] || unit.name_en : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  name_es: \"\",\n  name_fr: \"\",\n  name_it: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  regimentalUnit: false,\n  detachment: false,\n  command: [],\n  equipment: [],\n  armor: [],\n  options: [],\n  mounts: [],\n  items: [],\n  lores: [],\n  specialRules: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n  notes: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n    name_it: \"\",\n  },\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"armor-mages\",\n  \"talisman\",\n  \"banner\",\n  \"arcane-item\",\n  \"enchanted-item\",\n  \"weapon-runes\",\n  \"armor-runes\",\n  \"banner-runes\",\n  \"talismanic-runes\",\n  \"engineering-runes\",\n  \"triptych\",\n  \"knightly-virtue\",\n  \"knightly-virtue-character\",\n  \"chaos-mutation\",\n  \"chaos-mutation-character\",\n  \"chaos-mutation-chieftain\",\n  \"gift-of-chaos\",\n  \"forest-spite\",\n  \"vampiric-power\",\n  \"daemonic-gift\",\n];\nconst loresOfMagic = [\n  \"daemonology\",\n  \"dark-magic\",\n  \"elementalism\",\n  \"battle-magic\",\n  \"high-magic\",\n  \"illusion\",\n  \"necromancy\",\n  \"waaagh-magic\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleSpecialRulesChange = ({ field, key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        [field]: value,\n      },\n    });\n  };\n  const handleSpecialRulesBlur = ({ key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        name_de: !unit[key].name_de ? value : unit[key].name_de,\n        name_es: !unit[key].name_es ? value : unit[key].name_es,\n        name_fr: !unit[key].name_fr ? value : unit[key].name_fr,\n        name_it: !unit[key].name_it ? value : unit[key].name_it,\n      },\n    });\n  };\n  const handleCheckboxChange = ({ field, value }) => {\n    setUnit({\n      ...unit,\n      [field]: value,\n    });\n  };\n  const handleLoresOfMagicChange = ({ lore }) => {\n    if (unit.lores.includes(lore)) {\n      setUnit({\n        ...unit,\n        lores: unit.lores.filter((loreName) => loreName !== lore),\n      });\n    } else {\n      setUnit({\n        ...unit,\n        lores: [...unit.lores, lore],\n      });\n    }\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n      name_es: !unit.name_es ? unit.name_en : unit.name_es,\n      name_fr: !unit.name_fr ? unit.name_en : unit.name_fr,\n      name_it: !unit.name_it ? unit.name_en : unit.name_it,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelDelete = ({ index, key }) => {\n    setUnit({\n      ...unit,\n      [key]: unit[key].filter((_, entryIndex) => entryIndex !== index),\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n          name_es: !entry.name_es ? value : entry.name_es,\n          name_fr: !entry.name_fr ? value : entry.name_fr,\n          name_it: !entry.name_it ? value : entry.name_it,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleItemsChange = ({ value, type, itemIndex }) => {\n    const newEntries = unit.items.map((entry, entryIndex) => {\n      if (itemIndex === entryIndex) {\n        return {\n          ...entry,\n          types:\n            value === \"on\"\n              ? [...unit.items[itemIndex].types, type]\n              : unit.items[itemIndex].types.filter((name) => name !== type),\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      items: newEntries,\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewArmor = () => {\n    setUnit({\n      ...unit,\n      armor: [\n        ...unit.armor,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          perModel: true,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          name_it: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewMagicItemCategory = () => {\n    setUnit({\n      ...unit,\n      items: [\n        ...unit.items,\n        {\n          name_en: \"Magic Items\",\n          name_de: \"Magische Gegenstände\",\n          name_es: \"Objetos mágicos\",\n          name_fr: \"Objets magiques\",\n          name_it: \"Oggetti magici\",\n          types: [],\n          selected: [],\n          maxPoints: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_es-${randomId}`}>Name Spanish</label>\n      <input\n        type=\"text\"\n        id={`name_es-${randomId}`}\n        className=\"input\"\n        value={unit.name_es}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_fr-${randomId}`}>Name French</label>\n      <input\n        type=\"text\"\n        id={`name_fr-${randomId}`}\n        className=\"input\"\n        value={unit.name_fr}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_it-${randomId}`}>Name Italian</label>\n      <input\n        type=\"text\"\n        id={`name_it-${randomId}`}\n        className=\"input\"\n        value={unit.name_it}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>\n        {type === \"characters\" ? \"Points\" : \"Points per model\"}\n      </label>\n      <NumberInput\n        id={`points-${randomId}`}\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`regimentalUnit-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"regimentalUnit\",\n                  value: !unit.regimentalUnit,\n                })\n              }\n              checked={unit.regimentalUnit}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`regimentalUnit-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit can have detachments\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`detachment-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"detachment\",\n                  value: !unit.detachment,\n                })\n              }\n              checked={unit.detachment}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`detachment-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit is a detachment\n            </label>\n          </div>\n        </>\n      )}\n      {type === \"characters\" && (\n        <Expandable headline=\"Allowed Lores of Magic\">\n          {loresOfMagic.map((lore, loreIndex) => (\n            <div className=\"checkbox\" key={lore}>\n              <input\n                type=\"checkbox\"\n                id={`${lore}-${loreIndex}-${randomId}`}\n                onChange={() =>\n                  handleLoresOfMagicChange({\n                    lore,\n                  })\n                }\n                checked={unit.lores.includes(lore)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${lore}-${loreIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {lore}\n              </label>\n            </div>\n          ))}\n        </Expandable>\n      )}\n      <Expandable headline=\"Special Rules\">\n        <label htmlFor={`specialRules-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`specialRules-en-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`specialRules-de-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`specialRules-es-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`specialRules-fr-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`specialRules-it-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n      <Expandable headline=\"Notes\">\n        <label htmlFor={`notes-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`notes-en-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`notes-de-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`notes-es-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`notes-fr-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-it-${randomId}`}>Italian</label>\n        <input\n          type=\"text\"\n          id={`notes-it-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_it}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_it\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command.magic.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command.magic.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  min={0}\n                  value={command.magic.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"command\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Weapon</h3>\n      <p className=\"datasets__paragraph\">\n        All weapon options are mutually exclusive and please add a default\n        weapon.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`equipment-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"equipment\",\n                    field: \"perModel\",\n                    value: !equipment.perModel,\n                  })\n                }\n                checked={equipment.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`equipment-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              icon=\"delete\"\n              spaceTop\n              onClick={() =>\n                handleSecondLevelDelete({ index, key: \"equipment\" })\n              }\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New weapon\n      </Button>\n\n      <hr />\n\n      <h3>Armor</h3>\n      <p className=\"datasets__paragraph\">\n        All armor options are mutually exclusive and please add a default armor.\n        <br />\n        <i>(e.g. \"Light armour\" or \"Heavy armour\")</i>\n      </p>\n      {unit.armor.map((armor, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`armor-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"armor\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`armor-points${index}-${randomId}`}\n            value={armor.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`armor-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"armor\",\n                    field: \"perModel\",\n                    value: !armor.perModel,\n                  })\n                }\n                checked={armor.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`armor-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`armor-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"armor\",\n                  field: \"active\",\n                  value: !armor.active,\n                })\n              }\n              checked={armor.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`armor-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Light armour\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"armor\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewArmor}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New armor\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_it${index}-${randomId}`}>\n            Name Italian\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_it${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_it}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_it\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`options-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"perModel\",\n                    value: !option.perModel,\n                  })\n                }\n                checked={option.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`options-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"options\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      {type === \"characters\" ? (\n        <>\n          <hr />\n\n          <h3>Mounts</h3>\n          <p className=\"datasets__paragraph\">\n            All mount options are mutually exclusive and please add a default\n            mount.\n            <br />\n            <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n          </p>\n          {unit.mounts.map((mount, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"mounts\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_it${index}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_it${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`mounts-points${index}-${randomId}`}\n                value={mount.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mounts-active${index}-${randomId}`}\n                  onChange={() =>\n                    handleSecondLevelFieldChange({\n                      index,\n                      key: \"mounts\",\n                      field: \"active\",\n                      value: !mount.active,\n                    })\n                  }\n                  checked={mount.active}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mounts-active${index}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Selected by default\n                </label>\n              </div>\n              <p>\n                <i>(e.g. when \"On foot\" is the default mount)</i>\n              </p>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  spaceTop\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"mounts\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewMount}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New mount\n          </Button>\n        </>\n      ) : null}\n      <hr />\n\n      <h3>(Magic) items</h3>\n      <p className=\"datasets__paragraph\">\n        Specify what types of items are allowed. Can also be used for chaos\n        mutations, knightly vitues or similar.\n      </p>\n      {unit.items && unit.items.length\n        ? unit.items.map((item, itemIndex) => (\n            <div className=\"entity__second-level\" key={itemIndex}>\n              <label htmlFor={`magic-name_en-${itemIndex}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_en-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_de-${itemIndex}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_de-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_es-${itemIndex}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_es-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_fr-${itemIndex}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_fr-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_it-${itemIndex}-${randomId}`}>\n                Name Italian\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_it-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_it}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_it\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <Expandable headline=\"Allowed (magic) item types\">\n                {magicItemTypes.map((type, typeIndex) => (\n                  <div className=\"checkbox\" key={type}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleItemsChange({\n                          value: item.types.includes(type) ? \"off\" : \"on\",\n                          type,\n                          itemIndex,\n                        })\n                      }\n                      checked={item.types.includes(type)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {type}\n                    </label>\n                  </div>\n                ))}\n              </Expandable>\n              <label htmlFor={`magic-points-${randomId}`}>Max. points</label>\n              <NumberInput\n                id={`magic-points-${itemIndex}-${randomId}`}\n                min={0}\n                value={item.maxPoints}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"maxPoints\",\n                    value: Number(event.target.value),\n                  })\n                }\n              />\n            </div>\n          ))\n        : null}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMagicItemCategory}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New category\n      </Button>\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n    </form>\n  );\n};\n","import { Fragment } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { ListItem } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./UnitPreview.css\";\n\nexport const UnitPreview = ({ unit, coreUnits, onClose }) => {\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const detachments = coreUnits.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n\n  return (\n    <>\n      <button onClick={onClose} className=\"unit-preview-background\" />\n      <div className=\"unit-preview\">\n        <>\n          <Header\n            isSection\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n          <Button\n            className=\"unit-preview__close\"\n            icon=\"close\"\n            type=\"text\"\n            label=\"Close preview\"\n            color=\"dark\"\n            onClick={onClose}\n          />\n\n          {!unit.minimum &&\n            (!unit.lores || (unit.lores && !unit.lores.length)) &&\n            (!unit.command || (unit.command && !unit.command.length)) &&\n            (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n            (!unit.armor || (unit.armor && !unit.armor.length)) &&\n            (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n            (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n            (!unit.items || (unit.items && !unit.items.length)) &&\n            (!unit.options || (unit.options && !unit.options.length)) && (\n              <i className=\"unit__empty\">\n                <FormattedMessage id=\"unit.noOptions\" />\n              </i>\n            )}\n          {unit.notes && unit.notes.name_en ? (\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              {unit.notes[`name_${language}`] || unit.notes.name_en}\n            </p>\n          ) : null}\n          {unit.minimum ? (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                <FormattedMessage id=\"unit.unitSize\" />\n              </label>\n              <NumberInput\n                id=\"strength\"\n                min={unit.minimum}\n                max={unit.maximum}\n                value={unit.strength}\n                onChange={() => {}}\n                noError\n              />\n            </>\n          ) : null}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n              {unit.command.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    active = false,\n                    magic,\n                    ...command\n                  },\n                  index\n                ) => {\n                  let commandMagicPoints = 0;\n\n                  if (unit.magic && unit.magic.items) {\n                    unit.magic.items\n                      .filter((item) => item.command === index)\n                      .forEach(({ points }) => {\n                        commandMagicPoints = commandMagicPoints + points;\n                      });\n                  }\n\n                  return (\n                    <Fragment key={index}>\n                      <div className=\"checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          id={`command-${index}`}\n                          defaultChecked={active}\n                          className=\"checkbox__input\"\n                        />\n                        <label\n                          htmlFor={`command-${index}`}\n                          className=\"checkbox__label\"\n                        >\n                          {command[`name_${language}`] || name_en}\n                          <i className=\"checkbox__points\">\n                            {`${points} ${\n                              points === 1\n                                ? intl.formatMessage({\n                                    id: \"app.point\",\n                                  })\n                                : intl.formatMessage({\n                                    id: \"app.points\",\n                                  })\n                            }`}\n                            {perModel &&\n                              ` ${intl.formatMessage({\n                                id: \"unit.perModel\",\n                              })}`}\n                          </i>\n                        </label>\n                      </div>\n                      {magic?.maxPoints && active ? (\n                        <ListItem\n                          className=\"editor__list unit__link\"\n                          active={false}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (type) =>\n                                    nameMap[type][`name_${language}`] ||\n                                    nameMap[type].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {getUnitCommandPoints(\n                                  unit?.magic?.selected.filter(\n                                    ({ command }) => command === index\n                                  )\n                                )}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {unit?.magic?.items && (\n                            <p>\n                              {unit.magic.items\n                                .filter(({ command }) => command === index)\n                                .map(\n                                  ({ name_en, ...item }) =>\n                                    item[`name_${language}`] || name_en\n                                )\n                                .join(\", \")}\n                            </p>\n                          )}\n                        </ListItem>\n                      ) : null}\n                    </Fragment>\n                  );\n                }\n              )}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.equipment\" />\n              </h2>\n              {unit.equipment.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${index}`}\n                      name=\"equipment\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label\n                      htmlFor={`equipment-${index}`}\n                      className=\"radio__label\"\n                    >\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.armor && unit.armor.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.armor\" />\n              </h2>\n              {unit.armor.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`armor-${index}`}\n                      name=\"armor\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`armor-${index}`} className=\"radio__label\">\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.options\" />\n              </h2>\n              {unit.options.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    stackable,\n                    maximum,\n                    minimum = 0,\n                    stackableCount = minimum || 0,\n                    active = false,\n                    ...equipment\n                  },\n                  index\n                ) =>\n                  !stackable ? (\n                    <div className=\"checkbox\" key={index}>\n                      <input\n                        type=\"checkbox\"\n                        id={`options-${index}`}\n                        defaultChecked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"checkbox__label\"\n                      >\n                        {equipment[`name_${language}`] || name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                  ) : (\n                    <Fragment key={index}>\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"unit__special-option\"\n                      >\n                        {equipment[`name_${language}`] || name_en}:\n                        <i className=\"checkbox__points\">\n                          {`${points} ${intl.formatMessage({\n                            id: \"app.points\",\n                          })} ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                        </i>\n                      </label>\n                      <NumberInput\n                        id={`options-${index}`}\n                        min={minimum}\n                        max={maximum}\n                        value={stackableCount}\n                        onChange={() => {}}\n                      />\n                    </Fragment>\n                  )\n              )}\n            </>\n          )}\n          {unit.regimentalUnit && (\n            <>\n              <h2 className=\"unit__subline unit__detachments-headline\">\n                <FormattedMessage id=\"unit.detachments\" />\n              </h2>\n              {detachments.map(({ name_en, id, ...regiment }) => (\n                <>\n                  <div className=\"list\" key={id}>\n                    <div className=\"list__inner unit__detachments-header\">\n                      <b className=\"unit__magic-headline\">\n                        {regiment[`name_${language}`] || name_en}\n                      </b>\n                      <Button\n                        type=\"secondary\"\n                        icon=\"add\"\n                        label={intl.formatMessage({ id: \"editor.add\" })}\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                  {unit.detachments &&\n                    unit.detachments\n                      .filter(\n                        (detachment) =>\n                          detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                      )\n                      .map(\n                        ({ name_en, strength, id, points, ...detachment }) => (\n                          <div className=\"list\" key={id}>\n                            <div className=\"list__inner unit__detachments\">\n                              <NumberInput\n                                id={`strength-${id}`}\n                                min={5}\n                                value={strength}\n                                onChange={() => {}}\n                              />\n                              <span>\n                                <b>\n                                  {detachment[`name_${language}`] || name_en}\n                                </b>\n                                <i>{`${getUnitPoints({\n                                  strength,\n                                  points,\n                                })} ${intl.formatMessage({\n                                  id: \"app.points\",\n                                })}`}</i>\n                              </span>\n                              <Button\n                                type=\"secondary\"\n                                icon=\"close\"\n                                label={intl.formatMessage({\n                                  id: \"misc.remove\",\n                                })}\n                                size=\"small\"\n                              />\n                            </div>\n                          </div>\n                        )\n                      )}\n                </>\n              ))}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.mount\" />\n              </h2>\n              {unit.mounts.map(\n                ({ name_en, points, active = false, ...mounts }, index) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`mounts-${index}`}\n                      name=\"mounts\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`mounts-${index}`} className=\"radio__label\">\n                      {mounts[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                        {\n                          id: \"app.points\",\n                        }\n                      )}`}</i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.lores && unit.lores.length ? (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.lore\" />\n              </h2>\n              {unit.lores.map((lore) => (\n                <div className=\"radio\" key={lore}>\n                  <input\n                    type=\"radio\"\n                    id={`lore-${lore}`}\n                    name=\"lores\"\n                    value={lore}\n                    onChange={() => {}}\n                    checked={(unit.activeLore || unit.lores[0]) === lore}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                    {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  </label>\n                </div>\n              ))}\n            </>\n          ) : null}\n          {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n          {unit.items && unit.items.length\n            ? unit.items.map((item, itemIndex) => (\n                <ListItem\n                  className=\"editor__list unit__link\"\n                  active={false}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span>{magicPoints}</span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                  </div>\n                  {item.items && (\n                    <p>\n                      {item.items\n                        .map(\n                          ({ name_en, ...entity }) =>\n                            entity[`name_${language}`] || name_en\n                        )\n                        .join(\", \")}\n                    </p>\n                  )}\n                </ListItem>\n              ))\n            : null}\n          {unit.specialRules && unit.specialRules.name_en ? (\n            <>\n              <h2 className=\"unit__subline unit__subline--space-before\">\n                <FormattedMessage id=\"unit.specialRules\" />\n              </h2>\n              <p>\n                {unit.specialRules[`name_${language}`] ||\n                  unit.specialRules.name_en}\n              </p>\n            </>\n          ) : null}\n        </>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport { UnitPreview } from \"./UnitPreview\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUnit, setPreviewUnit] = useState(null);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"empire-of-man\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handlePreview = ({ unit }) => {\n    setPreviewUnit(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/datasets\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main className=\"datasets\">\n        <Button to=\"/\" icon=\"home\" centered spaceBottom>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually).\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"empire-of-man\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <>\n                {dataset.characters.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Characters</h3>\n                )}\n                <ul>\n                  {dataset.characters.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({\n                                  type: \"characters\",\n                                  id: unit.id,\n                                })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"characters\"\n                        onSubmit={handleSubmit}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.core.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Core Units</h3>\n                )}\n                <ul>\n                  {dataset.core.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"core\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"core\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.special.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Special Units</h3>\n                )}\n                <ul>\n                  {dataset.special.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"special\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"special\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.rare.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n                )}\n                <ul>\n                  {dataset.rare.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"rare\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"rare\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n              </>\n            )}\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy JSON\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p className=\"datasets__paragraph\">\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n            <textarea\n              className=\"datasets__output\"\n              rows=\"10\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n          </section>\n        </div>\n\n        {previewUnit ? (\n          <UnitPreview\n            unit={{ ...previewUnit, strength: 0 }}\n            onClose={() => setPreviewUnit(null)}\n            coreUnits={dataset.core}\n          />\n        ) : null}\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n// import { loadScript } from \"../../utils/script\";\n\n// window[\"stg\"] = window[\"stg\"] || {};\n// window[\"stg\"].optedOutCheckboxText = \"You're opted out. Uncheck to opt in.\";\n// window[\"stg\"].optedInCheckboxText = \"Opt out of data collection and usage\";\n// window[\"stg\"].isGlobal = false;\n// window[\"stg\"].instanceHostname = \"https://owb.containers.piwik.pro\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n  // const handleOptOut = () => {\n  //   window.parent.storeUserOptOutPreferences();\n  // };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    // loadScript(\"https://owb.containers.piwik.pro/privacy/script.v2.js\");\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/privacy\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>{\" \"}\n            (Android App)\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>{\" \"}\n            (error tracking)\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        {/* <h3>Piwik PRO Analytics</h3>\n        <p>\n          We use Piwik PRO Analytics Suite as our website/app analytics\n          software. The collected information may include an anonymized\n          visitor's IP address, operating system, browser ID, browsing activity\n          and other information. See the{\" \"}\n          <a\n            href=\"https://help.piwik.pro/support/getting-started/what-data-does-piwik-pro-collect/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            scope of data collected by Piwik PRO\n          </a>\n          .\n        </p>\n        <p>\n          We calculate metrics like bounce rate, page views, sessions and the\n          like to understand how our website/app is used.\n        </p>\n        <p>\n          We host our solution on Microsoft Azure in Germany/Netherlands/United\n          States/Hong Kong/ElastX in Sweden, and the data is stored for 14/25\n          months.\n        </p>\n        <p>\n          The purpose of data processing: analytics. Legal basis: Art. 6 (1)(a)\n          GDPR.\n        </p>\n        <p>\n          Piwik PRO does not send the data about you to any other sub-processors\n          or third parties and does not use it for its own purposes. For more,\n          read{\" \"}\n          <a\n            href=\"https://piwik.pro/privacy-policy/?pk_vid=b9514cbe42ac928e17075637164eac6f#product\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Piwik PRO's privacy policy\n          </a>\n          .\n        </p> */}\n\n        {/* <div id=\"_stg_opt_out_iframe_content\" style={{ display: \"none\" }}>\n          <p>\n            Privacy on this site: We collect and process your data on this site\n            to better understand how it is used. You can opt-in or opt-out at\n            any time.\n          </p>\n          <div className=\"checkbox\">\n            <input\n              id=\"_stg_optout_checkbox\"\n              onChange={handleOptOut}\n              type=\"checkbox\"\n              className=\"checkbox__input\"\n            />\n            <label\n              className=\"checkbox__label\"\n              id=\"_stg_optout_checkbox_label\"\n              htmlFor=\"_stg_optout_checkbox\"\n            ></label>\n          </div>\n        </div> */}\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/changelog\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact className=\"changelog\">\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n\n        <hr />\n\n        <h3>v0.14</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-04 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change26\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change27\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.13</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-02-02 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change24\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change25\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.12</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-31 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change22\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                rulesIndex: (\n                  <a\n                    href=\"https://www.whfb.app/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <b>Online Rules Index</b>\n                  </a>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change23\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.11</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-28 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change21\" />\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"changelog.change17\" />\n          </b>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change18\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change19\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change20\" />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.10</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-22 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change12\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change13\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change14\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change15\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change16\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.8</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change11\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.7</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-17 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change9\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li className=\"changelog__outdated\">\n            <FormattedMessage\n              id=\"changelog.change10\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                about: (\n                  <Link to=\"/about\">\n                    <FormattedMessage id=\"footer.about\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.6</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-14 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change8\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.5</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-13 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change4\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change5\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change6\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n        <p>\n          <i>\n            <FormattedMessage\n              id=\"changelog.change7\"\n              values={{\n                discord: (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://discord.gg/87nUyjUxTU\"\n                  >\n                    Discord\n                  </a>\n                ),\n              }}\n            />\n          </i>\n        </p>\n\n        <hr />\n\n        <h3>v0.4</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, createRef, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Import.css\";\n\nexport const Import = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(false);\n  const [typeError, setTypeError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const fileInput = createRef();\n  const handleListChange = () => {\n    const files = fileInput.current.files;\n\n    if (files.length > 0) {\n      if (\"application/json\" === files[0].type) {\n        setTypeError(false);\n        setList(files[0]);\n      } else {\n        setTypeError(true);\n      }\n    }\n  };\n  const handleSubmit = (event) => {\n    const reader = new FileReader();\n\n    setError(false);\n    reader.readAsText(list, \"UTF-8\");\n    reader.onload = (event) => {\n      const newId = getRandomId();\n      const importedList = { ...JSON.parse(event.target.result), id: newId };\n      const newLists = [...lists, importedList];\n\n      localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n      dispatch(setLists(newLists));\n      setRedirect(importedList.id);\n    };\n    reader.onerror = () => {\n      setError(true);\n    };\n\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"import.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"import.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"import\">\n          <label htmlFor=\"list\">\n            <FormattedMessage id=\"import.description\" />\n          </label>\n          <input\n            type=\"file\"\n            accept=\".json, application/json\"\n            id=\"list\"\n            className=\"input\"\n            onChange={handleListChange}\n            autoComplete=\"off\"\n            required\n            ref={fileInput}\n          />\n          {typeError && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"import.typeError\" />\n            </p>\n          )}\n          {error && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"export.error\" />\n            </p>\n          )}\n          <Button centered icon=\"add-list\" submitButton spaceTop>\n            <FormattedMessage id=\"import.button\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { Import } from \"./pages/import\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1279px)\");\n\n    if (mediaQuery?.addEventListener) {\n      mediaQuery.addEventListener(\"change\", (event) =>\n        setIsMobile(event.matches)\n      );\n    } else {\n      mediaQuery.addListener((event) => setIsMobile(event.matches));\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/import\">{<Import isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/import\">{<Import />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\nimport rulesIndexReducer from \"./state/rules-index\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n    rulesIndex: rulesIndexReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as Sentry from \"@sentry/react\";\n// import PiwikPro from \"@piwikpro/react-piwik-pro\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\nimport Spanish from \"./i18n/es.json\";\nimport French from \"./i18n/fr.json\";\nimport Italian from \"./i18n/it.json\";\n\n// Sentry error tracking\nif (process.env.NODE_ENV !== \"development\") {\n  Sentry.init({\n    dsn: \"https://3947feb62e2f5348c1759e8d4d9ed084@o314295.ingest.sentry.io/4506569636642816\",\n    integrations: [],\n    environment: process.env.NODE_ENV,\n    release: `owb@${process.env.REACT_APP_VERSION}`,\n  });\n}\n\n// Analytics\n// PiwikPro.initialize(\n//   \"b926228f-3567-4df1-b4e5-5ea40019bffb\",\n//   \"https://owb.piwik.pro\"\n// );\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Costruttore di eserciti per Warhammer: The Old World e Warhammer Fantasy Battles.\",\n  fr: \"Un créateur de liste d'armée pour les jeux Games Workshop 'Warhammer: The Old World' et 'Warhammer Fantaisie'.\",\n  es: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n  it: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\", \"fr\", \"es\", \"it\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else if (language === \"es\") {\n  messages = Spanish;\n} else if (language === \"fr\") {\n  messages = French;\n} else if (language === \"it\") {\n  messages = Italian;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","href","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","download","Component","Link","buttonProps","aria-label","title","defaultProps","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","armor","armorData","mounts","mountsData","options","optionsData","Header","headline","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","intl","useIntl","useLocation","useState","showMenu","setShowMenu","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","height","alt","src","usa","germany","france","spain","italy","Select","required","selected","defaultValue","optionValue","option","name_en","ErrorMessage","NumberInput","max","min","readOnly","noError","interval","pattern","newValue","Number","maxValue","preventDefault","values","swap","list","index1","index2","result","splice","removed","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","deleteList","filter","addUnit","newUnit","strength","minimum","moveUnit","sourceIndex","destinationIndex","duplicateUnit","unitId","find","split","editUnit","magic","items","detachments","activeLore","name_de","data","removeUnit","actions","duplicateList","getUnitPoints","unitPoints","stackable","stackableCount","active","perModel","length","amount","item","getUnitMagicPoints","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","Dialog","open","onClose","dialogRef","useRef","handleClose","current","close","showModal","ref","normalizeRuleName","string","toLowerCase","rulesIndexSlice","activeRule","openRulesIndex","closeRulesIndex","rulesMap","brayhorn","guardians","oathstone","gorefeast","netters","forgefire","pavise","handler","cannonade","ghostsight","ambushers","skullcracker","daemonic","entrenchment","quake","bully","murderous","venerable","backstab","choppas","peasantry","drunken","cumbersome","detachment","feed","temperamental","hellbound","stampede","helblaster","aquatic","slayer","drilled","ethereal","helstorm","evasive","deathblow","warpaint","indomitable","khopesh","fear","resolute","flammable","fly","frenzy","hatred","horde","howdah","impetuous","levies","loner","mercenaries","ponderous","regeneration","scouts","shieldwall","skirmishers","stubborn","stupidity","swiftstride","terror","unbreakable","unstable","vanguard","veteran","warband","braystaff","bloodflail","blowpipe","greatbow","polearm","drakegun","strangleroots","doomfire","bilesword","flail","plagueflail","halberd","clattergun","whip","chaintrap","fireglaive","lance","warpflame","ironfist","longbow","hellblade","shortbow","warbow","plaguesword","handgun","pistol","crossbow","javelin","sling","shield","barding","daemonology","elementalism","illusion","necromancy","beastkiller","bloodcleaver","daemonsword","dawnstone","deathcheater","giantbreaker","glamourweave","hellheart","hellshard","kineater","lifetaker","longstrider","loremaster","luckstone","mangelder","mawseeker","mountaineater","runefang","skalm","skavenbrew","skullplucker","spangleshard","spellshield","tenderiser","thundermace","wraithstone","halberds","flails","whips","spears","blowpipes","handguns","lances","shortbows","javelins","longbows","pistols","warbows","hellblades","drakeguns","clatterguns","crossbows","slings","shields","ironfists","general","ancient","boss","marksman","preceptor","sharpshooter","crusher","bladesinger","plagueridden","heartseeker","alluress","sergeant","bloodreaper","nymph","guardian","harbinger","groinbiter","snarefinger","thunderfist","nightleader","assassin","greyback","champion","gutlord","desperado","esquire","elder","sentinel","yeoman","gallant","pyroclaster","villein","paragon","warden","ironbeard","prospector","ironwarden","overseer","deathmask","fangleader","clawleader","musician","bellower","RulesIndex","useSelector","rulesIndex","isLoading","setIsLoading","dispatch","useDispatch","normalizedRuleName","rulePath","onLoad","itemsSlice","setItems","updateLocalList","updatedList","localLists","JSON","parse","updatedLists","stringify","isMultipleAllowedItem","maximum","nameMap","greenskins","heirlooms","dwarfs","weapon","talisman","banner","artifact","triptych","skaven","lizardmen","Magic","prevItemType","isFirstItemType","isMobile","MainComponent","Fragment","useParams","group","lists","units","armyId","army","gameSystems","game","armies","maxMagicPoints","scrollTo","allItems","conditional","conditionalItem","conditionalIndex","getCheckbox","isChecked","selectedAmount","magicItem","itemGroup","isConditional","isTypeLimitReached","isCommand","types","unitPointsRemaining","pointsRemainingMax","floor","maxAllowedOfItem","magicItems","inputType","checked","newCommand","entry","entryIndex","newItems","handleMagicChange","handleRulesClick","parentId","handleAmountChange","unitMagicPoints","hasCommandMagicItems","hasMagicItems","maxPoints","commandMagicItems","includes","itemGroupItems","armyComposition","unitSelectedItems","selectedItem","runesAmountInCategory","itemType","isRune","nonExclusive","some","NewList","setGame","setArmy","setName","setDescription","setPoints","setArmyComposition","redirect","setRedirect","journalArmies","handleSystemChange","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","allies","newLists","createList","warhammerFantasy","warhammerTheOldWorld","autoComplete","maxLength","journalArmy","name_es","name_fr","rules","maxPercent","minPercent","perPoints","ids","getMaxPercentData","armyPoints","categoryData","overLimit","diff","ceil","ListItem","forwardRef","attributes","OrderableList","onMoved","onDragEnd","destination","source","droppableId","provided","_snapshot","droppableProps","innerRef","React","Children","child","isValidElement","draggableId","snapshot","style","draggableProps","transform","cloneElement","isDragging","isDropAnimating","dragging","dragHandleProps","placeholder","getAllOptions","lores","asString","noMagic","allCommand","push","allEquipment","equippedDefault","allArmor","allOptions","allStackableOptions","allMounts","allDetachments","equipmentSelection","join","lore","allOptionsArray","allOptionsString","Editor","isDialogOpen","setIsDialogOpen","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeFromLocalList","OrderableUnitList","indexes","armySlice","armyIconMap","theEmpire","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","vampireCounts","chaosDeamons","ogres","chaosDwarfs","Home","resetState","rel","forg3dBanner","Unit","coreUnit","handleDetachmentEquipmentChange","detachmentId","equipmentId","category","isCheckbox","unitDetachments","getRulesIcon","textObject","textEn","ruleButtons","rule","getPointsText","handleDuplicate","handleRemove","notes","commandMagicPoints","handleCommandChange","handleEquipmentChange","handleArmorChange","handleStackableOptionChange","handleOptionsChange","regimentalUnit","minDetachmentSize","maxDetachmentSize","handleAddDetachmentClick","maxDetachments","detachmentEquipment","detachmentArmor","detachmentOptions","handleDetachmentStrengthClick","handleDeleteDetachmentClick","mount","handleMountsChange","handleLoresChange","itemIndex","itemsPoints","specialRules","getRulesLinksText","EditList","About","done","js","createElement","onload","onerror","Error","head","appendChild","loadScript","PayPal","Donation","env","hosted_button_id","image","render","owb","datasets","discord","github","gameIcons","license","getArmyData","specialToCore","rareToCore","rareToSpecial","coreToSpecial","specialToRare","allCore","allSpecial","allRare","allAllies","allMercenaries","Add","alliesLoaded","setAlliesLoaded","mercenariesLoaded","setMercenariesLoaded","armyData","getUnit","ally","handleAdd","mercenary","mercenaryUnits","mercenaryUnit","Help","Expandable","notBold","noMargin","getUnitsString","isShowList","isCompactList","showSpecialRules","optionsString","getFile","listText","asText","fileName","file","File","fileUrl","URL","createObjectURL","Export","copied","setCopied","copyError","setCopyError","shareError","setShareError","shareOwbError","setOwbShareError","setIsShowList","setIsCompactList","setShowSpecialRules","armyName","armyCompositionName","armyCompositionString","listString","getListAsText","textFileName","textFileUrl","share","a","shareData","text","files","canShare","clipboard","writeText","Print","isPrinting","setIsPrinting","onafterprint","print","DuplicateList","Rename","initialUnitState","name_it","magicItemTypes","loresOfMagic","Entity","existingUnit","randomId","setUnit","handleFieldChange","handleSpecialRulesChange","field","handleSpecialRulesBlur","handleCheckboxChange","handleSecondLevelFieldChange","newEntries","handleSecondLevelDelete","_","handleSecondLevelNameBlur","isNew","onBlur","loreIndex","loreName","handleLoresOfMagicChange","newCommandEntries","commandIndex","handleCommandMagicChange","handleCommandMagicPointsChange","typeIndex","handleItemsChange","UnitPreview","coreUnits","regiment","Datasets","previewUnit","setPreviewUnit","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","handlePreview","existingDataset","onDelete","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","b","msg","about","privacy","Import","setList","setError","typeError","setTypeError","fileInput","createRef","reader","FileReader","readAsText","importedList","accept","App","matchMedia","matches","setIsMobile","mediaQuery","addListener","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","rulesIndexReducer","Sentry","dsn","integrations","environment","release","messages","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","fr","es","it","German","Spanish","French","Italian","English","ReactDOM","store","StrictMode","getElementById","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","debug_id":"7e25c6ea-f38f-5f5e-88fd-36ea3a1d98a8"}
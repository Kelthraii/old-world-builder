{"version":3,"file":"static/js/main.eece858e.chunk.js","sources":["reportWebVitals.js","serviceWorkerRegistration.js","assets/symbol-defs.svg","components/icon/Icon.js","components/button/Button.js","utils/id.js","components/page/Header.js","components/spinner/Spinner.js","utils/useLanguage.js","assets/germany.svg","assets/usa.svg","assets/spain.svg","assets/france.svg","assets/italy.svg","components/page/Page.js","components/select/Select.js","components/error-message/ErrorMessage.js","components/number-input/NumberInput.js","utils/fetcher.js","state/lists.js","assets/warhammer-fantasy.png","assets/the-old-world.png","utils/points.js","state/items.js","utils/list.js","utils/magic-item-limitations.js","pages/magic/name-map.js","pages/magic/Magic.js","pages/new-list/NewList.js","utils/rules.js","components/list/List.js","components/dialog/Dialog.js","utils/unit.js","pages/editor/Editor.js","utils/throttle.js","state/army.js","assets/army-icons/the-empire.svg","assets/army-icons/dwarfs.svg","assets/army-icons/greenskins.svg","assets/army-icons/beastmen.svg","assets/army-icons/chaos-deamons.svg","assets/army-icons/chaos-warriors.svg","assets/army-icons/dark-elves.svg","assets/army-icons/high-elves.svg","assets/army-icons/lizardmen.svg","assets/army-icons/ogres.svg","assets/army-icons/skaven.svg","assets/army-icons/tomb-kings.svg","assets/army-icons/vampire-counts.svg","assets/army-icons/wood-elves.svg","assets/army-icons/chaos-dwarfs.svg","assets/army-icons/bretonnia.svg","pages/home/Home.js","utils/string.js","state/rules-index.js","components/rules-index/rules-map.js","components/rules-index/RulesIndex.js","pages/unit/Unit.js","pages/edit-list/EditList.js","pages/about/About.js","pages/add/Add.js","pages/help/Help.js","components/expandable/Expandable.js","pages/export/get-list-as-text.js","pages/export/Export.js","pages/print/Print.js","pages/duplicate-list/DuplicateList.js","pages/rename/Rename.js","pages/datasets/Entity.js","pages/datasets/UnitPreview.js","pages/datasets/Datasets.js","pages/not-found/NotFound.js","pages/privacy/Privacy.js","pages/changelog/Changelog.js","pages/import/Import.js","App.js","state/errors.js","store.js","index.js"],"sourceRoot":"","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/symbol-defs.5a7056f3.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport icons from \"../../assets/symbol-defs.svg\";\n\nimport \"./Icon.css\";\n\nexport const Icon = ({ className, symbol, color }) => {\n  return (\n    <svg\n      focusable=\"false\"\n      className={classNames(\"icon\", color && `icon--${color}`, className)}\n    >\n      <use xlinkHref={`${icons}#icon-${symbol}`} />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  symbol: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"..//icon\";\n\nimport \"./Button.css\";\n\nexport const Button = ({\n  className,\n  type,\n  to,\n  href,\n  onClick,\n  children,\n  spaceBottom,\n  spaceTop,\n  fullWidth,\n  label,\n  icon,\n  centered,\n  color,\n  submitButton,\n  disabled,\n  size,\n  download,\n}) => {\n  const Component = to || href ? (to ? Link : \"a\") : \"button\";\n  const buttonProps = {};\n\n  if (!to && !href) {\n    if (submitButton) {\n      buttonProps.type = \"submit\";\n    } else {\n      buttonProps.type = \"button\";\n    }\n  }\n\n  return (\n    <Component\n      className={classNames(\n        \"button\",\n        `button--${type}`,\n        color && `button--${color}`,\n        spaceBottom && \"button--spaceBottom\",\n        spaceTop && \"button--spaceTop\",\n        fullWidth && \"button--fullWidth\",\n        centered && \"button--centered\",\n        disabled && \"button--disabled\",\n        `button--${size}`,\n        className\n      )}\n      onClick={onClick}\n      to={to}\n      href={href}\n      aria-label={label}\n      title={label}\n      disabled={disabled}\n      download={download}\n      {...buttonProps}\n    >\n      {icon && (\n        <Icon\n          className={classNames(children && \"button__icon\")}\n          symbol={icon}\n        />\n      )}\n      {children && children}\n    </Component>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  spaceBottom: PropTypes.bool,\n  spaceTop: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  centered: PropTypes.bool,\n  icon: PropTypes.string,\n  color: PropTypes.string,\n  submitButton: PropTypes.bool,\n  disabled: PropTypes.bool,\n  size: PropTypes.string,\n  download: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"large\",\n};\n","export const getRandomId = () =>\n  Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n\nexport const updateIds = (type = []) => {\n  return type.map((unit) => {\n    return {\n      ...unit,\n      command: unit.command\n        ? unit.command.map((commandData, index) => ({\n            ...commandData,\n            id: index,\n          }))\n        : null,\n      equipment: unit.equipment\n        ? unit.equipment.map((equipmentData, index) => ({\n            ...equipmentData,\n            id: index,\n          }))\n        : null,\n      armor: unit.armor\n        ? unit.armor.map((armorData, index) => ({\n            ...armorData,\n            id: index,\n          }))\n        : null,\n      mounts: unit.mounts\n        ? unit.mounts.map((mountsData, index) => ({\n            ...mountsData,\n            id: index,\n          }))\n        : null,\n      options: unit.options\n        ? unit.options.map((optionsData, index) => ({\n            ...optionsData,\n            id: index,\n          }))\n        : null,\n    };\n  });\n};\n","import { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\n\nimport \"./Header.css\";\n\nexport const Header = ({\n  className,\n  headline,\n  subheadline,\n  moreButton,\n  to,\n  isSection,\n  hasPointsError,\n  hasMainNavigation,\n}) => {\n  const intl = useIntl();\n  const location = useLocation();\n  const [showMenu, setShowMenu] = useState(false);\n  const Component = isSection ? \"section\" : \"header\";\n  const handleMenuClick = () => {\n    setShowMenu(!showMenu);\n  };\n  const navigationLinks = [\n    {\n      name: intl.formatMessage({\n        id: \"footer.about\",\n      }),\n      to: \"/about\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.help\",\n      }),\n      to: \"/help\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.datasets\",\n      }),\n      to: \"/datasets\",\n    },\n    {\n      name: intl.formatMessage({\n        id: \"footer.changelog\",\n      }),\n      to: \"/changelog\",\n    },\n  ];\n  const navigation = hasMainNavigation ? navigationLinks : moreButton;\n\n  useEffect(() => {\n    setShowMenu(false);\n  }, [location.pathname]);\n\n  return (\n    <Component\n      className={classNames(isSection ? \"column-header\" : \"header\", className)}\n    >\n      {to ? (\n        <Button\n          type=\"text\"\n          to={to}\n          label={\n            isSection\n              ? intl.formatMessage({ id: \"header.close\" })\n              : intl.formatMessage({ id: \"header.back\" })\n          }\n          color={isSection ? \"dark\" : \"light\"}\n          icon={isSection ? \"close\" : \"back\"}\n        />\n      ) : (\n        <>{navigation && <div className=\"header__empty-icon\" />}</>\n      )}\n      <div className=\"header__text\">\n        {headline && <h1 className=\"header__name\">{headline}</h1>}\n        {subheadline && (\n          <p className=\"header__points\">\n            {subheadline}{\" \"}\n            {hasPointsError && <Icon symbol=\"error\" color=\"red\" />}\n          </p>\n        )}\n      </div>\n      {navigation ? (\n        <Button\n          type=\"text\"\n          className={classNames(showMenu && \"header__more-button\")}\n          color={isSection ? \"dark\" : \"light\"}\n          label={intl.formatMessage({ id: \"header.more\" })}\n          icon=\"more\"\n          onClick={handleMenuClick}\n        />\n      ) : (\n        <>{to && <div className=\"header__empty-icon\" />}</>\n      )}\n      {showMenu && (\n        <ul\n          className={classNames(\n            \"header__more\",\n            !hasMainNavigation && \"header__more--secondary-navigation\"\n          )}\n        >\n          {navigation.map(({ callback, name, icon, to: moreButtonTo }) => (\n            <li key={name}>\n              <Button\n                type=\"text\"\n                onClick={callback}\n                to={moreButtonTo}\n                icon={icon}\n              >\n                {name}\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Component>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  to: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  children: PropTypes.node,\n  moreButton: PropTypes.array,\n  isSection: PropTypes.bool,\n  hasPointsError: PropTypes.bool,\n  hasMainNavigation: PropTypes.bool,\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./Spinner.css\";\n\nexport const Spinner = ({ className }) => {\n  return <Icon symbol=\"spinner\" className={classNames(\"spinner\", className)} />;\n};\n","export const useLanguage = () => {\n  return { language: localStorage.getItem(\"lang\") };\n};\n","export default __webpack_public_path__ + \"static/media/germany.d9625f93.svg\";","export default __webpack_public_path__ + \"static/media/usa.699fdb72.svg\";","export default __webpack_public_path__ + \"static/media/spain.fe46f7a7.svg\";","export default __webpack_public_path__ + \"static/media/france.bf26b172.svg\";","export default __webpack_public_path__ + \"static/media/italy.bb2033dc.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Spinner } from \"../../components/spinner\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport germany from \"../../assets/germany.svg\";\nimport usa from \"../../assets/usa.svg\";\nimport spain from \"../../assets/spain.svg\";\nimport france from \"../../assets/france.svg\";\nimport italy from \"../../assets/italy.svg\";\n\nimport \"./Page.css\";\n\nexport const Main = ({ className, children, isDesktop, compact, loading }) => {\n  const { language } = useLanguage();\n  const handleLanguageChange = (event) => {\n    localStorage.setItem(\"lang\", event.target.value);\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <main\n        className={classNames(\n          \"main\",\n          isDesktop ? \"main--desktop\" : \"main--mobile\",\n          compact && \"main--compact\",\n          className\n        )}\n      >\n        {children}\n        {loading && <Spinner />}\n      </main>\n      {!loading && (\n        <footer className=\"footer\">\n          <nav className=\"footer__navigation\">\n            <Link to=\"/about\">\n              <FormattedMessage id=\"footer.about\" />\n            </Link>\n            <Link to=\"/help\">\n              <FormattedMessage id=\"footer.help\" />\n            </Link>\n            <Link to=\"/datasets\">\n              <FormattedMessage id=\"footer.datasets\" />\n            </Link>\n            <Link to=\"/changelog\">\n              <FormattedMessage id=\"footer.changelog\" />\n            </Link>\n            <Link to=\"/privacy\">\n              <FormattedMessage id=\"footer.privacy\" />\n            </Link>\n          </nav>\n          <div className=\"footer__languages\">\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"english\"\n                name=\"languages\"\n                value=\"en\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"en\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"english\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={usa}\n                  className=\"footer__language-icon\"\n                />\n                English\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"deutsch\"\n                name=\"languages\"\n                value=\"de\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"de\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"deutsch\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={germany}\n                  className=\"footer__language-icon\"\n                />\n                Deutsch\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"french\"\n                name=\"languages\"\n                value=\"fr\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"fr\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"french\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={france}\n                  className=\"footer__language-icon\"\n                />\n                Français\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"spanish\"\n                name=\"languages\"\n                value=\"es\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"es\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"spanish\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={spain}\n                  className=\"footer__language-icon\"\n                />\n                Español\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                id=\"italian\"\n                name=\"languages\"\n                value=\"it\"\n                onChange={handleLanguageChange}\n                defaultChecked={language === \"it\"}\n                className=\"radio__input\"\n              />\n              <label htmlFor=\"italian\" className=\"radio__label\">\n                <img\n                  width=\"24\"\n                  height=\"19\"\n                  alt=\"\"\n                  src={italy}\n                  className=\"footer__language-icon\"\n                />\n                Italiano\n              </label>\n            </div>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nMain.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  isDesktop: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Select.css\";\n\nexport const Select = ({\n  options,\n  className,\n  id,\n  name,\n  required,\n  selected,\n  disabled,\n  value,\n  onChange,\n  spaceTop,\n  spaceBottom,\n}) => {\n  const { language } = useLanguage();\n  const handleOnChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <select\n      id={id}\n      name={name}\n      required={required}\n      onChange={handleOnChange}\n      value={value}\n      defaultValue={selected}\n      disabled={disabled}\n      className={classNames(\n        \"select\",\n        spaceTop && \"select--spaceTop\",\n        spaceBottom && \"select--spaceBottom\",\n        className\n      )}\n    >\n      {options.map(({ id: optionValue, ...option }) => (\n        <option key={optionValue} value={optionValue}>\n          {option[`name_${language}`] || option.name_en}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  spaceBottom: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Icon } from \"../icon\";\n\nimport \"./ErrorMessage.css\";\n\nexport const ErrorMessage = ({ children }) => {\n  return (\n    <p className=\"error-message\">\n      <Icon symbol=\"error\" color=\"red\" className=\"error-message__icon\" />\n      {children || <FormattedMessage id=\"misc.minError\" />}\n    </p>\n  );\n};\n\nErrorMessage.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\nimport { ErrorMessage } from \"../error-message\";\n\nimport \"./NumberInput.css\";\n\nexport const NumberInput = ({\n  onChange,\n  value,\n  id,\n  max,\n  min,\n  readOnly,\n  required,\n  noError,\n  interval,\n}) => {\n  const intl = useIntl();\n  const handleOnUpClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) + (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnDownClick = (event) => {\n    event.preventDefault();\n\n    onChange({\n      target: {\n        value: Number(value) - (interval ? interval : 1),\n        id,\n      },\n    });\n  };\n  const handleOnChange = (event) => {\n    let newValue = Number(event.target.value);\n    const maxValue = max > 0 ? max : 100000;\n\n    if (newValue > maxValue) {\n      newValue = maxValue;\n    }\n\n    onChange({\n      target: {\n        value: newValue,\n        id,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          pattern=\"[0-9]*\"\n          min={0}\n          max={max > 0 ? max : 100000}\n          value={value}\n          onChange={handleOnChange}\n          id={id}\n          readOnly={readOnly}\n          required={required}\n          className=\"input\"\n        />\n        <Button\n          onClick={handleOnUpClick}\n          type=\"secondary\"\n          icon=\"up\"\n          label={intl.formatMessage({ id: \"misc.increase\" })}\n          disabled={value >= max && max !== 0}\n          className=\"number-input__button number-input__button--up\"\n        />\n        <Button\n          onClick={handleOnDownClick}\n          type=\"secondary\"\n          icon=\"down\"\n          label={intl.formatMessage({ id: \"misc.decrease\" })}\n          disabled={value <= min}\n          className=\"number-input__button number-input__button--down\"\n        />\n      </div>\n      {value < min && !noError && (\n        <ErrorMessage>\n          <FormattedMessage\n            id=\"misc.minError\"\n            values={{\n              min,\n            }}\n          />\n        </ErrorMessage>\n      )}\n    </>\n  );\n};\n\nNumberInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.number,\n  id: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  readOnly: PropTypes.bool,\n  required: PropTypes.bool,\n  noError: PropTypes.bool,\n};\n\nNumberInput.defaultProps = {\n  min: 0,\n  max: 100000,\n};\n","import \"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\";\n\nconst baseUrl = \"/\";\nlet controller;\n\nconst abortFetch = () => {\n  controller && controller.abort();\n};\nexport const fetcher = ({ url, onSuccess, onError }) => {\n  controller = new AbortController();\n\n  fetch(`${baseUrl}${url}.json?v=${process.env.REACT_APP_VERSION}`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    signal: controller.signal,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (onSuccess) {\n        onSuccess(data);\n      }\n    })\n    .catch((error) => {\n      if (onError) {\n        onError(error);\n      }\n    });\n};\n\nexport { abortFetch };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getRandomId } from \"../utils/id\";\n\nexport const listsSlice = createSlice({\n  name: \"lists\",\n  initialState: [],\n  reducers: {\n    setLists: (state, { payload }) => {\n      return payload || [];\n    },\n    updateList: (state, { payload }) => {\n      const { listId, name, points, description } = payload;\n      const newValues = { name, points, description };\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            ...newValues,\n          };\n        }\n\n        return list;\n      });\n    },\n    deleteList: (state, { payload }) => {\n      return state.filter(({ id }) => id !== payload);\n    },\n    addUnit: (state, { payload }) => {\n      const { listId, type, unit } = payload;\n      const newUnit = {\n        ...unit,\n        strength: unit.minimum,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [...list[type], newUnit],\n          };\n        }\n\n        return list;\n      });\n    },\n    duplicateUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: [\n              ...list[type],\n              { ...unit, id: `${unit.id.split(\".\")[0]}.${getRandomId()}` },\n            ],\n          };\n        }\n\n        return list;\n      });\n    },\n    editUnit: (state, { payload }) => {\n      const {\n        listId,\n        type,\n        strength,\n        unitId,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        name,\n        detachments,\n        activeLore,\n      } = payload;\n      const newValues = {\n        strength,\n        options,\n        equipment,\n        armor,\n        command,\n        mounts,\n        magic,\n        items,\n        detachments,\n        activeLore,\n        name_de: name,\n        name_en: name,\n      };\n      const unit = state\n        .find(({ id }) => id === listId)\n        [type].find(({ id }) => id === unitId);\n\n      Object.keys(newValues).forEach((key) =>\n        newValues[key] === undefined ? delete newValues[key] : {}\n      );\n\n      const newUnit = {\n        ...unit,\n        ...newValues,\n      };\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].map((data) => {\n              if (data.id === unit.id) {\n                return newUnit;\n              }\n              return data;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n    removeUnit: (state, { payload }) => {\n      const { listId, type, unitId } = payload;\n\n      return state.map((list) => {\n        const { id } = list;\n\n        if (listId === id) {\n          return {\n            ...list,\n            [type]: list[type].filter((data) => {\n              if (data.id === unitId) {\n                return false;\n              }\n              return true;\n            }),\n          };\n        }\n\n        return list;\n      });\n    },\n  },\n});\n\nexport const {\n  setLists,\n  addUnit,\n  editUnit,\n  removeUnit,\n  duplicateUnit,\n  updateList,\n  deleteList,\n  duplicateList,\n} = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/warhammer-fantasy.4a99fa99.png\";","export default __webpack_public_path__ + \"static/media/the-old-world.6310c52f.png\";","export const getUnitPoints = (unit) => {\n  let unitPoints = 0;\n\n  if (unit.strength) {\n    unitPoints = unit.strength * unit.points;\n  } else {\n    unitPoints = unit.points;\n  }\n  if (unit.options) {\n    unit.options.forEach((option) => {\n      if (option.stackable) {\n        unitPoints +=\n          (option.stackableCount || option.minimum || 0) * option.points;\n      } else if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.equipment) {\n    unit.equipment.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.armor) {\n    unit.armor.forEach((option) => {\n      if (option.active && option.perModel) {\n        unitPoints += (unit.strength || 1) * option.points;\n      } else if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit.command) {\n    unit.command.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n      if (option.active && option.magic && option.magic?.selected?.length) {\n        option.magic.selected.forEach((selected) => {\n          unitPoints += selected.amount\n            ? selected.amount * selected.points\n            : selected.points;\n        });\n      }\n    });\n  }\n  if (unit.mounts) {\n    unit.mounts.forEach((option) => {\n      if (option.active) {\n        unitPoints += option.points;\n      }\n    });\n  }\n  if (unit?.items && unit?.items.length) {\n    unit.items.forEach((item) => {\n      (item.selected || []).forEach((selected) => {\n        unitPoints += selected.amount\n          ? selected.amount * selected.points\n          : selected.points;\n      });\n    });\n  }\n  if (unit.detachments) {\n    unit.detachments.forEach(\n      ({ strength, points, equipment, armor, options }) => {\n        unitPoints += strength * points;\n\n        if (equipment && equipment.length) {\n          equipment.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (armor && armor.length) {\n          armor.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n        if (options && options.length) {\n          options.forEach((option) => {\n            if (option.active) {\n              unitPoints += strength * option.points;\n            }\n          });\n        }\n      }\n    );\n  }\n\n  return unitPoints;\n};\n\nexport const getUnitMagicPoints = ({ selected }) => {\n  let unitPoints = 0;\n\n  selected &&\n    selected.forEach((option) => {\n      unitPoints += option.amount\n        ? option.amount * option.points\n        : option.points;\n    });\n\n  return unitPoints;\n};\n\nexport const getUnitCommandPoints = (items) => {\n  let commandPoints = 0;\n\n  if (items) {\n    items.forEach((option) => {\n      commandPoints += option.points;\n    });\n  }\n\n  return commandPoints;\n};\n\nexport const getPoints = ({ type, list }) => {\n  let points = 0;\n\n  list[type] &&\n    list[type].forEach((unit) => {\n      points += getUnitPoints(unit);\n    });\n\n  return points;\n};\n\nexport const getAllPoints = (list) => {\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n\n  return (\n    lordsPoints +\n    heroesPoints +\n    corePoints +\n    specialPoints +\n    rarePoints +\n    charactersPoints +\n    mercenariesPoints +\n    alliesPoints\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const itemsSlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setItems: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setItems } = itemsSlice.actions;\n\nexport default itemsSlice.reducer;\n","export const updateLocalList = (updatedList) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.map((list) => {\n    if (list.id === updatedList.id) {\n      return updatedList;\n    } else {\n      return list;\n    }\n  });\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n\nexport const removeFromLocalList = (listId) => {\n  const localLists = JSON.parse(localStorage.getItem(\"owb.lists\"));\n  const updatedLists = localLists.filter(({ id }) => listId !== id);\n\n  localStorage.setItem(\"owb.lists\", JSON.stringify(updatedLists));\n};\n","/**\n * Returns whether the magic item can be taken multiple times.\n *\n * Typically, these are common potions, scrolls or runes\n *\n * @param {object} magicItem\n * @param {string} magicItem.type\n * @param {boolean} [magicItem.stackable]\n * @param {number} [magicItem.maximum]\n * @returns {boolean}\n */\nexport const isMultipleAllowedItem = ({ type, stackable, maximum }) =>\n  Boolean(stackable || maximum);\n\n/**\n * Calculates the maximum amount of a magic item that can be taken given the remaining points.\n *\n * @param {object} magicItem\n * @param {number} selectedAmount\n * @param {number} unitPointsRemaining\n * @returns\n */\nexport const maxAllowedOfItem = (\n  magicItem,\n  selectedAmount,\n  unitPointsRemaining\n) => {\n  if (!magicItem.stackable && !magicItem.maximum) {\n    return 1;\n  }\n\n  const pointsRemainingMax =\n    Math.floor(unitPointsRemaining / magicItem.points) + selectedAmount;\n\n  if (magicItem.maximum) {\n    return Math.min(magicItem.maximum, pointsRemainingMax);\n  }\n\n  return pointsRemainingMax;\n};\n","export const nameMap = {\n  greenskins: {\n    name_de: \"Glitzakram\",\n    name_en: \"Shiny Stuff\",\n  },\n  \"the-empire\": {\n    name_de: \"Magische Erbstücke\",\n    name_en: \"Heirlooms of Magic\",\n  },\n  heirlooms: {\n    name_de: \"Erbstücke\",\n    name_en: \"Ancestral Heirlooms\",\n  },\n  dwarfs: {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  general: {\n    name_de: \"Gewöhnliche Magische Gegenstände\",\n    name_en: \"Common Magic Items\",\n  },\n  weapon: {\n    name_de: \"Magische Waffen\",\n    name_en: \"Magic Weapons\",\n  },\n  armor: {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  \"armor-mages\": {\n    name_de: \"Magische Rüstungen\",\n    name_en: \"Magic Armour\",\n  },\n  talisman: {\n    name_de: \"Talismane\",\n    name_en: \"Talismans\",\n  },\n  banner: {\n    name_de: \"Magische Standarten\",\n    name_en: \"Magic Standards\",\n  },\n  artifact: {\n    // deprecated\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"arcane-item\": {\n    name_de: \"Arkane Artifakte\",\n    name_en: \"Arcane Items\",\n  },\n  \"enchanted-item\": {\n    name_de: \"Verzauberte Gegenstände\",\n    name_en: \"Enchanted Items\",\n  },\n  \"weapon-runes\": {\n    name_de: \"Waffenrunen\",\n    name_en: \"Weapon Runes\",\n  },\n  \"armor-runes\": {\n    name_de: \"Rüstungsrunen\",\n    name_en: \"Armour Runes\",\n  },\n  \"banner-runes\": {\n    name_de: \"Standartenrunen\",\n    name_en: \"Banner Runes\",\n  },\n  \"talismanic-runes\": {\n    name_de: \"Talismanrunen\",\n    name_en: \"Talismanic Runes\",\n  },\n  \"engineering-runes\": {\n    name_de: \"Maschinenrunen\",\n    name_en: \"Engineering Runes\",\n  },\n  triptych: {\n    name_de: \"Triptych\",\n    name_en: \"Triptych\",\n  },\n  \"kingdom-of-bretonnia\": {\n    name_de: \"Kingdom of Bretonnia\",\n    name_en: \"Kingdom of Bretonnia\",\n  },\n  \"chaos-mutations\": {\n    name_de: \"Chaos Mutations\",\n    name_en: \"Chaos Mutations\",\n  },\n  \"chaos-mutation\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-character\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"chaos-mutation-chieftain\": {\n    name_de: \"Chaos Mutation\",\n    name_en: \"Chaos Mutation\",\n  },\n  \"gifts-of-chaos\": {\n    name_de: \"Gifts of Chaos\",\n    name_en: \"Gifts of Chaos\",\n  },\n  \"gift-of-chaos\": {\n    name_de: \"Gift of Chaos\",\n    name_en: \"Gift of Chaos\",\n  },\n  \"forest-spites\": {\n    name_de: \"Forest Spites\",\n    name_en: \"Forest Spites\",\n  },\n  \"forest-spite\": {\n    name_de: \"Forest Spite\",\n    name_en: \"Forest Spite\",\n  },\n  \"beastmen-brayherds\": {\n    name_de: \"Beastmen Brayherds\",\n    name_en: \"Beastmen Brayherds\",\n  },\n  \"orc-and-goblin-tribes\": {\n    name_de: \"Orc & Goblin Tribes\",\n    name_en: \"Orc & Goblin Tribes\",\n  },\n  \"dwarfen-mountain-holds\": {\n    name_de: \"Zwergenrunen\",\n    name_en: \"Runic Items\",\n  },\n  \"empire-of-man\": {\n    name_de: \"Empire of Man\",\n    name_en: \"Empire of Man\",\n  },\n  \"wood-elf-realms\": {\n    name_de: \"Wood Elf Realms\",\n    name_en: \"Wood Elf Realms\",\n  },\n  \"high-elf-realms\": {\n    name_de: \"High Elf Realms\",\n    name_en: \"High Elf Realms\",\n  },\n  \"tomb-kings-of-khemri\": {\n    name_de: \"Tomb Kings of Khemri\",\n    name_en: \"Tomb Kings of Khemri\",\n  },\n  \"warriors-of-chaos\": {\n    name_de: \"Warriors of Chaos\",\n    name_en: \"Warriors of Chaos\",\n  },\n  \"knightly-virtues\": {\n    name_de: \"Knightly Virtues\",\n    name_en: \"Knightly Virtues\",\n  },\n  \"knightly-virtue\": {\n    name_de: \"Knightly Virtue\",\n    name_en: \"Knightly Virtue\",\n  },\n  \"knightly-virtue-character\": {\n    name_de: \"Knightly Virtue (Characters only)\",\n    name_en: \"Knightly Virtue (Characters only)\",\n  },\n  \"elven-honours\": {\n    name_de: \"Elven Honours\",\n    name_en: \"Elven Honours\",\n  },\n  \"elven-honour\": {\n    name_de: \"Elven Honour\",\n    name_en: \"Elven Honour\",\n  },\n  daemonology: {\n    name_de: \"Daemonology\",\n    name_en: \"Daemonology\",\n  },\n  \"dark-magic\": {\n    name_de: \"Dark Magic\",\n    name_en: \"Dark Magic\",\n  },\n  elementalism: {\n    name_de: \"Elementalism\",\n    name_en: \"Elementalism\",\n  },\n  \"battle-magic\": {\n    name_de: \"Battle Magic\",\n    name_en: \"Battle Magic\",\n  },\n  \"high-magic\": {\n    name_de: \"High Magic\",\n    name_en: \"High Magic\",\n  },\n  illusion: {\n    name_de: \"Illusion\",\n    name_en: \"Illusion\",\n  },\n  necromancy: {\n    name_de: \"Necromancy\",\n    name_en: \"Necromancy\",\n  },\n  \"waaagh-magic\": {\n    name_de: \"Waaagh! Magic\",\n    name_en: \"Waaagh! Magic\",\n  },\n  \"errantry-crusades\": {\n    name_en: \"Errantry Crusades\",\n    name_de: \"Errantry Crusades\",\n  },\n  \"bretonnian-exiles\": {\n    name_en: \"Bretonnian Exiles\",\n    name_de: \"Bretonnian Exiles\",\n  },\n  \"nehekharan-royal-hosts\": {\n    name_en: \"Nehekharan Royal Hosts\",\n    name_de: \"Nehekharan Royal Hosts\",\n  },\n  \"mortuary-cults\": {\n    name_en: \"Mortuary Cults\",\n    name_de: \"Mortuary Cults\",\n  },\n  \"nomadic-waaagh\": {\n    name_en: \"Nomadic Waaagh!\",\n    name_de: \"Nomadic Waaagh!\",\n  },\n  \"troll-horde\": {\n    name_en: \"Troll Horde\",\n    name_de: \"Troll Horde\",\n  },\n  \"chaos-dwarfs\": {\n    name_en: \"Chaos Dwarfs\",\n    name_de: \"Chaos Dwarfs\",\n  },\n  \"vampire-counts\": {\n    name_en: \"Vampire Counts\",\n    name_de: \"Vampire Counts\",\n  },\n  \"vampiric-powers\": {\n    name_en: \"Vampiric Powers\",\n    name_de: \"Vampiric Powers\",\n  },\n  \"vampiric-power\": {\n    name_en: \"Vampiric Power\",\n    name_de: \"Vampiric Power\",\n  },\n  \"dark-elves\": {\n    name_en: \"Dark Elves\",\n    name_de: \"Dark Elves\",\n  },\n  skaven: {\n    name_en: \"Skaven\",\n    name_de: \"Skaven\",\n  },\n  \"daemons-of-chaos\": {\n    name_en: \"Daemons of Chaos\",\n    name_de: \"Daemons of Chaos\",\n  },\n  \"daemonic-gifts-common\": {\n    name_en: \"Chaotic Gifts\",\n    name_de: \"Chaotic Gifts\",\n  },\n  \"daemonic-gift-common\": {\n    name_en: \"Chaotic Gift\",\n    name_de: \"Chaotic Gift\",\n  },\n  \"daemonic-icons-common\": {\n    name_en: \"Chaotic Icons\",\n    name_de: \"Chaotic Icons\",\n  },\n  \"daemonic-icon-common\": {\n    name_en: \"Chaotic Icon\",\n    name_de: \"Chaotic Icon\",\n  },\n  \"daemonic-gifts-khorne\": {\n    name_en: \"Gifts Of Khorne\",\n    name_de: \"Gifts Of Khorne\",\n  },\n  \"daemonic-gift-khorne\": {\n    name_en: \"Gift Of Khorne\",\n    name_de: \"Gift Of Khorne\",\n  },\n  \"daemonic-icons-khorne\": {\n    name_en: \"Icons Of Khorne\",\n    name_de: \"Icons Of Khorne\",\n  },\n  \"daemonic-icon-khorne\": {\n    name_en: \"Icon Of Khorne\",\n    name_de: \"Icon Of Khorne\",\n  },\n  \"daemonic-gifts-nurgle\": {\n    name_en: \"Gifts Of Nurgle\",\n    name_de: \"Gifts Of Nurgle\",\n  },\n  \"daemonic-gift-nurgle\": {\n    name_en: \"Gift Of Nurgle\",\n    name_de: \"Gift Of Nurgle\",\n  },\n  \"daemonic-icons-nurgle\": {\n    name_en: \"Icons Of Nurgle\",\n    name_de: \"Icons Of Nurgle\",\n  },\n  \"daemonic-icon-nurgle\": {\n    name_en: \"Icon Of Nurgle\",\n    name_de: \"Icon Of Nurgle\",\n  },\n  \"daemonic-gifts-slaanesh\": {\n    name_en: \"Gifts Of Slaanesh\",\n    name_de: \"Gifts Of Slaanesh\",\n  },\n  \"daemonic-gift-slaanesh\": {\n    name_en: \"Gift Of Slaanesh\",\n    name_de: \"Gift Of Slaanesh\",\n  },\n  \"daemonic-icons-slaanesh\": {\n    name_en: \"Icons Of Slaanesh\",\n    name_de: \"Icons Of Slaanesh\",\n  },\n  \"daemonic-icon-slaanesh\": {\n    name_en: \"Icon Of Slaanesh\",\n    name_de: \"Icon Of Slaanesh\",\n  },\n  \"daemonic-gifts-tzeentch\": {\n    name_en: \"Gifts Of Tzeentch\",\n    name_de: \"Gifts Of Tzeentch\",\n  },\n  \"daemonic-gift-tzeentch\": {\n    name_en: \"Gift Of Tzeentch\",\n    name_de: \"Gift Of Tzeentch\",\n  },\n  \"daemonic-icons-tzeentch\": {\n    name_en: \"Icons Of Tzeentch\",\n    name_de: \"Icons Of Tzeentch\",\n  },\n  \"daemonic-icon-tzeentch\": {\n    name_en: \"Icon Of Tzeentch\",\n    name_de: \"Icon Of Tzeentch\",\n  },\n  \"forbidden-poisons\": {\n    name_en: \"Forbidden Poisons\",\n    name_de: \"Forbidden Poisons\",\n  },\n  \"gifts-of-khaine\": {\n    name_en: \"Gifts of Khaine\",\n    name_de: \"Gifts of Khaine\",\n  },\n  \"forbidden-poison\": {\n    name_en: \"Forbidden Poison\",\n    name_de: \"Forbidden Poison\",\n  },\n  \"gift-of-khaine\": {\n    name_en: \"Gift of Khaine\",\n    name_de: \"Gift of Khaine\",\n  },\n  \"ogre-kingdoms\": {\n    name_en: \"Ogre Kingdoms\",\n    name_de: \"Ogre Kingdoms\",\n  },\n  \"big-names\": {\n    name_en: \"Big Names\",\n    name_de: \"Big Names\",\n  },\n  \"big-name\": {\n    name_en: \"Big Name\",\n    name_de: \"Big Name\",\n  },\n  \"disciplines-old-ones\": {\n    name_en: \"Disciplines Of The Old Ones\",\n    name_de: \"Disciplines Of The Old Ones\",\n  },\n  \"discipline-old-ones\": {\n    name_en: \"Discipline Of The Old Ones\",\n    name_de: \"Discipline Of The Old Ones\",\n  },\n  lizardmen: {\n    name_en: \"Lizardmen\",\n    name_de: \"Lizardmen\",\n  },\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getUnitMagicPoints } from \"../../utils/points\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { setItems } from \"../../state/items\";\nimport { editUnit } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport gameSystems from \"../../assets/armies.json\";\nimport {\n  isMultipleAllowedItem,\n  maxAllowedOfItem,\n} from \"../../utils/magic-item-limitations\";\n\nimport { nameMap } from \"./name-map\";\nimport \"./Magic.css\";\n\nconst updateIds = (items) => {\n  return items.map((item) => ({\n    ...item,\n    items: item.items.map((data, index) => {\n      if (data.conditional) {\n        return {\n          ...data,\n          id: index,\n          conditional: data.conditional.map(\n            (conditionalItem, conditionalIndex) => ({\n              ...conditionalItem,\n              id: `${index}-${conditionalIndex}`,\n            })\n          ),\n        };\n      }\n\n      return {\n        ...data,\n        id: index,\n      };\n    }),\n  }));\n};\n\nexport const Magic = ({ isMobile }) => {\n  let prevItemType, isFirstItemType;\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const { listId, type, unitId, command, group } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army =\n    list &&\n    gameSystems\n      .find(({ id }) => id === list.game)\n      .armies.find(({ id }) => list.army === id);\n  const items = useSelector((state) => state.items);\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  let maxMagicPoints = 0;\n  const handleMagicChange = (event, magicItem, isCommand) => {\n    let magicItems;\n    const inputType = event.target.type;\n\n    if (event.target.checked) {\n      if (isCommand) {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.command[command].magic.selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      } else {\n        if (inputType === \"radio\") {\n          magicItems = [\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        } else {\n          magicItems = [\n            ...(unit.items[group].selected || []),\n            {\n              ...magicItem,\n              id: event.target.value,\n            },\n          ];\n        }\n      }\n    } else {\n      if (isCommand) {\n        magicItems = unit.command[command].magic.selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      } else {\n        magicItems = unit.items[group].selected.filter(\n          ({ id }) => id !== event.target.value\n        );\n      }\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n  const handleAmountChange = ({ event, parentId, isCommand }) => {\n    let magicItems;\n\n    if (isCommand) {\n      magicItems = (unit.command[command].magic.selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    } else {\n      magicItems = (unit.items[group].selected || []).map((item) =>\n        item.id === parentId\n          ? {\n              ...item,\n              amount: event.target.value,\n            }\n          : item\n      );\n    }\n\n    if (isCommand) {\n      const newCommand = unit.command.map((entry, entryIndex) =>\n        entryIndex === Number(command)\n          ? {\n              ...entry,\n              magic: {\n                ...entry.magic,\n                selected: magicItems,\n              },\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          command: newCommand,\n        })\n      );\n    } else {\n      const newItems = unit.items.map((entry, entryIndex) =>\n        entryIndex === Number(group)\n          ? {\n              ...entry,\n              selected: magicItems,\n            }\n          : entry\n      );\n\n      dispatch(\n        editUnit({\n          listId,\n          type,\n          unitId,\n          items: newItems,\n        })\n      );\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    army &&\n      list &&\n      !items &&\n      fetcher({\n        url: `games/${list.game}/magic-items`,\n        onSuccess: (data) => {\n          const allItems = army.items.map((item) => {\n            return {\n              items: data[item],\n              name_de: nameMap[item].name_de,\n              name_en: nameMap[item].name_en,\n              id: item,\n            };\n          });\n\n          dispatch(setItems(updateIds(allItems)));\n        },\n      });\n  }, [army, list, items, dispatch]);\n\n  if (!unit || !army || !items) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}/${type}/${unitId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const getCheckbox = ({\n    isChecked,\n    selectedAmount,\n    magicItem,\n    itemGroup,\n    isConditional,\n    isTypeLimitReached,\n  }) => {\n    const isCommand = Boolean(unit?.command[command]?.magic?.types.length);\n\n    const max = !maxMagicPoints\n      ? // No maximum of this item if there is no point max.\n        undefined\n      : maxAllowedOfItem(magicItem, selectedAmount, unitPointsRemaining);\n\n    return (\n      <Fragment key={magicItem.id}>\n        <div\n          className={classNames(\n            \"checkbox\",\n            isConditional && \"checkbox--conditional\"\n          )}\n        >\n          <input\n            type=\"checkbox\"\n            id={`${itemGroup.id}-${magicItem.id}`}\n            value={`${itemGroup.id}-${magicItem.id}`}\n            onChange={(event) => handleMagicChange(event, magicItem, isCommand)}\n            checked={isChecked}\n            className=\"checkbox__input\"\n            disabled={\n              !isChecked &&\n              // Sometimes there is no limit (often for magic banners),\n              // otherwise we need to check if the unit has enough points left.\n              ((maxMagicPoints && magicItem.points > unitPointsRemaining) ||\n                isTypeLimitReached)\n            }\n          />\n          <label\n            htmlFor={`${itemGroup.id}-${magicItem.id}`}\n            className=\"checkbox__label\"\n          >\n            {magicItem[`name_${language}`] || magicItem.name_en}\n            <i className=\"checkbox__points\">{`${\n              magicItem.points\n            } ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}</i>\n          </label>\n        </div>\n\n        {isMultipleAllowedItem(magicItem) && isChecked && max !== 1 && (\n          <NumberInput\n            id={`${itemGroup.id}-${magicItem.id}-amount`}\n            min={1}\n            max={isTypeLimitReached ? selectedAmount : max}\n            value={selectedAmount}\n            onChange={(event) => {\n              handleAmountChange({\n                parentId: `${itemGroup.id}-${magicItem.id}`,\n                event,\n                isCommand,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  let unitMagicPoints = 0;\n  const hasCommandMagicItems = Boolean(\n    unit?.command &&\n      unit.command[command] &&\n      unit.command[command]?.magic?.types.length\n  );\n  const hasMagicItems = Boolean(unit?.items?.length);\n\n  if (hasCommandMagicItems) {\n    maxMagicPoints = unit.command[command].magic.maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.command[command].magic.selected,\n    });\n  } else if (hasMagicItems) {\n    maxMagicPoints = unit.items[group].maxPoints;\n    unitMagicPoints = getUnitMagicPoints({\n      selected: unit.items[group].selected,\n    });\n  }\n\n  const unitPointsRemaining = maxMagicPoints - unitMagicPoints;\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={\n            unit?.items?.length && !unit?.command?.length\n              ? unit.items[group][`name_${language}`] ||\n                unit.items[group].name_en\n              : intl.formatMessage({\n                  id: \"unit.magicItems\",\n                })\n          }\n          subheadline={\n            <>\n              <span className=\"magic__header-points\">\n                {unitMagicPoints}&nbsp;\n              </span>\n              {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n              <FormattedMessage id=\"app.points\" />\n            </>\n          }\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={\n              unit?.items?.length && !unit?.command?.length\n                ? unit.items[group][`name_${language}`] ||\n                  unit.items[group].name_en\n                : intl.formatMessage({\n                    id: \"unit.magicItems\",\n                  })\n            }\n            subheadline={\n              <>\n                <span className=\"magic__header-points\">\n                  {unitMagicPoints}&nbsp;\n                </span>\n                {maxMagicPoints > 0 && `/ ${maxMagicPoints} `}\n                <FormattedMessage id=\"app.points\" />\n              </>\n            }\n          />\n        )}\n        {items.map((itemGroup) => {\n          const commandMagicItems = itemGroup.items.filter(\n            (item) =>\n              hasCommandMagicItems &&\n              unit.command[command].magic.types.includes(item.type)\n          );\n          const magicItems = itemGroup.items.filter(\n            (item) =>\n              hasMagicItems &&\n              !command &&\n              unit.items[group].types.includes(item.type)\n          );\n          const itemGroupItems = (\n            hasCommandMagicItems ? commandMagicItems : magicItems\n          ).filter(\n            (item) =>\n              (!maxMagicPoints || item.points <= maxMagicPoints) &&\n              (item?.armyComposition === list?.armyComposition ||\n                !item.armyComposition)\n          );\n\n          if (itemGroupItems.length > 0) {\n            prevItemType = null;\n            isFirstItemType = false;\n          }\n\n          const unitSelectedItems = hasCommandMagicItems\n            ? unit.command[command].magic.selected ?? []\n            : unit.items[group].selected ?? [];\n\n          return (\n            <Fragment key={itemGroup.name_de}>\n              {itemGroupItems.length > 0 && (\n                <h2 className=\"unit__subline\">\n                  {itemGroup[`name_${language}`] || itemGroup.name_en}\n                </h2>\n              )}\n              {itemGroupItems.map((magicItem) => {\n                if (prevItemType !== magicItem.type) {\n                  prevItemType = magicItem.type;\n                  isFirstItemType = true;\n                } else {\n                  isFirstItemType = false;\n                }\n\n                const selectedItem = unitSelectedItems.find(\n                  ({ id }) => id === `${itemGroup.id}-${magicItem.id}`\n                );\n                let runesAmountInCategory = 0;\n\n                unitSelectedItems.forEach(({ type: itemType, amount }) => {\n                  if (itemType === magicItem.type) {\n                    runesAmountInCategory += amount ?? 1;\n                  }\n                });\n                const selectedAmount = selectedItem?.amount ?? 1;\n                const isChecked = Boolean(selectedItem);\n                const isRune = Boolean(magicItem.type.includes(\"runes\"));\n\n                const isTypeLimitReached = magicItem.nonExclusive\n                  ? false\n                  : unitSelectedItems.some(\n                      (item) =>\n                        (!magicItem.stackable &&\n                          !item.stackable &&\n                          item.type === magicItem.type &&\n                          !isRune) ||\n                        (isRune && runesAmountInCategory >= 3)\n                    );\n\n                return (\n                  <Fragment key={magicItem.name_de}>\n                    {isFirstItemType && (\n                      <h3 className=\"magic__type\">\n                        {nameMap[magicItem.type][`name_${language}`] ||\n                          nameMap[magicItem.type].name_en}\n                      </h3>\n                    )}\n                    {getCheckbox({\n                      magicItem,\n                      itemGroup,\n                      selectedAmount,\n                      isChecked,\n                      isTypeLimitReached,\n                    })}\n\n                    {magicItem.conditional && isChecked\n                      ? magicItem.conditional.map((conditionalItem) =>\n                          getCheckbox({\n                            magicItem: conditionalItem,\n                            itemGroup,\n                            selectedAmount,\n                            isChecked,\n                            isConditional: true,\n                            isTypeLimitReached,\n                          })\n                        )\n                      : null}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        })}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getRandomId } from \"../../utils/id\";\nimport { Header, Main } from \"../../components/page\";\nimport { Select } from \"../../components/select\";\nimport { NumberInput } from \"../../components/number-input\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { setLists } from \"../../state/lists\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\n\nimport \"./NewList.css\";\nimport { nameMap } from \"../magic\";\n\nexport const NewList = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [game, setGame] = useState(\"the-old-world\");\n  const [army, setArmy] = useState(\n    gameSystems.find(({ id }) => id === game).armies[0].id\n  );\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [armyComposition, setArmyComposition] = useState();\n  const [redirect, setRedirect] = useState(null);\n  const armies = gameSystems.filter(({ id }) => id === game)[0].armies;\n  const journalArmies = armies.find(({ id }) => army === id)?.armyComposition;\n  const createList = () => {\n    const newId = getRandomId();\n    const newList = {\n      \"warhammer-fantasy\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        lords: [],\n        heroes: [],\n        core: [],\n        special: [],\n        rare: [],\n        id: newId,\n      },\n      \"the-old-world\": {\n        name: name,\n        description: description,\n        game: game,\n        points: points,\n        army: army,\n        characters: [],\n        core: [],\n        special: [],\n        rare: [],\n        mercenaries: [],\n        allies: [],\n        id: newId,\n        armyComposition: armyComposition,\n      },\n    };\n    const newLists = [...lists, newList[game]];\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n  const handleSystemChange = (event) => {\n    setGame(event.target.value);\n    setArmy(\n      gameSystems.filter(({ id }) => id === event.target.value)[0].armies[0].id\n    );\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n    setArmyComposition(value);\n  };\n  const handleArcaneJournalChange = (value) => {\n    setArmyComposition(value);\n  };\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createList();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"new.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"new.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"new-list\">\n          {gameSystems.map(({ name, id }) => (\n            <div className=\"radio\" key={id}>\n              <input\n                type=\"radio\"\n                id={id}\n                name=\"new-list\"\n                value={id}\n                onChange={handleSystemChange}\n                checked={id === game}\n                className=\"radio__input\"\n                aria-label={name}\n              />\n              <label htmlFor={id} className=\"radio__label\">\n                {id === \"warhammer-fantasy\" && (\n                  <img height=\"20\" src={warhammerFantasy} alt={name} />\n                )}\n                {id === \"the-old-world\" && (\n                  <>\n                    <img height=\"35\" src={warhammerTheOldWorld} alt={name} />\n                    <p className=\"new-list__beta\">Beta</p>\n                  </>\n                )}\n              </label>\n            </div>\n          ))}\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <label htmlFor=\"army\">\n            <FormattedMessage id=\"new.army\" />\n          </label>\n          <Select\n            id=\"army\"\n            options={armies}\n            onChange={handleArmyChange}\n            selected=\"empire-of-man\"\n            spaceBottom\n            required\n          />\n          {journalArmies ? (\n            <>\n              <label htmlFor=\"arcane-journal\">\n                <FormattedMessage id=\"new.armyComposition\" />\n              </label>\n              <Select\n                id=\"arcane-journal\"\n                options={[\n                  {\n                    id: army,\n                    name_en: intl.formatMessage({ id: \"new.grandArmy\" }),\n                  },\n                  ...journalArmies.map((journalArmy) => ({\n                    id: journalArmy,\n                    name_en: nameMap[journalArmy].name_en,\n                    name_de: nameMap[journalArmy].name_de,\n                    name_es: nameMap[journalArmy].name_es,\n                    name_fr: nameMap[journalArmy].name_fr,\n                  })),\n                ]}\n                onChange={handleArcaneJournalChange}\n                selected={army}\n                spaceBottom\n              />\n            </>\n          ) : null}\n          <Button centered icon=\"add-list\" submitButton spaceBottom>\n            <FormattedMessage id=\"new.create\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","const rules = {\n  \"grand-army\": {\n    lords: { maxPercent: 25 },\n    heroes: { maxPercent: 25 },\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: { maxPercent: 25 },\n  },\n  \"kingdom-of-bretonnia\": {\n    characters: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"duke\",\n          min: 0,\n          max: 1,\n        },\n        {\n          id: \"baron\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n        {\n          id: \"prophetees\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    core: {\n      minPercent: 25,\n      units: [\n        {\n          ids: [\"knights-of-the-realm\", \"mounted-knights-of-the-realm\"],\n          min: 1,\n        },\n        {\n          ids: [\"men-at-arms\", \"peasant-bowmen\"],\n          min: 1,\n        },\n      ],\n    },\n    special: {\n      maxPercent: 50,\n      units: [\n        {\n          id: \"battle-pilgrims\",\n          min: 0,\n          max: 2,\n          perPoints: 1000,\n        },\n      ],\n    },\n    rare: {\n      maxPercent: 25,\n      units: [\n        {\n          id: \"field-trebuchet\",\n          min: 0,\n          max: 1,\n          perPoints: 1000,\n        },\n      ],\n    },\n    mercenaries: { maxPercent: 20 },\n    allies: {\n      maxPercent: 25,\n      armies: [\n        \"errantry-crusades\",\n        \"bretonnian-exiles\",\n        \"dwarfen-mountain-holds\",\n        \"empire-of-man\",\n        \"high-elf-realms\",\n        \"wood-elf-realms\",\n      ],\n    },\n  },\n  \"errantry-crusades\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Empire Knights & Empire Inner Circle Knights ...\",\n    },\n  },\n  \"bretonnian-exiles\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 33,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n    mercenaries: {\n      maxPercent: 25,\n      armies: [\"empire-of-man\"],\n      units: \"Free Company Militia & Empire Archers ...\",\n    },\n  },\n  \"tomb-kings-of-khemri\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 25 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n    mercenaries: {\n      maxPercent: 20,\n    },\n    allies: {\n      maxPercent: 25,\n    },\n  },\n  \"nehekharan-royal-hosts\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 25,\n    },\n  },\n  \"mortuary-cults\": {\n    characters: { maxPercent: 50 },\n    core: { minPercent: 33 },\n    special: {\n      maxPercent: 50,\n    },\n    rare: {\n      maxPercent: 33,\n    },\n  },\n};\n\nexport const getMaxPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const categoryData = rules[armyComposition]\n    ? rules[armyComposition][type]\n    : rules[\"grand-army\"][type];\n\n  if (!categoryData) {\n    return null;\n  }\n\n  const maxPercent = categoryData.maxPercent;\n  const maxPoints = (armyPoints / 100) * maxPercent;\n\n  return {\n    points: Math.floor(maxPoints),\n    overLimit: points > maxPoints,\n    diff: points > maxPoints ? Math.ceil(points - maxPoints) : 0,\n  };\n};\n\nexport const getMinPercentData = ({\n  type,\n  armyPoints,\n  points,\n  armyComposition,\n}) => {\n  const minPercent = rules[armyComposition]\n    ? rules[armyComposition][type].minPercent\n    : rules[\"grand-army\"][type].minPercent;\n  const minPoints = (armyPoints / 100) * minPercent;\n\n  return {\n    points: Math.floor(minPoints),\n    overLimit: points <= minPoints,\n    diff: points <= minPoints ? Math.ceil(minPoints - points) : 0,\n  };\n};\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\n\nexport const List = ({ to, onClick, children, className, active }) => {\n  const Component = to ? Link : \"button\";\n\n  return (\n    <li className={classNames(\"list\", active && \"list--active\", className)}>\n      <Component to={to} className=\"list__inner\" onClick={onClick}>\n        {children}\n      </Component>\n    </li>\n  );\n};\n\nList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  active: PropTypes.bool,\n};\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\n\nimport { Button } from \"../button\";\n\nimport \"./Dialog.css\";\n\nexport const Dialog = ({ open, onClose, children }) => {\n  const dialogRef = useRef(null);\n  const intl = useIntl();\n  const handleClose = () => {\n    dialogRef.current.close();\n    onClose();\n  };\n  useEffect(() => {\n    if (open) {\n      dialogRef.current.showModal();\n    } else {\n      dialogRef?.current?.close && dialogRef.current.close();\n    }\n  }, [open]);\n\n  return (\n    <dialog className=\"dialog\" ref={dialogRef} onClose={handleClose}>\n      <Button\n        className=\"dialog__close\"\n        icon=\"close\"\n        type=\"text\"\n        label={intl.formatMessage({ id: \"header.close\" })}\n        color=\"dark\"\n        onClick={handleClose}\n      />\n      {children}\n    </dialog>\n  );\n};\n\nDialog.propTypes = {\n  open: PropTypes.bool,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","import { nameMap } from \"../pages/magic\";\n\nexport const getAllOptions = (\n  {\n    mounts,\n    equipment,\n    armor,\n    options,\n    command,\n    items,\n    detachments,\n    activeLore,\n    lores,\n  },\n  { asString, noMagic } = {}\n) => {\n  const language = localStorage.getItem(\"lang\");\n  const allCommand = [];\n\n  if (command) {\n    command.forEach(({ active, magic, name_en, ...entry }) => {\n      if (active) {\n        allCommand.push(entry[`name_${language}`] || name_en);\n      }\n      if (active && magic && magic?.selected?.length) {\n        magic.selected.forEach((selectedItem) => {\n          allCommand.push(\n            selectedItem.amount > 1\n              ? `${selectedItem.amount}x ` + selectedItem[`name_${language}`] ||\n                  selectedItem.name_en\n              : selectedItem[`name_${language}`] || selectedItem.name_en\n          );\n        });\n      }\n    });\n  }\n  const allEquipment = equipment\n    ? equipment\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allArmor = armor\n    ? armor\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allOptions = options\n    ? options\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allStackableOptions = options\n    ? options\n        .filter(({ stackableCount }) => stackableCount > 0)\n        .map(\n          ({ name_en, stackableCount, ...item }) =>\n            `${stackableCount} ${item[`name_${language}`] || name_en}`\n        )\n    : [];\n  const allMounts = mounts\n    ? mounts\n        .filter(({ active }) => active)\n        .map(({ name_en, ...item }) => item[`name_${language}`] || name_en)\n    : [];\n  const allItems = [];\n  if (items?.length) {\n    items.forEach((item) => {\n      (item.selected || []).forEach((selectedItem) => {\n        allItems.push(\n          selectedItem.amount > 1\n            ? `${selectedItem.amount}x ` +\n                (selectedItem[`name_${language}`] || selectedItem.name_en)\n            : selectedItem[`name_${language}`] || selectedItem.name_en\n        );\n      });\n    });\n  }\n  const allDetachments = detachments\n    ? detachments\n        .filter(({ strength }) => strength > 0)\n        .map(({ name_en, strength, equipment, armor, options, ...item }) => {\n          let equipmentSelection = [];\n\n          if (equipment && equipment.length) {\n            equipment.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (armor && armor.length) {\n            armor.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n          if (options && options.length) {\n            options.forEach((option) => {\n              option.active &&\n                equipmentSelection.push(\n                  `${option[`name_${language}`]}` || option.name_en\n                );\n            });\n          }\n\n          return `${strength} ${item[`name_${language}`] || name_en}${\n            equipmentSelection.length\n              ? ` (${equipmentSelection\n                  .map((option) => option.replace(\", \", \" + \"))\n                  .join(\" + \")})`\n              : \"\"\n          }`;\n        })\n    : [];\n  const lore = [];\n  if (activeLore) {\n    lore.push(\n      nameMap[activeLore][`name_${language}`] || nameMap[activeLore].name_en\n    );\n  } else if (lores?.length) {\n    lore.push(\n      nameMap[lores[0]][`name_${language}`] || nameMap[lores[0]].name_en\n    );\n  }\n\n  const allOptionsArray = [\n    ...allEquipment,\n    ...allArmor,\n    ...allOptions,\n    ...allStackableOptions,\n    ...allCommand,\n    ...allMounts,\n    ...(!noMagic ? allItems : []),\n    ...allDetachments,\n    ...lore,\n  ];\n  const allOptionsString = allOptionsArray.join(\", \").replace(/\\*/g, \"\");\n\n  if (allOptionsString) {\n    if (asString) {\n      return allOptionsString;\n    }\n    return <p>{allOptionsString}</p>;\n  }\n  return null;\n};\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { getMaxPercentData, getMinPercentData } from \"../../utils/rules\";\nimport { Button } from \"../../components/button\";\nimport { Icon } from \"../../components/icon\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { Dialog } from \"../../components/dialog\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { throttle } from \"../../utils/throttle\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { deleteList } from \"../../state/lists\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { removeFromLocalList, updateLocalList } from \"../../utils/list\";\n\nimport \"./Editor.css\";\n\nexport const Editor = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const location = useLocation();\n  const { language } = useLanguage();\n  // const errors = useSelector((state) => state.errors);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault();\n    setIsDialogOpen(false);\n  };\n\n  const handleDeleteConfirm = () => {\n    setIsDialogOpen(false);\n    dispatch(deleteList(listId));\n    removeFromLocalList(listId);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (document.location.hash === `#${location.pathname}`) {\n        sessionStorage.setItem(\"scrollPosition\", window.pageYOffset);\n      }\n    };\n    window.addEventListener(\"scroll\", throttle(onScroll, 100));\n    window.scrollTo(0, Number(sessionStorage.getItem(\"scrollPosition\")) || 0);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!list) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to=\"/\" />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to=\"/\" isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const lordsData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"lords\",\n      armyPoints: list.points,\n      points: lordsPoints,\n      armyComposition: list.armyComposition,\n    });\n  const heroesData =\n    list.lords &&\n    getMaxPercentData({\n      type: \"heroes\",\n      armyPoints: list.points,\n      points: heroesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const charactersData =\n    list.characters &&\n    getMaxPercentData({\n      type: \"characters\",\n      armyPoints: list.points,\n      points: charactersPoints,\n      armyComposition: list.armyComposition,\n    });\n  const coreData = getMinPercentData({\n    type: \"core\",\n    armyPoints: list.points,\n    points: corePoints,\n    armyComposition: list.armyComposition,\n  });\n  const specialData = getMaxPercentData({\n    type: \"special\",\n    armyPoints: list.points,\n    points: specialPoints,\n    armyComposition: list.armyComposition,\n  });\n  const rareData = getMaxPercentData({\n    type: \"rare\",\n    armyPoints: list.points,\n    points: rarePoints,\n    armyComposition: list.armyComposition,\n  });\n  const mercenariesData =\n    list.mercenaries &&\n    getMaxPercentData({\n      type: \"mercenaries\",\n      armyPoints: list.points,\n      points: mercenariesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const alliesData =\n    list.allies &&\n    getMaxPercentData({\n      type: \"allies\",\n      armyPoints: list.points,\n      points: alliesPoints,\n      armyComposition: list.armyComposition,\n    });\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.edit\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/edit`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      to: `/editor/${listId}/duplicate`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.export\",\n      }),\n      icon: \"export\",\n      to: `/editor/${listId}/export`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.print\",\n      }),\n      icon: \"print\",\n      to: `/print/${listId}`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.delete\",\n      }),\n      icon: \"delete\",\n      callback: () => setIsDialogOpen(true),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      <Dialog open={isDialogOpen} onClose={() => setIsDialogOpen(false)}>\n        <p>\n          <FormattedMessage\n            id=\"editor.confirmDelete\"\n            values={{\n              list: <b>{list.name}</b>,\n            }}\n          />\n        </p>\n        <div className=\"editor__delete-dialog\">\n          <Button\n            type=\"text\"\n            onClick={handleDeleteClick}\n            icon=\"close\"\n            spaceTop\n            color=\"dark\"\n          >\n            <FormattedMessage id=\"misc.cancel\" />\n          </Button>\n          <Button\n            type=\"secondary\"\n            submitButton\n            onClick={handleDeleteConfirm}\n            icon=\"delete\"\n            spaceTop\n          >\n            <FormattedMessage id=\"misc.delete\" />\n          </Button>\n        </div>\n      </Dialog>\n\n      {isMobile && (\n        <Header\n          to=\"/\"\n          headline={list.name}\n          subheadline={\n            <>\n              <span\n                className={classNames(\n                  \"magic__header-points\",\n                  allPoints > list.points && \"magic__header-points--error\"\n                )}\n              >\n                {allPoints}&nbsp;\n              </span>\n              {`/ ${list.points} ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}\n            </>\n          }\n          hasPointsError={allPoints > list.points}\n          moreButton={moreButtons}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={list.name}\n            subheadline={\n              <>\n                <span\n                  className={classNames(\n                    \"magic__header-points\",\n                    allPoints > list.points && \"magic__header-points--error\"\n                  )}\n                >\n                  {allPoints}&nbsp;\n                </span>\n                {`/ ${list.points} ${intl.formatMessage({\n                  id: \"app.points\",\n                })}`}\n              </>\n            }\n            hasPointsError={allPoints > list.points}\n            moreButton={moreButtons}\n          />\n        )}\n        {/* <section>\n          {errors.map((error) => (\n            <span>\n              <strong>{error}</strong>\n              <Icon symbol=\"error\" color=\"red\" />\n            </span>\n          ))}\n        </section> */}\n        {list.lords && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />\n              </h2>\n              <p className=\"editor__points\">\n                {lordsData.diff > 0 ? (\n                  <>\n                    <strong>{lordsData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{lordsData.points - lordsPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.lords.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/lords/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`] || unit.name_en}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/lords`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.heroes && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />\n              </h2>\n              <p className=\"editor__points\">\n                {heroesData.diff > 0 ? (\n                  <>\n                    <strong>{heroesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{heroesData.points - heroesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.heroes.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/heroes/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`] || unit.name_en}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/heroes`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        {list.characters && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.characters\" />\n              </h2>\n              <p className=\"editor__points\">\n                {charactersData.diff > 0 ? (\n                  <>\n                    <strong>{charactersData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{charactersData.points - charactersPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.characters.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/characters/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`] || unit.name_en}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <Button\n              centered\n              to={`/editor/${listId}/add/characters`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button>\n          </section>\n        )}\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.core\" />\n            </h2>\n            <p className=\"editor__points\">\n              {coreData.diff > 0 ? (\n                <>\n                  <strong>{coreData.diff}</strong>\n                  <FormattedMessage id=\"editor.missingPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{corePoints}</strong>\n                  {` / ${coreData.points} `}\n                  <FormattedMessage id=\"app.points\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.core.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/core/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n\n                  <b>{unit[`name_${language}`] || unit.name_en}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/core`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.special\" />\n            </h2>\n            <p className=\"editor__points\">\n              {specialData.diff > 0 ? (\n                <>\n                  <strong>{specialData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{specialData.points - specialPoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.special.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/special/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n                  <b>{unit[`name_${language}`] || unit.name_en}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/special`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        <section className=\"editor__section\">\n          <header className=\"editor__header\">\n            <h2>\n              <FormattedMessage id=\"editor.rare\" />\n            </h2>\n            <p className=\"editor__points\">\n              {rareData.diff > 0 ? (\n                <>\n                  <strong>{rareData.diff}</strong>\n                  <FormattedMessage id=\"editor.tooManyPoints\" />\n                  <Icon symbol=\"error\" color=\"red\" />\n                </>\n              ) : (\n                <>\n                  <strong>{rareData.points - rarePoints}</strong>\n                  <FormattedMessage id=\"editor.availablePoints\" />\n                  <Icon symbol=\"check\" />\n                </>\n              )}\n            </p>\n          </header>\n          <ul>\n            {list.rare.map((unit, index) => (\n              <List\n                key={index}\n                to={`/editor/${listId}/rare/${unit.id}`}\n                className=\"editor__list\"\n                active={location.pathname.includes(unit.id)}\n              >\n                <div className=\"editor__list-inner\">\n                  {unit.strength || unit.minimum ? (\n                    <span>{`${unit.strength || unit.minimum}`}</span>\n                  ) : null}\n                  <b>{unit[`name_${language}`] || unit.name_en}</b>\n                  <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                    id: \"app.points\",\n                  })}`}</i>\n                </div>\n                {getAllOptions(unit)}\n              </List>\n            ))}\n          </ul>\n          <Button\n            centered\n            to={`/editor/${listId}/add/rare`}\n            icon=\"add\"\n            spaceTop\n          >\n            <FormattedMessage id=\"editor.add\" />\n          </Button>\n        </section>\n\n        {list.mercenaries && mercenariesData && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />\n              </h2>\n              <p className=\"editor__points\">\n                {mercenariesData.diff > 0 ? (\n                  <>\n                    <strong>{mercenariesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>\n                      {mercenariesData.points - mercenariesPoints}\n                    </strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.mercenaries.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/mercenaries/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`] || unit.name_en}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">\n              <FormattedMessage id=\"editor.comingSoon\" />\n            </p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/mercenaries`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n\n        {list.allies && alliesData && (\n          <section className=\"editor__section\">\n            <header className=\"editor__header\">\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />\n              </h2>\n              <p className=\"editor__points\">\n                {alliesData.diff > 0 ? (\n                  <>\n                    <strong>{alliesData.diff}</strong>\n                    <FormattedMessage id=\"editor.tooManyPoints\" />\n                    <Icon symbol=\"error\" color=\"red\" />\n                  </>\n                ) : (\n                  <>\n                    <strong>{alliesData.points - alliesPoints}</strong>\n                    <FormattedMessage id=\"editor.availablePoints\" />\n                    <Icon symbol=\"check\" />\n                  </>\n                )}\n              </p>\n            </header>\n            <ul>\n              {list.allies.map((unit, index) => (\n                <List\n                  key={index}\n                  to={`/editor/${listId}/allies/${unit.id}`}\n                  className=\"editor__list\"\n                  active={location.pathname.includes(unit.id)}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b>{unit[`name_${language}`] || unit.name_en}</b>\n                    <i>{`${getUnitPoints(unit)} ${intl.formatMessage({\n                      id: \"app.points\",\n                    })}`}</i>\n                  </div>\n                  {getAllOptions(unit)}\n                </List>\n              ))}\n            </ul>\n            <p className=\"editor__soon\">\n              <FormattedMessage id=\"editor.comingSoon\" />\n            </p>\n            {/* <Button\n              centered\n              to={`/editor/${listId}/add/allies`}\n              icon=\"add\"\n              spaceTop\n            >\n              <FormattedMessage id=\"editor.add\" />\n            </Button> */}\n          </section>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","export const throttle = (callback, limit) => {\n  let wait = false;\n\n  return () => {\n    if (!wait) {\n      callback.call();\n      wait = true;\n      setTimeout(() => {\n        wait = false;\n      }, limit);\n    }\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const armySlice = createSlice({\n  name: \"army\",\n  initialState: null,\n  reducers: {\n    setArmy: (state, { payload }) => {\n      return payload;\n    },\n  },\n});\n\nexport const { setArmy } = armySlice.actions;\n\nexport default armySlice.reducer;\n","export default __webpack_public_path__ + \"static/media/the-empire.d3620178.svg\";","export default __webpack_public_path__ + \"static/media/dwarfs.d1515ee2.svg\";","export default __webpack_public_path__ + \"static/media/greenskins.ea460b46.svg\";","export default __webpack_public_path__ + \"static/media/beastmen.6a9fce0f.svg\";","export default __webpack_public_path__ + \"static/media/chaos-deamons.1f26ab65.svg\";","export default __webpack_public_path__ + \"static/media/chaos-warriors.95dbc8c2.svg\";","export default __webpack_public_path__ + \"static/media/dark-elves.9d17a9e4.svg\";","export default __webpack_public_path__ + \"static/media/high-elves.446a07c8.svg\";","export default __webpack_public_path__ + \"static/media/lizardmen.1864459d.svg\";","export default __webpack_public_path__ + \"static/media/ogres.8b76905b.svg\";","export default __webpack_public_path__ + \"static/media/skaven.76cb48b7.svg\";","export default __webpack_public_path__ + \"static/media/tomb-kings.9b30c541.svg\";","export default __webpack_public_path__ + \"static/media/vampire-counts.fd13d874.svg\";","export default __webpack_public_path__ + \"static/media/wood-elves.2b1066f8.svg\";","export default __webpack_public_path__ + \"static/media/chaos-dwarfs.ee5f1bd3.svg\";","export default __webpack_public_path__ + \"static/media/bretonnia.e5c3a1d0.svg\";","import { Fragment, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { getAllPoints } from \"../../utils/points\";\nimport { setArmy } from \"../../state/army\";\nimport { setItems } from \"../../state/items\";\nimport warhammerFantasy from \"../../assets/warhammer-fantasy.png\";\nimport warhammerTheOldWorld from \"../../assets/the-old-world.png\";\nimport theEmpire from \"../../assets/army-icons/the-empire.svg\";\nimport dwarfs from \"../../assets/army-icons/dwarfs.svg\";\nimport greenskins from \"../../assets/army-icons/greenskins.svg\";\nimport beastmen from \"../../assets/army-icons/beastmen.svg\";\nimport chaosDeamons from \"../../assets/army-icons/chaos-deamons.svg\";\nimport chaosWarriors from \"../../assets/army-icons/chaos-warriors.svg\";\nimport darkElves from \"../../assets/army-icons/dark-elves.svg\";\nimport highElves from \"../../assets/army-icons/high-elves.svg\";\nimport lizardmen from \"../../assets/army-icons/lizardmen.svg\";\nimport ogres from \"../../assets/army-icons/ogres.svg\";\nimport skaven from \"../../assets/army-icons/skaven.svg\";\nimport tombKings from \"../../assets/army-icons/tomb-kings.svg\";\nimport vampireCounts from \"../../assets/army-icons/vampire-counts.svg\";\nimport woodElves from \"../../assets/army-icons/wood-elves.svg\";\nimport chaosDwarfs from \"../../assets/army-icons/chaos-dwarfs.svg\";\nimport bretonnia from \"../../assets/army-icons/bretonnia.svg\";\n\nimport \"./Home.css\";\n\nconst armyIconMap = {\n  \"the-empire\": theEmpire,\n  dwarfs: dwarfs,\n  greenskins: greenskins,\n  \"empire-of-man\": theEmpire,\n  \"orc-and-goblin-tribes\": greenskins,\n  \"dwarfen-mountain-holds\": dwarfs,\n  \"warriors-of-chaos\": chaosWarriors,\n  \"kingdom-of-bretonnia\": bretonnia,\n  \"beastmen-brayherds\": beastmen,\n  \"wood-elf-realms\": woodElves,\n  \"tomb-kings-of-khemri\": tombKings,\n  \"high-elf-realms\": highElves,\n  \"dark-elves\": darkElves,\n  skaven: skaven,\n  \"vampire-counts\": vampireCounts,\n  \"daemons-of-chaos\": chaosDeamons,\n  \"ogre-kingdoms\": ogres,\n  lizardmen: lizardmen,\n  \"chaos-dwarfs\": chaosDwarfs,\n};\n\nexport const Home = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const lists = useSelector((state) => state.lists);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const resetState = () => {\n    dispatch(setArmy(null));\n    dispatch(setItems(null));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Old World Builder - Army builder for Warhammer Fantasy and Warhammer:\n          The Old World\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/\" />\n      </Helmet>\n\n      {isMobile && <Header headline=\"Old World Builder\" hasMainNavigation />}\n      <MainComponent>\n        {!lists.length && (\n          <>\n            <img\n              src={theEmpire}\n              alt=\"\"\n              width=\"100\"\n              height=\"100\"\n              className=\"home__logo\"\n            />\n            <i className=\"home__empty\">\n              <FormattedMessage id=\"home.empty\" />\n            </i>\n          </>\n        )}\n        <ul>\n          {lists.map(\n            ({ id, name, description, points, game, army, ...list }, index) => (\n              <List\n                key={index}\n                to={`/editor/${id}`}\n                active={location.pathname.includes(id)}\n                onClick={resetState}\n              >\n                <span className=\"home__list-item\">\n                  <h2 className=\"home__headline\">{name}</h2>\n                  {description && (\n                    <p className=\"home__description\">{description}</p>\n                  )}\n                  <p className=\"home__points\">\n                    {getAllPoints({\n                      ...list,\n                      points,\n                    })}{\" \"}\n                    / {points} <FormattedMessage id=\"app.points\" />\n                  </p>\n                </span>\n                <div className=\"home__info\">\n                  <img\n                    width=\"70\"\n                    src={\n                      game === \"warhammer-fantasy\"\n                        ? warhammerFantasy\n                        : warhammerTheOldWorld\n                    }\n                    alt={\n                      game === \"warhammer-fantasy\"\n                        ? \"Warhammer Fantasy\"\n                        : \"Warhammer: The Old World\"\n                    }\n                    className=\"home__game\"\n                  />\n                  <img height=\"40\" width=\"40\" src={armyIconMap[army]} alt=\"\" />\n                </div>\n              </List>\n            )\n          )}\n        </ul>\n        <Button\n          centered\n          to=\"/new\"\n          icon=\"new-list\"\n          spaceTop\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.newList\" />\n        </Button>\n        <Button\n          centered\n          to=\"/import\"\n          type=\"text\"\n          icon=\"import\"\n          color=\"dark\"\n          spaceTop\n          spaceBottom\n          onClick={resetState}\n        >\n          <FormattedMessage id=\"home.import\" />\n        </Button>\n      </MainComponent>\n    </>\n  );\n};\n","export const removeParens = (string = \"\") => {\n  return string.replace(/ *\\([^)]*\\) */g, \"\");\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const rulesIndexSlice = createSlice({\n  name: \"rulesIndex\",\n  initialState: {\n    activeRule: \"\",\n    open: false,\n  },\n  reducers: {\n    openRulesIndex: (state, { payload }) => {\n      return { ...state, activeRule: payload.activeRule, open: true };\n    },\n    closeRulesIndex: (state) => {\n      return { ...state, activeRule: \"\", open: false };\n    },\n  },\n});\n\nexport const { openRulesIndex, closeRulesIndex } = rulesIndexSlice.actions;\n\nexport default rulesIndexSlice.reducer;\n","export const rulesMap = {\n  Ambushers: \"special-rules/ambushers\",\n  \"Armour Bane\": \"special-rules/armour-bane\",\n  \"Armoured Hide\": \"special-rules/armoured-hide\",\n  \"Breath Weapon\": \"special-rules/breath-weapon\",\n  \"Chariot Runners\": \"special-rules/chariot-runners\",\n  \"Close Order\": \"special-rules/close-order\",\n  \"Counter Charge\": \"special-rules/counter-charge\",\n  Cumbersome: \"special-rules/cumbersome\",\n  Detachment: \"special-rules/detachment\",\n  \"Dragged Along\": \"special-rules/dragged-along\",\n  Drilled: \"special-rules/drilled\",\n  Ethereal: \"special-rules/ethereal\",\n  Evasive: \"special-rules/evasive\",\n  \"Extra Attacks\": \"special-rules/extra-attacks\",\n  \"Fast Cavalry\": \"special-rules/fast-cavalry\",\n  Fear: \"special-rules/fear\",\n  \"Feigned Flight\": \"special-rules/feigned-flight\",\n  \"Fight In Extra Rank\": \"special-rules/fight-in-extra-rank\",\n  \"Fire & Flee\": \"special-rules/fire-and-flee\",\n  \"First Charge\": \"special-rules/first-charge\",\n  \"Flaming Attacks\": \"special-rules/flaming-attacks\",\n  Flammable: \"special-rules/flammable\",\n  Fly: \"special-rules/fly\",\n  Frenzy: \"special-rules/frenzy\",\n  \"Furious Charge\": \"special-rules/furious-charge\",\n  Hatred: \"special-rules/hatred\",\n  Horde: \"special-rules/horde\",\n  Howdah: \"special-rules/howdah\",\n  \"Ignores Cover\": \"special-rules/ignores-cover\",\n  \"Immune To Psychology\": \"special-rules/immune-to-psychology\",\n  \"Impact Hits\": \"special-rules/impact-hits\",\n  Impetuous: \"special-rules/impetuous\",\n  \"Killing Blow\": \"special-rules/killing-blow\",\n  \"Large Target\": \"special-rules/large-target\",\n  Levies: \"special-rules/levies\",\n  Loner: \"special-rules/loner\",\n  \"Magical Attacks\": \"special-rules/magical-attacks\",\n  \"Magic Resistance\": \"special-rules/magic-resistance\",\n  Mercenaries: \"special-rules/mercenaries\",\n  \"Monster Handlers\": \"special-rules/monster-handlers\",\n  \"Monster Slayer\": \"special-rules/monster-slayer\",\n  \"Motley Crew\": \"special-rules/motley-crew\",\n  \"Move & Shoot\": \"special-rules/move-and-shoot\",\n  \"Move Or Shoot\": \"special-rules/move-or-shoot\",\n  \"Move Through Cover\": \"special-rules/move-through-cover\",\n  \"Multiple Shots\": \"special-rules/multiple-shots\",\n  \"Multiple Wounds\": \"special-rules/multiple-wounds\",\n  \"Open Order\": \"special-rules/open-order\",\n  \"Poisoned Attacks\": \"special-rules/poisoned-attacks\",\n  Ponderous: \"special-rules/ponderous\",\n  \"Quick Shot\": \"special-rules/quick-shot\",\n  \"Rallying Cry\": \"special-rules/rallying-cry\",\n  \"Random Attacks\": \"special-rules/random-attacks\",\n  \"Random Movement\": \"special-rules/random-movement\",\n  Regeneration: \"special-rules/regeneration\",\n  \"Regimental Unit\": \"special-rules/regimental-unit\",\n  \"Requires Two Hands\": \"special-rules/requires-two-hands\",\n  \"Reserve Move\": \"special-rules/reserve-move\",\n  Scouts: \"special-rules/scouts\",\n  Shieldwall: \"special-rules/shieldwall\",\n  Skirmishers: \"special-rules/skirmishers\",\n  \"Stomp Attacks\": \"special-rules/stomp-attacks\",\n  \"Strike First\": \"special-rules/strike-first\",\n  \"Strike Last\": \"special-rules/strike-last\",\n  Stubborn: \"special-rules/stubborn\",\n  Stupidity: \"special-rules/stupidity\",\n  Swiftstride: \"special-rules/swiftstride\",\n  Terror: \"special-rules/terror\",\n  \"Timmm-berrr!\": \"special-rules/timmm-berrr\",\n  Unbreakable: \"special-rules/unbreakable\",\n  Unstable: \"special-rules/unstable\",\n  Vanguard: \"special-rules/vanguard\",\n  Veteran: \"special-rules/veteran\",\n  \"Volley Fire\": \"special-rules/volley-fire\",\n  Warband: \"special-rules/warband\",\n  \"Warp-spawned\": \"special-rules/warp-spawned\",\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Dialog } from \"../../components/dialog\";\nimport { Spinner } from \"../../components/spinner\";\nimport { removeParens } from \"../../utils/string\";\nimport { closeRulesIndex } from \"../../state/rules-index\";\n\nimport { rulesMap } from \"./rules-map\";\nimport \"./RulesIndex.css\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport const RulesIndex = () => {\n  const { open, activeRule } = useSelector((state) => state.rulesIndex);\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    setIsLoading(true);\n    dispatch(closeRulesIndex());\n  };\n  const rulePath = rulesMap[removeParens(activeRule)];\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      {rulesMap[removeParens(activeRule)] ? (\n        <>\n          <iframe\n            onLoad={() => setIsLoading(false)}\n            className=\"rules-index__iframe\"\n            src={`https://tow.whfb.app/${rulePath}?minimal=true&utm_source=owb&utm_medium=referral`}\n            title=\"test\"\n            height=\"500\"\n            width=\"500\"\n          />\n          {isLoading && <Spinner className=\"rules-index__spinner\" />}\n        </>\n      ) : (\n        <p>\n          <FormattedMessage id=\"editor.noRuleFound\" />\n        </p>\n      )}\n    </Dialog>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { getUnitPoints, getUnitMagicPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { RulesIndex, rulesMap } from \"../../components/rules-index\";\nimport { nameMap } from \"../../pages/magic\";\nimport { editUnit, removeUnit, duplicateUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { openRulesIndex } from \"../../state/rules-index\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { updateIds, getRandomId } from \"../../utils/id\";\nimport { removeParens } from \"../../utils/string\";\n\nimport \"./Unit.css\";\n\nexport const Unit = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const { language } = useLanguage();\n  const [redirect, setRedirect] = useState(null);\n  const location = useLocation();\n  const intl = useIntl();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const army = useSelector((state) => state.army);\n  const detachments =\n    army &&\n    [...army.core, ...army.special, ...army.rare].filter(\n      (coreUnit) => coreUnit.detachment\n    );\n  const handleRemove = (unitId) => {\n    dispatch(removeUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleDuplicate = (unitId) => {\n    dispatch(duplicateUnit({ listId, type, unitId }));\n    setRedirect(true);\n  };\n  const handleStrengthChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        strength: event.target.value,\n      })\n    );\n  };\n  const handleStackableOptionChange = ({ id, stackableCount }) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          stackableCount,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleAddDetachmentClick = ({ id }) => {\n    const detachment = detachments.find((detachment) => detachment.id === id);\n    const unitDetachments = unit.detachments ? [...unit.detachments] : [];\n\n    unitDetachments.push({\n      id: `${id}.${getRandomId()}`,\n      name_de: detachment.name_de,\n      name_en: detachment.name_en,\n      points: detachment.points,\n      strength: detachment.minDetachmentSize || 5,\n      minDetachmentSize: detachment.minDetachmentSize || 5,\n      maxDetachmentSize: detachment.maxDetachmentSize,\n      equipment: detachment.equipment,\n      armor: detachment.armor,\n      options: detachment.options,\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDeleteDetachmentClick = ({ id }) => {\n    const unitDetachments = [...unit.detachments].filter(\n      (detachment) => detachment.id !== id\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentStrengthClick = ({ id, strength }) => {\n    const unitDetachments = [...unit.detachments].map((detachment) =>\n      detachment.id === id ? { ...detachment, strength } : detachment\n    );\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleDetachmentEquipmentChange = ({\n    detachmentId,\n    equipmentId,\n    category,\n    isCheckbox,\n  }) => {\n    const unitDetachments = [...unit.detachments].map((detachment) => {\n      if (detachment.id === detachmentId) {\n        const equipment = detachment[category].map((item) => {\n          let active = false;\n\n          if (isCheckbox && item.id === equipmentId) {\n            active = !item.active;\n          } else if (item.id === equipmentId) {\n            active = true;\n          } else if (isCheckbox) {\n            active = item.active;\n          }\n\n          return {\n            ...item,\n            active,\n          };\n        });\n\n        return { ...detachment, [category]: equipment };\n      }\n\n      return detachment;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        detachments: unitDetachments,\n      })\n    );\n  };\n  const handleOptionsChange = (id) => {\n    const options = unit.options.map((option) => {\n      if (option.id === id) {\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        options,\n      })\n    );\n  };\n  const handleCommandChange = (id) => {\n    let magicItems = unit.magic?.items || [];\n    const command = unit.command.map((option, index) => {\n      if (option.id === id) {\n        // Also remove banner runes\n        if (option.active) {\n          magicItems = magicItems.filter(({ command }) => command !== index);\n        }\n\n        return {\n          ...option,\n          active: option.active ? false : true,\n        };\n      }\n      return option;\n    });\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        command,\n        magic: {\n          ...unit.magic,\n          items: magicItems,\n        },\n      })\n    );\n  };\n  const handleEquipmentChange = (id) => {\n    const equipment = unit.equipment.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        equipment,\n      })\n    );\n  };\n  const handleArmorChange = (id) => {\n    const armor = unit.armor.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        armor,\n      })\n    );\n  };\n  const handleMountsChange = (id) => {\n    const mounts = unit.mounts.map((item) => ({\n      ...item,\n      active: item.id === id ? true : false,\n    }));\n\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        mounts,\n      })\n    );\n  };\n  const handleLoresChange = (lore) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        activeLore: lore,\n      })\n    );\n  };\n  const getSpecialRules = () => {\n    const specialRulesEn = unit.specialRules.name_en.split(\", \");\n    const specialRulesString =\n      unit.specialRules[`name_${language}`] || unit.specialRules.name_en;\n    let specialRulesButtons = specialRulesString.split(\", \");\n\n    specialRulesButtons = specialRulesButtons.map((rule, index) => (\n      <Fragment key={rule}>\n        {rulesMap[removeParens(specialRulesEn[index])] ? (\n          <button\n            className=\"unit__special-rule\"\n            onClick={() =>\n              dispatch(openRulesIndex({ activeRule: specialRulesEn[index] }))\n            }\n          >\n            {rule}\n            {index !== specialRulesButtons.length - 1 && \", \"}\n          </button>\n        ) : (\n          <>\n            {rule}\n            {index !== specialRulesButtons.length - 1 && \", \"}\n          </>\n        )}\n      </Fragment>\n    ));\n\n    return (\n      <>\n        <h2 className=\"unit__subline unit__subline--space-before\">\n          <FormattedMessage id=\"unit.specialRules\" />\n        </h2>\n        <p>{specialRulesButtons.map((item) => item)}</p>\n      </>\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          dispatch(\n            setArmy({\n              lords: updateIds(data.lords),\n              heroes: updateIds(data.heroes),\n              characters: updateIds(data.characters),\n              core: updateIds(data.core),\n              special: updateIds(data.special),\n              rare: updateIds(data.rare),\n              mercenaries: updateIds(data.mercenaries),\n              allies: updateIds(data.allies),\n            })\n          );\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect === true) {\n    return <Redirect to={`/editor/${listId}`} />;\n  }\n\n  if (!unit || !army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  const moreButtons = [\n    {\n      name: intl.formatMessage({\n        id: \"misc.rename\",\n      }),\n      icon: \"edit\",\n      to: `/editor/${listId}/${type}/${unit.id}/rename`,\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.duplicate\",\n      }),\n      icon: \"duplicate\",\n      callback: () => handleDuplicate(unit.id),\n    },\n    {\n      name: intl.formatMessage({\n        id: \"misc.remove\",\n      }),\n      icon: \"delete\",\n      callback: () => handleRemove(unit.id),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          moreButton={moreButtons}\n          headline={unit[`name_${language}`] || unit.name_en}\n          subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n            id: \"app.points\",\n          })}`}\n        />\n      )}\n\n      <RulesIndex />\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            moreButton={moreButtons}\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n        )}\n        {!unit.minimum &&\n          (!unit.lores || (unit.lores && !unit.lores.length)) &&\n          (!unit.command || (unit.command && !unit.command.length)) &&\n          (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n          (!unit.armor || (unit.armor && !unit.armor.length)) &&\n          (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n          (!unit.magic ||\n            (unit.magic && !unit.magic.maxPoints && !unit.items?.length)) &&\n          (!unit.options || (unit.options && !unit.options.length)) && (\n            <i className=\"unit__empty\">\n              <FormattedMessage id=\"unit.noOptions\" />\n            </i>\n          )}\n        {unit.notes && unit.notes.name_en ? (\n          <p className=\"unit__notes\">\n            <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n            {unit.notes[`name_${language}`] || unit.notes.name_en}\n          </p>\n        ) : null}\n        {unit.minimum ? (\n          <>\n            <label htmlFor=\"strength\" className=\"unit__strength\">\n              <FormattedMessage id=\"unit.unitSize\" />\n            </label>\n            <NumberInput\n              id=\"strength\"\n              min={unit.minimum}\n              max={unit.maximum}\n              value={unit.strength}\n              onChange={handleStrengthChange}\n            />\n          </>\n        ) : null}\n        {unit.command && unit.command.length > 0 && (\n          <>\n            {type !== \"characters\" && (\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n            )}\n            {unit.command.map(\n              (\n                {\n                  name_en,\n                  points,\n                  perModel,\n                  id,\n                  active = false,\n                  magic,\n                  ...command\n                },\n                index\n              ) => {\n                const commandMagicPoints = getUnitMagicPoints({\n                  selected: magic?.selected,\n                });\n\n                return (\n                  <Fragment key={id}>\n                    <div\n                      className={classNames(\n                        \"checkbox\",\n                        type === \"characters\" && \"unit__bsb\"\n                      )}\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id={`command-${id}`}\n                        value={id}\n                        onChange={() => handleCommandChange(id)}\n                        checked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`command-${id}`}\n                        className=\"checkbox__label\"\n                      >\n                        {command[`name_${language}`] || name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            type !== \"characters\" &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                    {magic?.types && magic.types.length && active ? (\n                      <>\n                        <hr className=\"unit__hr\" />\n                        <List\n                          to={`/editor/${listId}/${type}/${unitId}/magic/${index}`}\n                          className=\"editor__list unit__link unit__command-list\"\n                          active={location.pathname.includes(`magic/${index}`)}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (itemType) =>\n                                    nameMap[itemType][`name_${language}`] ||\n                                    nameMap[itemType].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    unit.command[index].magic.maxPoints > 0 &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {commandMagicPoints}\n                              </span>{\" \"}\n                              {unit.command[index].magic.maxPoints > 0 && (\n                                <>{` / ${unit.command[index].magic.maxPoints}`}</>\n                              )}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints &&\n                              unit.command[index].magic.maxPoints > 0 && (\n                                <Icon\n                                  symbol=\"error\"\n                                  color=\"red\"\n                                  className=\"unit__magic-icon\"\n                                />\n                              )}\n                          </div>\n                          {magic?.selected && (\n                            <p>\n                              {magic.selected\n                                .map((selectedItem) =>\n                                  selectedItem.amount > 1\n                                    ? `${selectedItem.amount}x ` +\n                                      (selectedItem[`name_${language}`] ||\n                                        selectedItem.name_en)\n                                    : selectedItem[`name_${language}`] ||\n                                      selectedItem.name_en\n                                )\n                                .join(\", \")\n                                .replace(/\\*/g, \"\")}\n                            </p>\n                          )}\n                        </List>\n                      </>\n                    ) : null}\n                  </Fragment>\n                );\n              }\n            )}\n          </>\n        )}\n        {unit.equipment && unit.equipment.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.equipment\" />\n            </h2>\n            {unit.equipment.map(\n              ({\n                name_en,\n                points,\n                perModel,\n                id,\n                active = false,\n                ...equipment\n              }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`equipment-${id}`}\n                    name=\"equipment\"\n                    value={id}\n                    onChange={() => handleEquipmentChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`equipment-${id}`} className=\"radio__label\">\n                    {equipment[`name_${language}`] || name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        type !== \"characters\" &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.armor && unit.armor.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.armor\" />\n            </h2>\n            {unit.armor.map(\n              ({\n                name_en,\n                points,\n                perModel,\n                id,\n                active = false,\n                ...equipment\n              }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`armor-${id}`}\n                    name=\"armor\"\n                    value={id}\n                    onChange={() => handleArmorChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`armor-${id}`} className=\"radio__label\">\n                    {equipment[`name_${language}`] || name_en}\n                    <i className=\"checkbox__points\">\n                      {`${points} ${\n                        points === 1\n                          ? intl.formatMessage({\n                              id: \"app.point\",\n                            })\n                          : intl.formatMessage({\n                              id: \"app.points\",\n                            })\n                      }`}\n                      {perModel &&\n                        type !== \"characters\" &&\n                        ` ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                    </i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.options && unit.options.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.options\" />\n            </h2>\n            {unit.options.map(\n              ({\n                name_en,\n                points,\n                perModel,\n                id,\n                stackable,\n                maximum,\n                minimum = 0,\n                stackableCount = minimum || 0,\n                active = false,\n                ...equipment\n              }) =>\n                !stackable ? (\n                  <div className=\"checkbox\" key={id}>\n                    <input\n                      type=\"checkbox\"\n                      id={`options-${id}`}\n                      value={id}\n                      onChange={() => handleOptionsChange(id)}\n                      checked={active}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"checkbox__label\"\n                    >\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          type !== \"characters\" &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                ) : (\n                  <Fragment key={id}>\n                    <label\n                      htmlFor={`options-${id}`}\n                      className=\"unit__special-option\"\n                    >\n                      {equipment[`name_${language}`] || name_en}:\n                      <i className=\"checkbox__points\">\n                        {`${points} ${intl.formatMessage({\n                          id: \"app.points\",\n                        })} ${intl.formatMessage({\n                          id: \"unit.perModel\",\n                        })}`}\n                      </i>\n                    </label>\n                    <NumberInput\n                      id={`options-${id}`}\n                      min={minimum}\n                      max={maximum}\n                      value={stackableCount}\n                      onChange={(event) =>\n                        handleStackableOptionChange({\n                          id,\n                          stackableCount: event.target.value,\n                        })\n                      }\n                    />\n                  </Fragment>\n                )\n            )}\n          </>\n        )}\n        {unit.regimentalUnit && (\n          <>\n            <h2 className=\"unit__subline unit__detachments-headline\">\n              <FormattedMessage id=\"unit.detachments\" />\n            </h2>\n            {detachments.map(({ name_en, id, ...detachment }) => (\n              <Fragment key={id}>\n                <div className=\"list\">\n                  <div className=\"list__inner unit__detachments-header\">\n                    <b className=\"unit__magic-headline\">\n                      {detachment[`name_${language}`] || name_en}\n                    </b>\n                    <Button\n                      onClick={() =>\n                        handleAddDetachmentClick({\n                          id,\n                        })\n                      }\n                      type=\"secondary\"\n                      icon=\"add\"\n                      label={intl.formatMessage({ id: \"editor.add\" })}\n                      size=\"small\"\n                      disabled={\n                        unit?.detachments?.length >= unit.maxDetachments\n                      }\n                    />\n                  </div>\n                </div>\n                {unit.detachments &&\n                  unit.detachments\n                    .filter(\n                      (detachment) =>\n                        detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                    )\n                    .map(\n                      ({\n                        name_en,\n                        strength,\n                        id,\n                        points,\n                        minDetachmentSize,\n                        maxDetachmentSize,\n                        equipment: detachmentEquipment,\n                        armor: detachmentArmor,\n                        options: detachmentOptions,\n                        ...detachment\n                      }) => (\n                        <div\n                          className=\"list unit__detachments-wrapper\"\n                          key={id}\n                        >\n                          <div className=\"list__inner unit__detachments\">\n                            <NumberInput\n                              noError\n                              id={`strength-${id}`}\n                              min={minDetachmentSize || 5}\n                              max={\n                                maxDetachmentSize ||\n                                Math.floor(unit.strength / 2)\n                              }\n                              value={strength}\n                              onChange={(event) =>\n                                handleDetachmentStrengthClick({\n                                  id,\n                                  strength: event.target.value,\n                                })\n                              }\n                            />\n                            <span>\n                              <b>{detachment[`name_${language}`] || name_en}</b>\n                              <i>{`${getUnitPoints({\n                                strength,\n                                points,\n                              })} ${intl.formatMessage({\n                                id: \"app.points\",\n                              })}`}</i>\n                            </span>\n                            <Button\n                              onClick={() =>\n                                handleDeleteDetachmentClick({\n                                  id,\n                                })\n                              }\n                              type=\"secondary\"\n                              icon=\"close\"\n                              label={intl.formatMessage({ id: \"misc.remove\" })}\n                              size=\"small\"\n                            />\n                          </div>\n                          <div className=\"unit__detachments-section\">\n                            {detachmentEquipment &&\n                              detachmentEquipment.length > 0 && (\n                                <>\n                                  <h3 className=\"unit__subline\">\n                                    <FormattedMessage id=\"unit.equipment\" />\n                                  </h3>\n                                  {detachmentEquipment.map((equipment) => (\n                                    <div className=\"radio\" key={equipment.id}>\n                                      <input\n                                        type=\"radio\"\n                                        id={`equipment-${id}-${equipment.id}`}\n                                        name={`equipment-${id}`}\n                                        value={equipment.id}\n                                        onChange={() =>\n                                          handleDetachmentEquipmentChange({\n                                            detachmentId: id,\n                                            equipmentId: equipment.id,\n                                            category: \"equipment\",\n                                          })\n                                        }\n                                        checked={equipment.active || false}\n                                        className=\"radio__input\"\n                                      />\n                                      <label\n                                        htmlFor={`equipment-${id}-${equipment.id}`}\n                                        className=\"radio__label\"\n                                      >\n                                        {equipment[`name_${language}`] ||\n                                          equipment.name_en}\n                                        <i className=\"checkbox__points\">\n                                          {`${equipment.points} ${\n                                            equipment.points === 1\n                                              ? intl.formatMessage({\n                                                  id: \"app.point\",\n                                                })\n                                              : intl.formatMessage({\n                                                  id: \"app.points\",\n                                                })\n                                          }`}\n                                          {equipment.perModel &&\n                                            type !== \"characters\" &&\n                                            ` ${intl.formatMessage({\n                                              id: \"unit.perModel\",\n                                            })}`}\n                                        </i>\n                                      </label>\n                                    </div>\n                                  ))}\n                                </>\n                              )}\n                            {detachmentArmor && detachmentArmor.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.armor\" />\n                                </h3>\n                                {detachmentArmor.map((armor) => (\n                                  <div className=\"radio\" key={armor.id}>\n                                    <input\n                                      type=\"radio\"\n                                      id={`armor-${id}-${armor.id}`}\n                                      name={`armor-${id}`}\n                                      value={armor.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: armor.id,\n                                          category: \"armor\",\n                                        })\n                                      }\n                                      checked={armor.active}\n                                      className=\"radio__input\"\n                                    />\n                                    <label\n                                      htmlFor={`armor-${id}-${armor.id}`}\n                                      className=\"radio__label\"\n                                    >\n                                      {armor[`name_${language}`] ||\n                                        armor.name_en}\n                                      <i className=\"checkbox__points\">\n                                        {`${armor.points} ${\n                                          armor.points === 1\n                                            ? intl.formatMessage({\n                                                id: \"app.point\",\n                                              })\n                                            : intl.formatMessage({\n                                                id: \"app.points\",\n                                              })\n                                        }`}\n                                        {armor.perModel &&\n                                          type !== \"characters\" &&\n                                          ` ${intl.formatMessage({\n                                            id: \"unit.perModel\",\n                                          })}`}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                            {detachmentOptions && detachmentOptions.length > 0 && (\n                              <>\n                                <h3 className=\"unit__subline\">\n                                  <FormattedMessage id=\"unit.options\" />\n                                </h3>\n                                {detachmentOptions.map((option) => (\n                                  <div className=\"checkbox\" key={option.id}>\n                                    <input\n                                      type=\"checkbox\"\n                                      id={`options-${id}-${option.id}`}\n                                      value={option.id}\n                                      onChange={() =>\n                                        handleDetachmentEquipmentChange({\n                                          detachmentId: id,\n                                          equipmentId: option.id,\n                                          category: \"options\",\n                                          isCheckbox: true,\n                                        })\n                                      }\n                                      checked={option.active || false}\n                                      className=\"checkbox__input\"\n                                    />\n                                    <label\n                                      htmlFor={`options-${id}-${option.id}`}\n                                      className=\"checkbox__label\"\n                                    >\n                                      {option[`name_${language}`] ||\n                                        option.name_en}\n                                      <i className=\"checkbox__points\">\n                                        {`${option.points} ${\n                                          option.points === 1\n                                            ? intl.formatMessage({\n                                                id: \"app.point\",\n                                              })\n                                            : intl.formatMessage({\n                                                id: \"app.points\",\n                                              })\n                                        }`}\n                                        {option.perModel &&\n                                          type !== \"characters\" &&\n                                          ` ${intl.formatMessage({\n                                            id: \"unit.perModel\",\n                                          })}`}\n                                      </i>\n                                    </label>\n                                  </div>\n                                ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )\n                    )}\n              </Fragment>\n            ))}\n          </>\n        )}\n        {unit.mounts && unit.mounts.length > 0 && (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.mount\" />\n            </h2>\n            {unit.mounts.map(\n              ({ name_en, points, id, active = false, ...mount }) => (\n                <div className=\"radio\" key={id}>\n                  <input\n                    type=\"radio\"\n                    id={`mounts-${id}`}\n                    name=\"mounts\"\n                    value={id}\n                    onChange={() => handleMountsChange(id)}\n                    checked={active}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`mounts-${id}`} className=\"radio__label\">\n                    {mount[`name_${language}`] || name_en}\n                    <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                      {\n                        id: \"app.points\",\n                      }\n                    )}`}</i>\n                  </label>\n                </div>\n              )\n            )}\n          </>\n        )}\n        {unit.lores && unit.lores.length ? (\n          <>\n            <h2 className=\"unit__subline\">\n              <FormattedMessage id=\"unit.lore\" />\n            </h2>\n            {unit.lores.map((lore) => (\n              <div className=\"radio\" key={lore}>\n                <input\n                  type=\"radio\"\n                  id={`lore-${lore}`}\n                  name=\"lores\"\n                  value={lore}\n                  onChange={() => handleLoresChange(lore)}\n                  checked={(unit.activeLore || unit.lores[0]) === lore}\n                  className=\"radio__input\"\n                />\n                <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                  {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                </label>\n              </div>\n            ))}\n          </>\n        ) : null}\n        {unit.items && unit.items.length ? (\n          <hr className=\"unit__hr unit__hr--space-top\" />\n        ) : null}\n        {unit.items && unit.items.length\n          ? unit.items.map((item, itemIndex) => {\n              const itemsPoints = getUnitMagicPoints({\n                selected: item.selected,\n              });\n\n              return (\n                <List\n                  to={`/editor/${listId}/${type}/${unitId}/items/${itemIndex}`}\n                  className=\"editor__list unit__link\"\n                  active={location.pathname.includes(`items/${itemIndex}`)}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span\n                        className={classNames(\n                          itemsPoints > item.maxPoints &&\n                            item.maxPoints > 0 &&\n                            \"editor__error\"\n                        )}\n                      >\n                        {itemsPoints}\n                      </span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                    {itemsPoints > item.maxPoints && item.maxPoints > 0 && (\n                      <Icon\n                        symbol=\"error\"\n                        color=\"red\"\n                        className=\"unit__magic-icon\"\n                      />\n                    )}\n                  </div>\n                  {item.selected && (\n                    <p>\n                      {item.selected\n                        .map((selectedItem) =>\n                          selectedItem.amount > 1\n                            ? `${selectedItem.amount}x ` +\n                              (selectedItem[`name_${language}`] ||\n                                selectedItem.name_en)\n                            : selectedItem[`name_${language}`] ||\n                              selectedItem.name_en\n                        )\n                        .join(\", \")\n                        .replace(/\\*/g, \"\")}\n                    </p>\n                  )}\n                </List>\n              );\n            })\n          : null}\n        {unit.specialRules && unit.specialRules.name_en\n          ? getSpecialRules()\n          : null}\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { updateList } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\n\nimport \"./EditList.css\";\n\nexport const EditList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        points: Number(event.target.value),\n      })\n    );\n  };\n  const handleNameChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        name: event.target.value,\n      })\n    );\n  };\n  const handleDescriptionChange = (event) => {\n    dispatch(\n      updateList({\n        listId,\n        description: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"edit.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"edit.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={list.name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"description\" className=\"edit__label\">\n          <FormattedMessage id=\"misc.description\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          className=\"input\"\n          value={list.description}\n          onChange={handleDescriptionChange}\n          autoComplete=\"off\"\n          maxLength=\"255\"\n        />\n        <label htmlFor=\"points\">\n          <FormattedMessage id=\"misc.points\" />\n        </label>\n        <NumberInput\n          id=\"points\"\n          min={0}\n          value={list.points}\n          onChange={handlePointsChange}\n          required\n          interval={50}\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n// import { loadScript } from \"../../utils/script\";\n\nimport \"./About.css\";\n\nexport const About = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  // useEffect(() => {\n  //   loadScript(\"https://www.paypalobjects.com/donate/sdk/donate-sdk.js\", () => {\n  //     window.PayPal.Donation.Button({\n  //       env: \"production\",\n  //       hosted_button_id: \"VU2Z6Q32Q656A\",\n  //       image: {\n  //         src: \"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif\",\n  //         alt: \"Donate with PayPal button\",\n  //         title: \"PayPal - The safer, easier way to pay online!\",\n  //       },\n  //     }).render(\"#donate-button\");\n  //   });\n  // }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.about\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/about\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"about.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text\"\n            values={{\n              owb: <i>Old World Builder</i>,\n            }}\n          />\n        </p>\n\n        <h2>\n          <FormattedMessage id=\"about.support\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text3\"\n            values={{\n              owb: <i>Old World Builder</i>,\n              datasets: <Link to=\"/datasets\">/datasets</Link>,\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n        {/* <p>\n          <FormattedMessage id=\"about.donation\" />\n        </p>\n        <div id=\"donate-button-container\" className=\"about__donation\">\n          <div id=\"donate-button\"></div>\n        </div> */}\n\n        <h2>Credits</h2>\n        <p>\n          <FormattedMessage\n            id=\"about.text2\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.rulesIndex\"\n            values={{\n              rulesIndex: (\n                <a\n                  href=\"https://www.whfb.app/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Online Rules Index\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"about.credits\"\n            values={{\n              gameIcons: (\n                <a\n                  href=\"https://game-icons.net\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  game-icons.net\n                </a>\n              ),\n              license: (\n                <a\n                  href=\"https://creativecommons.org/licenses/by/3.0/\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  CC BY 3.0\n                </a>\n              ),\n            }}\n          />\n        </p>\n        <br />\n        <p>\n          <b>\n            <FormattedMessage id=\"about.disclaimer\" />\n          </b>\n        </p>\n        <p>\n          Warhammer: the Old World, Citadel, Forge World, Games Workshop, GW,\n          Warhammer, the 'winged-hammer' Warhammer logo, the Chaos devices, the\n          Chaos logo, Citadel Device, the Double-Headed/Imperial Eagle device,\n          'Eavy Metal, Games Workshop logo, Golden Demon, Great Unclean One, the\n          Hammer of Sigmar logo, Horned Rat logo, Keeper of Secrets, Khemri,\n          Khorne, Lord of Change, Nurgle, Skaven, the Skaven symbol devices,\n          Slaanesh, Tomb Kings, Trio of Warriors, Twin Tailed Comet Logo,\n          Tzeentch, Warhammer Online, Warhammer World logo, White Dwarf, the\n          White Dwarf logo, and all associated logos, marks, names, races, race\n          insignia, characters, vehicles, locations, units, illustrations and\n          images from the Warhammer world are either ®, TM and/or © Copyright\n          Games Workshop Ltd 2000-2024, variably registered in the UK and other\n          countries around the world. Used without permission. No challenge to\n          their status intended. All Rights Reserved to their respective owners.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, Fragment } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { fetcher } from \"../../utils/fetcher\";\nimport { List } from \"../../components/list\";\nimport { Header, Main } from \"../../components/page\";\nimport { addUnit } from \"../../state/lists\";\nimport { setArmy } from \"../../state/army\";\nimport { getRandomId } from \"../../utils/id\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { updateIds } from \"../../utils/id\";\n\nconst getArmyData = ({ data, armyComposition }) => {\n  // Remove units that don't belong to the army composition\n  const characters = data.characters.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const core = data.core.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const special = data.special.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n  const rare = data.rare.filter(\n    (unit) =>\n      (unit?.armyComposition && unit.armyComposition[armyComposition]) ||\n      !unit.armyComposition\n  );\n\n  // Get units moving category\n  const specialToCore = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"core\"\n  );\n  const rareToCore = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n  const rareToSpecial = rare.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const coreToSpecial = core.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"special\"\n  );\n  const specialToRare = special.filter(\n    (unit) =>\n      unit?.armyComposition &&\n      unit.armyComposition[armyComposition].category === \"rare\"\n  );\n\n  // Remove units from old category\n  const allCore = [...core, ...specialToCore, ...rareToCore].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"core\") ||\n      !unit.armyComposition\n  );\n  const allSpecial = [...special, ...coreToSpecial, ...rareToSpecial].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"special\") ||\n      !unit.armyComposition\n  );\n  const allRare = [...rare, ...specialToRare].filter(\n    (unit) =>\n      (unit?.armyComposition &&\n        unit.armyComposition[armyComposition].category === \"rare\") ||\n      !unit.armyComposition\n  );\n\n  return {\n    lords: updateIds(data.lords),\n    heroes: updateIds(data.heroes),\n    characters: updateIds(characters),\n    core: updateIds(allCore),\n    special: updateIds(allSpecial),\n    rare: updateIds(allRare),\n    mercenaries: updateIds(data.mercenaries),\n    allies: updateIds(data.allies),\n  };\n};\n\nexport const Add = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId, type } = useParams();\n  const dispatch = useDispatch();\n  const [redirect, setRedirect] = useState(null);\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const army = useSelector((state) => state.army);\n  const handleAdd = (unitId) => {\n    const unit = {\n      ...army[type].find(({ id }) => unitId === id),\n      id: `${unitId}.${getRandomId()}`,\n    };\n\n    dispatch(addUnit({ listId, type, unit }));\n    setRedirect(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list &&\n      !army &&\n      fetcher({\n        url: `games/${list.game}/${list.army}`,\n        onSuccess: (data) => {\n          const armyData = getArmyData({\n            data,\n            armyComposition: list.armyComposition || list.army,\n          });\n\n          dispatch(setArmy(armyData));\n        },\n      });\n  }, [list, army, dispatch]);\n\n  if (redirect) {\n    return <Redirect to={`/editor/${listId}/${type}/${redirect.id}`} />;\n  }\n\n  if (!army) {\n    if (isMobile) {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} />\n          <Main loading />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Header to={`/editor/${listId}`} isSection />\n          <Main loading />\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"add.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"add.title\",\n            })}\n          />\n        )}\n        <ul>\n          {army[type].map(({ id, minimum, points, name_en, ...army }) => (\n            <List key={id} onClick={() => handleAdd(id)}>\n              <span className=\"unit__name\">\n                {minimum ? `${minimum} ` : null}\n                <b>{army[`name_${language}`] || name_en}</b>\n              </span>\n              <i className=\"unit__points\">{`${\n                minimum ? points * minimum : points\n              } ${intl.formatMessage({\n                id: \"app.points\",\n              })}`}</i>\n            </List>\n          ))}\n        </ul>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Help = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({ id: \"footer.help\" })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/help\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"help.title\" />\n        </h2>\n        <p>\n          <FormattedMessage\n            id=\"help.text\"\n            values={{\n              github: (\n                <a\n                  href=\"https://github.com/nthiebes/old-world-builder\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  GitHub\n                </a>\n              ),\n              discord: (\n                <a\n                  href=\"https://discord.gg/87nUyjUxTU\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              ),\n            }}\n          />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"./Expandable.css\";\n\nexport const Expandable = ({\n  className,\n  headline,\n  children,\n  notBold,\n  open,\n  onClick,\n  noMargin,\n}) => (\n  <details\n    className={classNames(\n      \"expandable\",\n      noMargin && \"expandable--no-margin\",\n      className\n    )}\n    open={open}\n  >\n    <summary\n      className={classNames(\n        \"expandable__summary\",\n        notBold && \"expandable__summary--normal\"\n      )}\n      onClick={onClick}\n    >\n      {headline}\n    </summary>\n    {children}\n  </details>\n);\n\nExpandable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  headline: PropTypes.node.isRequired,\n  open: PropTypes.bool,\n  onClick: PropTypes.func,\n  notBold: PropTypes.bool,\n};\n\nExpandable.defaultProps = {\n  open: false,\n  notBold: false,\n};\n","import { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport gameSystems from \"../../assets/armies.json\";\nimport { nameMap } from \"../magic\";\n\nconst getUnitsString = ({\n  units,\n  isShowList,\n  isCompactList,\n  showSpecialRules,\n  intl,\n  language,\n}) => {\n  return units\n    .map((unit) => {\n      const allOptions = getAllOptions(unit, {\n        asString: true,\n        noMagic: isShowList,\n      });\n      let optionsString = \"\";\n\n      if (allOptions) {\n        if (isCompactList) {\n          optionsString = `(${allOptions})\\n`;\n        } else {\n          optionsString = `- ${allOptions.split(\", \").join(\"\\n- \")}\\n`;\n        }\n      }\n      if (showSpecialRules && unit.specialRules) {\n        optionsString += `${intl.formatMessage({\n          id: \"unit.specialRules\",\n        })}: ${\n          unit.specialRules[`name_${language}`] || unit.specialRules.name_en\n        }\\n`;\n      }\n\n      // prettier-ignore\n      return `${unit.strength || unit.minimum ? `${unit.strength || unit.minimum} ` : \"\"\n}${unit[`name_${language}`] || unit.name_en}${isShowList ? '' : ' [' + getUnitPoints(unit) + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${optionsString}\n`;\n    })\n    .join(\"\");\n};\n\nexport const getListAsText = ({\n  list,\n  isShowList,\n  isCompactList,\n  intl,\n  language,\n  showSpecialRules,\n}) => {\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n  const armyCompositionName = nameMap[list.armyComposition]\n    ? nameMap[list.armyComposition][`name_${language}`]\n    : \"\";\n  const armyCompositionString = armyCompositionName\n    ? `, ${armyCompositionName}`\n    : \"\";\n  let listString = \"\";\n\n  // HEADER\n  // prettier-ignore\n  if (!isCompactList) {\n    listString += `===\n${list.name}${isShowList ? '' : ' [' + allPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'}\n${game.name}, ${armyName}${armyCompositionString}\n===\n\n`;\n  }\n\n  // CHARACTERS\n  // prettier-ignore\n  if (list.characters?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.characters\",\n})}${isShowList ? '' : ' [' + charactersPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.characters,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // LORDS\n  // prettier-ignore\n  if (list.lords?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.lords\",\n})}${isShowList ? '' : ' [' + lordsPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.lords,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // HEROES\n  // prettier-ignore\n  if (list.heroes?.length) {\n      listString += `++ ${intl.formatMessage({\n  id: \"editor.heroes\",\n})}${isShowList ? '' : ' [' + heroesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? '' : '\\n';\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.heroes,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // CORE\n  // prettier-ignore\n  if (list.core.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.core\",\n})}${isShowList ? '' : ' [' + corePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.core,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // SPECIAL\n  // prettier-ignore\n  if (list.special.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.special\",\n})}${isShowList ? '' : ' [' + specialPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n    \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.special,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // RARE\n  // prettier-ignore\n  if (list.rare.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.rare\",\n})}${isShowList ? '' : ' [' + rarePoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.rare,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // MERCENARIES\n  // prettier-ignore\n  if (list.mercenaries?.length) {\n    listString += `++ ${intl.formatMessage({\n  id: \"editor.mercenaries\",\n})}${isShowList ? '' : ' [' + mercenariesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n  \n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.mercenaries,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  // ALLIES\n  // prettier-ignore\n  if (list.allies?.length) {\n  listString += `++ ${intl.formatMessage({\n  id: \"editor.allies\",\n})}${isShowList ? '' : ' [' + alliesPoints + ' ' + intl.formatMessage({\n  id: \"app.points\",\n}) + ']'} ++\n`\n    listString += isCompactList ? \"\" : \"\\n\";\n\n    listString += `${getUnitsString({\n      isCompactList,\n      showSpecialRules,\n      units: list.allies,\n      isShowList,\n      intl,\n      language,\n    })}`;\n  }\n\n  listString += `---\n${intl.formatMessage({\n  id: \"export.createdWith\",\n})} \"Old World Builder\"\n\n[https://old-world-builder.com]`;\n\n  return listString;\n};\n","import { useEffect, Fragment, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport { getListAsText } from \"./get-list-as-text\";\n// import { getListAsBBCode } from \"./get-list-as-bbcode\";\nimport \"./Export.css\";\n\nconst getFile = ({ list, listText, asText }) => {\n  const fileName = `${list?.name\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/,/g, \"\")}.${asText ? \"txt\" : \"owb.json\"}`;\n  const file = new File([asText ? listText : JSON.stringify(list)], fileName, {\n    type: asText ? \"text/plain\" : \"application/json\",\n  });\n  const fileUrl = URL.createObjectURL(file);\n\n  return {\n    file,\n    fileUrl,\n    fileName,\n  };\n};\n\nexport const Export = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const intl = useIntl();\n  const location = useLocation();\n  const { language } = useLanguage();\n  const { listId } = useParams();\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [shareOwbError, setOwbShareError] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [isCompactList, setIsCompactList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  // const [isForumList, setIsForumList] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const listText = list\n    ? getListAsText({\n        list,\n        isShowList,\n        isCompactList,\n        showSpecialRules,\n        intl,\n        language,\n      })\n    : \"\";\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(listText).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const { file, fileUrl, fileName } = getFile({ list });\n  const { fileName: textFileName, fileUrl: textFileUrl } = getFile({\n    list,\n    listText,\n    asText: true,\n  });\n  const share = async ({ asText }) => {\n    const shareData = {};\n\n    asText ? setShareError(false) : setOwbShareError(false);\n\n    if (asText) {\n      shareData.text = listText;\n    } else {\n      shareData.title = list.name;\n      shareData.files = [file];\n      shareData.text = list.description;\n    }\n\n    if (!navigator.canShare) {\n      asText ? setShareError(true) : setOwbShareError(true);\n      return;\n    }\n\n    try {\n      await navigator.share(shareData);\n    } catch (error) {\n      asText ? setShareError(true) : setOwbShareError(true);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  if (!list) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"export.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"export.title\",\n            })}\n          />\n        )}\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.copyTitle\" />\n        </h2>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"compact\"\n            onChange={() => setIsCompactList(!isCompactList)}\n            checked={isCompactList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"compact\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.compactList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.compactListDescription\" />\n          </i>\n        </p>\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"show\"\n            onChange={() => setIsShowList(!isShowList)}\n            checked={isShowList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"show\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.visibleList\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.visibleListDescription\" />\n          </i>\n        </p>\n        {/* <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"forum\"\n            onChange={() => setIsForumList(!isForumList)}\n            checked={isForumList}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"forum\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.forumText\" />\n          </label>\n        </div>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.forumTextDescription\" />\n          </i>\n        </p> */}\n        <div className=\"checkbox export__visible-checkbox\">\n          <input\n            type=\"checkbox\"\n            id=\"specialRules\"\n            onChange={() => setShowSpecialRules(!showSpecialRules)}\n            checked={showSpecialRules}\n            className=\"checkbox__input\"\n          />\n          <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n            <FormattedMessage id=\"export.specialRules\" />\n          </label>\n        </div>\n        <p className=\"export__description\"></p>\n        <Expandable headline={<FormattedMessage id=\"export.preview\" />}>\n          <textarea className=\"export__text\" value={listText} readOnly />\n        </Expandable>\n        <Button icon=\"share\" onClick={() => share({ asText: true })}>\n          <FormattedMessage id=\"export.shareText\" />\n        </Button>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button\n          icon={copied ? \"check\" : \"copy\"}\n          onClick={copyText}\n          spaceTop\n          spaceBottom\n        >\n          {copied\n            ? intl.formatMessage({\n                id: \"export.copied\",\n              })\n            : intl.formatMessage({\n                id: \"export.copy\",\n              })}\n        </Button>\n        <br />\n        {copyError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n        <Button icon=\"download\" href={textFileUrl} download={textFileName}>\n          <FormattedMessage id=\"export.downloadAsText\" />\n        </Button>\n\n        <h2 className=\"export__subtitle\">\n          <FormattedMessage id=\"export.owbTitle\" />\n        </h2>\n        <p>\n          <i>\n            <FormattedMessage id=\"export.dowloadInfo\" />\n          </i>\n        </p>\n        <Button\n          icon=\"download\"\n          href={fileUrl}\n          download={fileName}\n          spaceBottom\n          spaceTop\n        >\n          <FormattedMessage id=\"export.download\" />\n        </Button>\n        <br />\n        <Button icon=\"share\" onClick={share}>\n          <FormattedMessage id=\"export.shareOwb\" />\n        </Button>\n        <p className=\"export__description\">\n          <i>\n            <FormattedMessage id=\"export.shareDescription\" />\n          </i>\n        </p>\n        {shareOwbError && (\n          <p className=\"export__error\">\n            <FormattedMessage id=\"export.error\" />\n          </p>\n        )}\n      </MainComponent>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { getAllOptions } from \"../../utils/unit\";\nimport { getUnitPoints, getPoints, getAllPoints } from \"../../utils/points\";\nimport { useLanguage } from \"../../utils/useLanguage\";\nimport { nameMap } from \"../magic\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport \"./Print.css\";\n\nexport const Print = () => {\n  const { listId } = useParams();\n  const { language } = useLanguage();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isShowList, setIsShowList] = useState(false);\n  const [showSpecialRules, setShowSpecialRules] = useState(false);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  if (!list) {\n    return null;\n  }\n\n  const allPoints = getAllPoints(list);\n  const lordsPoints = getPoints({ list, type: \"lords\" });\n  const heroesPoints = getPoints({ list, type: \"heroes\" });\n  const charactersPoints = getPoints({ list, type: \"characters\" });\n  const corePoints = getPoints({ list, type: \"core\" });\n  const specialPoints = getPoints({ list, type: \"special\" });\n  const rarePoints = getPoints({ list, type: \"rare\" });\n  const mercenariesPoints = getPoints({ list, type: \"mercenaries\" });\n  const alliesPoints = getPoints({ list, type: \"allies\" });\n  const game = gameSystems.find((game) => game.id === list.game);\n  const armyName = game.armies.find((army) => army.id === list.army)[\n    `name_${language}`\n  ];\n  const armyCompositionName = nameMap[list.armyComposition]\n    ? nameMap[list.armyComposition][`name_${language}`]\n    : \"\";\n  const handlePrintClick = () => {\n    setIsPrinting(true);\n    document.title = `${list.name} - Old World Builder`;\n    window.onafterprint = () => {\n      document.title = \"Old World Builder\";\n      setIsPrinting(false);\n    };\n    window.print();\n  };\n\n  return (\n    <>\n      <div className=\"hide-for-printing\">\n        <Button\n          to={`/editor/${listId}`}\n          centered\n          icon=\"back\"\n          spaceTop\n          spaceBottom\n        >\n          <FormattedMessage id=\"header.back\" />\n        </Button>\n        {isPrinting ? (\n          <p className=\"print-info\">\n            <FormattedMessage id=\"print.printing\" />\n          </p>\n        ) : (\n          <>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"show\"\n                onChange={() => setIsShowList(!isShowList)}\n                checked={isShowList}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"show\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.visibleList\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\">\n              <i>\n                <FormattedMessage id=\"export.visibleListDescription\" />\n              </i>\n            </p>\n            <div className=\"checkbox print-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"specialRules\"\n                onChange={() => setShowSpecialRules(!showSpecialRules)}\n                checked={showSpecialRules}\n                className=\"checkbox__input\"\n              />\n              <label htmlFor=\"specialRules\" className=\"checkbox__label\">\n                <FormattedMessage id=\"export.specialRules\" />\n              </label>\n            </div>\n            <p className=\"print-checkbox-description\"></p>\n            <Button\n              onClick={handlePrintClick}\n              centered\n              icon=\"print\"\n              spaceTop\n              spaceBottom\n            >\n              <FormattedMessage id=\"misc.print\" />\n            </Button>\n          </>\n        )}\n      </div>\n\n      <main className=\"print\">\n        <h1>\n          {list.name}{\" \"}\n          {!isShowList && (\n            <span className=\"print__points\">\n              [{allPoints} <FormattedMessage id=\"app.points\" />]\n            </span>\n          )}\n        </h1>\n        <p className=\"print__subheader\">\n          {game.name}, {armyName}\n          {armyCompositionName ? `, ${armyCompositionName}` : \"\"}\n        </p>\n\n        {list.game === \"the-old-world\" ? (\n          <section>\n            <h2>\n              <FormattedMessage id=\"editor.characters\" />{\" \"}\n              {!isShowList && (\n                <span className=\"print__points\">\n                  [{charactersPoints} <FormattedMessage id=\"app.points\" />]\n                </span>\n              )}\n            </h2>\n            <ul>\n              {list.characters.map((unit) => (\n                <li key={unit.id}>\n                  <h3>\n                    {unit[`name_${language}`] || unit.name_en}\n                    {!isShowList && (\n                      <span className=\"print__points\">\n                        [{getUnitPoints(unit)}{\" \"}\n                        <FormattedMessage id=\"app.points\" />]\n                      </span>\n                    )}\n                  </h3>\n                  {getAllOptions(unit)}\n                  {showSpecialRules && unit.specialRules ? (\n                    <p>\n                      <b>\n                        <FormattedMessage id=\"unit.specialRules\" />:\n                      </b>{\" \"}\n                      {unit.specialRules[`name_${language}`] ||\n                        unit.specialRules.name_en}\n                    </p>\n                  ) : null}\n                </li>\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.lords\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{lordsPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.lords.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p>\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        {unit.specialRules[`name_${language}`] ||\n                          unit.specialRules.name_en}\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.heroes\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{heroesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.heroes.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p>\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        {unit.specialRules[`name_${language}`] ||\n                          unit.specialRules.name_en}\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.core\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{corePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.core.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p>\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    {unit.specialRules[`name_${language}`] ||\n                      unit.specialRules.name_en}\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.special\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{specialPoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.special.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p>\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    {unit.specialRules[`name_${language}`] ||\n                      unit.specialRules.name_en}\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section>\n          <h2>\n            <FormattedMessage id=\"editor.rare\" />{\" \"}\n            {!isShowList && (\n              <span className=\"print__points\">\n                [{rarePoints} <FormattedMessage id=\"app.points\" />]\n              </span>\n            )}\n          </h2>\n          <ul>\n            {list.rare.map((unit) => (\n              <li key={unit.id}>\n                <h3>\n                  {unit.strength || unit.minimum ? (\n                    <span className=\"print__strength\">\n                      {`${unit.strength || unit.minimum} `}\n                    </span>\n                  ) : null}\n                  {unit[`name_${language}`] || unit.name_en}\n                  {!isShowList && (\n                    <span className=\"print__points\">\n                      [{getUnitPoints(unit)}{\" \"}\n                      <FormattedMessage id=\"app.points\" />]\n                    </span>\n                  )}\n                </h3>\n                {getAllOptions(unit)}\n                {showSpecialRules && unit.specialRules ? (\n                  <p>\n                    <b>\n                      <FormattedMessage id=\"unit.specialRules\" />:\n                    </b>{\" \"}\n                    {unit.specialRules[`name_${language}`] ||\n                      unit.specialRules.name_en}\n                  </p>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        {list.game === \"the-old-world\" && (\n          <>\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.mercenaries\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{mercenariesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.mercenaries.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit.strength || unit.minimum ? (\n                        <span className=\"print__strength\">\n                          {`${unit.strength || unit.minimum} `}\n                        </span>\n                      ) : null}\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p>\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        {unit.specialRules[`name_${language}`] ||\n                          unit.specialRules.name_en}\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n\n            <section>\n              <h2>\n                <FormattedMessage id=\"editor.allies\" />{\" \"}\n                {!isShowList && (\n                  <span className=\"print__points\">\n                    [{alliesPoints} <FormattedMessage id=\"app.points\" />]\n                  </span>\n                )}\n              </h2>\n              <ul>\n                {list.allies.map((unit) => (\n                  <li key={unit.id}>\n                    <h3>\n                      {unit.strength || unit.minimum ? (\n                        <span className=\"print__strength\">\n                          {`${unit.strength || unit.minimum} `}\n                        </span>\n                      ) : null}\n                      {unit[`name_${language}`] || unit.name_en}\n                      {!isShowList && (\n                        <span className=\"print__points\">\n                          [{getUnitPoints(unit)}{\" \"}\n                          <FormattedMessage id=\"app.points\" />]\n                        </span>\n                      )}\n                    </h3>\n                    {getAllOptions(unit)}\n                    {showSpecialRules && unit.specialRules ? (\n                      <p>\n                        <b>\n                          <FormattedMessage id=\"unit.specialRules\" />:\n                        </b>{\" \"}\n                        {unit.specialRules[`name_${language}`] ||\n                          unit.specialRules.name_en}\n                      </p>\n                    ) : null}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </>\n        )}\n      </main>\n\n      <footer className=\"print-footer\">\n        <p>\n          <FormattedMessage id=\"export.createdWith\" />{\" \"}\n          <b>\"Old World Builder\"</b>\n        </p>\n        <p>\n          [\n          <a href=\"https://old-world-builder.com\">\n            <i>old-world-builder.com</i>\n          </a>\n          ]\n        </p>\n      </footer>\n    </>\n  );\n};\n","import { Fragment, useEffect, useState } from \"react\";\nimport { useParams, useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./DuplicateList.css\";\n\nexport const DuplicateList = ({ isMobile }) => {\n  const location = useLocation();\n  const intl = useIntl();\n  const MainComponent = isMobile ? Main : Fragment;\n  const { listId } = useParams();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [points, setPoints] = useState(2000);\n  const [description, setDescription] = useState(\"\");\n  const [redirect, setRedirect] = useState(null);\n  const lists = useSelector((state) => state.lists);\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n\n  const handlePointsChange = (event) => {\n    setPoints(event.target.value);\n  };\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    const newId = getRandomId();\n    const newLists = [\n      ...lists,\n      {\n        ...list,\n        name,\n        points,\n        description,\n        id: newId,\n      },\n    ];\n\n    event.preventDefault();\n\n    localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n    dispatch(setLists(newLists));\n\n    setRedirect(newId);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    if (list) {\n      setName(\n        `${intl.formatMessage({\n          id: \"duplicate.copyOf\",\n        })} ${list?.name}`\n      );\n      setPoints(list.points);\n      setDescription(list.description);\n    }\n  }, [list, intl]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}`}\n          headline={intl.formatMessage({\n            id: \"duplicate.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}`}\n            headline={intl.formatMessage({\n              id: \"duplicate.title\",\n            })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"duplicate\">\n          <label htmlFor=\"name\">\n            <FormattedMessage id=\"misc.name\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"input\"\n            value={name}\n            onChange={handleNameChange}\n            autoComplete=\"off\"\n            required\n            maxLength=\"100\"\n          />\n          <label htmlFor=\"description\" className=\"edit__label\">\n            <FormattedMessage id=\"misc.description\" />\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            className=\"input\"\n            value={description}\n            onChange={handleDescriptionChange}\n            autoComplete=\"off\"\n            maxLength=\"255\"\n          />\n          <label htmlFor=\"points\">\n            <FormattedMessage id=\"misc.points\" />\n          </label>\n          <NumberInput\n            id=\"points\"\n            min={0}\n            value={points}\n            onChange={handlePointsChange}\n            required\n            interval={50}\n          />\n          <Button centered icon=\"duplicate\" submitButton>\n            <FormattedMessage id=\"misc.duplicate\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { Fragment, useEffect } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { editUnit } from \"../../state/lists\";\nimport { updateLocalList } from \"../../utils/list\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./Rename.css\";\n\nexport const Rename = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const intl = useIntl();\n  const { language } = useLanguage();\n  const { listId, type, unitId } = useParams();\n  const dispatch = useDispatch();\n  const list = useSelector((state) =>\n    state.lists.find(({ id }) => listId === id)\n  );\n  const units = list ? list[type] : null;\n  const unit = units && units.find(({ id }) => id === unitId);\n  const name = unit ? unit[`name_${language}`] || unit.name_en : \"\";\n\n  const handleNameChange = (event) => {\n    dispatch(\n      editUnit({\n        listId,\n        type,\n        unitId,\n        name: event.target.value,\n      })\n    );\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    list && updateLocalList(list);\n  }, [list]);\n\n  if (!list) {\n    return (\n      <>\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n        <Main />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{`Old World Builder | ${list?.name}`}</title>\n      </Helmet>\n\n      {isMobile && (\n        <Header\n          to={`/editor/${listId}/${type}/${unitId}`}\n          headline={intl.formatMessage({\n            id: \"rename.title\",\n          })}\n        />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to={`/editor/${listId}/${type}/${unitId}`}\n            headline={intl.formatMessage({\n              id: \"rename.title\",\n            })}\n          />\n        )}\n        <label htmlFor=\"name\" className=\"rename__label\">\n          <FormattedMessage id=\"misc.name\" />\n        </label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          className=\"input\"\n          value={name}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          required\n          maxLength=\"100\"\n        />\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport { NumberInput } from \"../../components/number-input\";\nimport { Button } from \"../../components/button\";\nimport { Expandable } from \"../../components/expandable\";\n\nimport \"./Entity.css\";\n\nconst initialUnitState = {\n  name_en: \"\",\n  name_de: \"\",\n  name_es: \"\",\n  name_fr: \"\",\n  id: \"\",\n  points: 1,\n  minimum: 0,\n  maximum: 0,\n  regimentalUnit: false,\n  detachment: false,\n  command: [],\n  equipment: [],\n  armor: [],\n  options: [],\n  mounts: [],\n  items: [],\n  lores: [],\n  specialRules: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n  },\n  notes: {\n    name_en: \"\",\n    name_de: \"\",\n    name_es: \"\",\n    name_fr: \"\",\n  },\n};\nconst magicItemTypes = [\n  \"weapon\",\n  \"armor\",\n  \"armor-mages\",\n  \"talisman\",\n  \"banner\",\n  \"arcane-item\",\n  \"enchanted-item\",\n  \"weapon-runes\",\n  \"armor-runes\",\n  \"banner-runes\",\n  \"talismanic-runes\",\n  \"engineering-runes\",\n  \"triptych\",\n  \"knightly-virtue\",\n  \"knightly-virtue-character\",\n  \"chaos-mutation\",\n  \"chaos-mutation-character\",\n  \"chaos-mutation-chieftain\",\n  \"gift-of-chaos\",\n  \"forest-spite\",\n  \"vampiric-power\",\n  \"daemonic-gift\",\n];\nconst loresOfMagic = [\n  \"daemonology\",\n  \"dark-magic\",\n  \"elementalism\",\n  \"battle-magic\",\n  \"high-magic\",\n  \"illusion\",\n  \"necromancy\",\n  \"waaagh-magic\",\n];\nconst getRandomId = () =>\n  (Math.random().toString(36) + Math.random().toString(36)).replace(\n    /[^a-z]+/g,\n    \"\"\n  );\n\nexport const Entity = ({ onSubmit, type, unit: existingUnit }) => {\n  const randomId = getRandomId();\n  const [unit, setUnit] = useState(\n    existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n  );\n  const handleSubmit = (event) => {\n    const isNew = !Boolean(existingUnit);\n\n    event.preventDefault();\n    onSubmit({\n      unit: {\n        ...unit,\n        id: isNew\n          ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n          : unit.id,\n      },\n      type,\n      isNew,\n    });\n    isNew && setUnit(initialUnitState);\n  };\n  const handleFieldChange = (event) => {\n    const id = event.target.id.split(\"-\")[0];\n\n    setUnit({\n      ...unit,\n      [id]:\n        event.target.type === \"number\"\n          ? Number(event.target.value)\n          : event.target.value,\n    });\n  };\n  const handleSpecialRulesChange = ({ field, key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        [field]: value,\n      },\n    });\n  };\n  const handleSpecialRulesBlur = ({ key, value }) => {\n    setUnit({\n      ...unit,\n      [key]: {\n        ...unit[key],\n        name_de: !unit[key].name_de ? value : unit[key].name_de,\n        name_es: !unit[key].name_es ? value : unit[key].name_es,\n        name_fr: !unit[key].name_fr ? value : unit[key].name_fr,\n      },\n    });\n  };\n  const handleCheckboxChange = ({ field, value }) => {\n    setUnit({\n      ...unit,\n      [field]: value,\n    });\n  };\n  const handleLoresOfMagicChange = ({ lore }) => {\n    if (unit.lores.includes(lore)) {\n      setUnit({\n        ...unit,\n        lores: unit.lores.filter((loreName) => loreName !== lore),\n      });\n    } else {\n      setUnit({\n        ...unit,\n        lores: [...unit.lores, lore],\n      });\n    }\n  };\n  const handleNameBlur = () => {\n    const isNew = !Boolean(existingUnit);\n\n    setUnit({\n      ...unit,\n      id: isNew\n        ? unit.name_en.toLowerCase().replace(/ /g, \"-\").replace(/,/g, \"\")\n        : unit.id,\n      name_de: !unit.name_de ? unit.name_en : unit.name_de,\n      name_es: !unit.name_es ? unit.name_en : unit.name_es,\n      name_fr: !unit.name_fr ? unit.name_en : unit.name_fr,\n    });\n  };\n  const handleSecondLevelFieldChange = ({ key, field, value, index }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (index === entryIndex) {\n        return {\n          ...entry,\n          [field]: value,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleSecondLevelDelete = ({ index, key }) => {\n    setUnit({\n      ...unit,\n      [key]: unit[key].filter((_, entryIndex) => entryIndex !== index),\n    });\n  };\n  const handleSecondLevelNameBlur = ({ index, value, key }) => {\n    const newEntries = unit[key].map((entry, entryIndex) => {\n      if (entryIndex === index) {\n        return {\n          ...entry,\n          name_de: !entry.name_de ? value : entry.name_de,\n          name_es: !entry.name_es ? value : entry.name_es,\n          name_fr: !entry.name_fr ? value : entry.name_fr,\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      [key]: newEntries,\n    });\n  };\n  const handleCommandMagicChange = ({ value, item, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            types:\n              value === \"on\"\n                ? [...command.magic.types, item]\n                : command.magic.types.filter((name) => name !== item),\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleCommandMagicPointsChange = ({ value, index }) => {\n    const newCommandEntries = unit.command.map((command, commandIndex) => {\n      if (commandIndex === index) {\n        return {\n          ...command,\n          magic: {\n            ...command.magic,\n            maxPoints: value,\n          },\n        };\n      }\n      return command;\n    });\n\n    setUnit({\n      ...unit,\n      command: newCommandEntries,\n    });\n  };\n  const handleItemsChange = ({ value, type, itemIndex }) => {\n    const newEntries = unit.items.map((entry, entryIndex) => {\n      if (itemIndex === entryIndex) {\n        return {\n          ...entry,\n          types:\n            value === \"on\"\n              ? [...unit.items[itemIndex].types, type]\n              : unit.items[itemIndex].types.filter((name) => name !== type),\n        };\n      }\n      return entry;\n    });\n\n    setUnit({\n      ...unit,\n      items: newEntries,\n    });\n  };\n  const handleNewCommand = () => {\n    setUnit({\n      ...unit,\n      command: [\n        ...unit.command,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          points: 1,\n          magic: {\n            types: [],\n            maxPoints: 0,\n          },\n        },\n      ],\n    });\n  };\n  const handleNewEquipment = () => {\n    setUnit({\n      ...unit,\n      equipment: [\n        ...unit.equipment,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewArmor = () => {\n    setUnit({\n      ...unit,\n      armor: [\n        ...unit.armor,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          points: 1,\n          perModel: true,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewOption = () => {\n    setUnit({\n      ...unit,\n      options: [\n        ...unit.options,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          points: 1,\n          perModel: true,\n          stackable: false,\n          minimum: 0,\n          maximum: 0,\n        },\n      ],\n    });\n  };\n  const handleNewMount = () => {\n    setUnit({\n      ...unit,\n      mounts: [\n        ...unit.mounts,\n        {\n          name_en: \"\",\n          name_de: \"\",\n          name_es: \"\",\n          name_fr: \"\",\n          points: 1,\n          active: false,\n        },\n      ],\n    });\n  };\n  const handleNewMagicItemCategory = () => {\n    setUnit({\n      ...unit,\n      items: [\n        ...unit.items,\n        {\n          name_en: \"Magic Items\",\n          name_de: \"Magische Gegenstände\",\n          name_es: \"Objetos mágicos\",\n          name_fr: \"Objets magiques\",\n          types: [],\n          selected: [],\n          maxPoints: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    setUnit(\n      existingUnit ? { ...initialUnitState, ...existingUnit } : initialUnitState\n    );\n  }, [existingUnit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={`name_en-${randomId}`}>Name English</label>\n      <input\n        type=\"text\"\n        id={`name_en-${randomId}`}\n        className=\"input\"\n        value={unit.name_en}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n        onBlur={handleNameBlur}\n      />\n      <label htmlFor={`name_de-${randomId}`}>Name German</label>\n      <input\n        type=\"text\"\n        id={`name_de-${randomId}`}\n        className=\"input\"\n        value={unit.name_de}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_es-${randomId}`}>Name Spanish</label>\n      <input\n        type=\"text\"\n        id={`name_es-${randomId}`}\n        className=\"input\"\n        value={unit.name_es}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`name_fr-${randomId}`}>Name French</label>\n      <input\n        type=\"text\"\n        id={`name_fr-${randomId}`}\n        className=\"input\"\n        value={unit.name_fr}\n        onChange={handleFieldChange}\n        autoComplete=\"off\"\n        required\n      />\n      <label htmlFor={`id-${randomId}`} className=\"edit__label\">\n        ID\n      </label>\n      <input\n        type=\"text\"\n        id={`id-${randomId}`}\n        className=\"input\"\n        value={unit.id}\n        autoComplete=\"off\"\n        pattern=\"(([a-z]*-[a-z]*)|[a-z]*)*\"\n        disabled\n        readOnly\n        placeholder=\"Automatically filled\"\n        required\n      />\n      <label htmlFor={`points-${randomId}`}>\n        {type === \"characters\" ? \"Points\" : \"Points per model\"}\n      </label>\n      <NumberInput\n        id={`points-${randomId}`}\n        min={1}\n        value={unit.points}\n        onChange={handleFieldChange}\n        required\n      />\n      {type !== \"characters\" && (\n        <>\n          <label htmlFor={`minimum-${randomId}`}>\n            Minimum number of models\n          </label>\n          <NumberInput\n            id={`minimum-${randomId}`}\n            min={0}\n            value={unit.minimum}\n            onChange={handleFieldChange}\n            required\n          />\n          <label htmlFor={`maximum-${randomId}`}>\n            Maximum number of models\n          </label>\n          <NumberInput\n            id={`maximum-${randomId}`}\n            min={0}\n            value={unit.maximum}\n            onChange={handleFieldChange}\n            required\n          />\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`regimentalUnit-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"regimentalUnit\",\n                  value: !unit.regimentalUnit,\n                })\n              }\n              checked={unit.regimentalUnit}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`regimentalUnit-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit can have detachments\n            </label>\n          </div>\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`detachment-${randomId}`}\n              onChange={() =>\n                handleCheckboxChange({\n                  field: \"detachment\",\n                  value: !unit.detachment,\n                })\n              }\n              checked={unit.detachment}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`detachment-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Unit is a detachment\n            </label>\n          </div>\n        </>\n      )}\n      {type === \"characters\" && (\n        <Expandable headline=\"Allowed Lores of Magic\">\n          {loresOfMagic.map((lore, loreIndex) => (\n            <div className=\"checkbox\" key={lore}>\n              <input\n                type=\"checkbox\"\n                id={`${lore}-${loreIndex}-${randomId}`}\n                onChange={() =>\n                  handleLoresOfMagicChange({\n                    lore,\n                  })\n                }\n                checked={unit.lores.includes(lore)}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`${lore}-${loreIndex}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                {lore}\n              </label>\n            </div>\n          ))}\n        </Expandable>\n      )}\n      <Expandable headline=\"Special Rules\">\n        <label htmlFor={`specialRules-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`specialRules-en-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`specialRules-de-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`specialRules-es-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`specialRules-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`specialRules-fr-${randomId}`}\n          className=\"input\"\n          value={unit.specialRules?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"specialRules\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. Stubborn, Regiment, etc.\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n      <Expandable headline=\"Notes\">\n        <label htmlFor={`notes-en-${randomId}`}>English</label>\n        <input\n          type=\"text\"\n          id={`notes-en-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_en}\n          onBlur={(event) =>\n            handleSpecialRulesBlur({\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_en\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-de-${randomId}`}>German</label>\n        <input\n          type=\"text\"\n          id={`notes-de-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_de}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_de\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-es-${randomId}`}>Spanish</label>\n        <input\n          type=\"text\"\n          id={`notes-es-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_es}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_es\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n        <label htmlFor={`notes-fr-${randomId}`}>French</label>\n        <input\n          type=\"text\"\n          id={`notes-fr-${randomId}`}\n          className=\"input\"\n          value={unit.notes?.name_fr}\n          onChange={(event) =>\n            handleSpecialRulesChange({\n              field: \"name_fr\",\n              key: \"notes\",\n              value: event.target.value,\n            })\n          }\n          placeholder=\"e.g. '0-1 per 1000 points'\"\n          autoComplete=\"off\"\n        />\n      </Expandable>\n\n      {type !== \"characters\" && (\n        <>\n          <hr />\n          <h3>Command</h3>\n          <p className=\"datasets__paragraph\">\n            All command options are NOT mutually exclusive.\n          </p>\n          {unit.command.map((command, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`command-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"command\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`command-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`command-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={command.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`command-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`command-points${index}-${randomId}`}\n                value={command.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"command\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <Expandable headline=\"Allowed magic item categories\">\n                {magicItemTypes.map((item, itemIndex) => (\n                  <div className=\"checkbox\" key={item}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${item}${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleCommandMagicChange({\n                          index,\n                          value: command.magic.types.includes(item)\n                            ? \"off\"\n                            : \"on\",\n                          item,\n                        })\n                      }\n                      checked={command.magic.types.includes(item)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${item}${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {item}\n                    </label>\n                  </div>\n                ))}\n                <label htmlFor={`command-magic-points-${index}-${randomId}`}>\n                  Max. magic item points\n                </label>\n                <NumberInput\n                  id={`command-magic-points-${index}-${randomId}`}\n                  min={0}\n                  value={command.magic.maxPoints}\n                  onChange={(event) =>\n                    handleCommandMagicPointsChange({\n                      index,\n                      value: Number(event.target.value),\n                    })\n                  }\n                />\n              </Expandable>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"command\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewCommand}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New entry\n          </Button>\n        </>\n      )}\n\n      <hr />\n\n      <h3>Weapon</h3>\n      <p className=\"datasets__paragraph\">\n        All weapon options are mutually exclusive and please add a default\n        weapon.\n        <br />\n        <i>(e.g. \"Hand weapon\" or \"Great weapon\")</i>\n      </p>\n      {unit.equipment.map((equipment, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`equipment-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"equipment\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`equipment-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`equipment-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={equipment.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`equipment-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`equipment-points${index}-${randomId}`}\n            value={equipment.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"equipment\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`equipment-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"equipment\",\n                    field: \"perModel\",\n                    value: !equipment.perModel,\n                  })\n                }\n                checked={equipment.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`equipment-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`equipment-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"equipment\",\n                  field: \"active\",\n                  value: !equipment.active,\n                })\n              }\n              checked={equipment.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`equipment-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Hand weapon\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              icon=\"delete\"\n              spaceTop\n              onClick={() =>\n                handleSecondLevelDelete({ index, key: \"equipment\" })\n              }\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewEquipment}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New weapon\n      </Button>\n\n      <hr />\n\n      <h3>Armor</h3>\n      <p className=\"datasets__paragraph\">\n        All armor options are mutually exclusive and please add a default armor.\n        <br />\n        <i>(e.g. \"Light armour\" or \"Heavy armour\")</i>\n      </p>\n      {unit.armor.map((armor, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`armor-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"armor\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`armor-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`armor-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={armor.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`armor-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`armor-points${index}-${randomId}`}\n            value={armor.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"armor\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`armor-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"armor\",\n                    field: \"perModel\",\n                    value: !armor.perModel,\n                  })\n                }\n                checked={armor.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`armor-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`armor-active${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"armor\",\n                  field: \"active\",\n                  value: !armor.active,\n                })\n              }\n              checked={armor.active}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`armor-active${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Selected by default\n            </label>\n          </div>\n          <p>\n            <i>(e.g. when \"Light armour\" is the default equipment)</i>\n          </p>\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"armor\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewArmor}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New armor\n      </Button>\n\n      <hr />\n\n      <h3>Options</h3>\n      <p className=\"datasets__paragraph\">\n        All options are NOT mutually exclusive.\n        <br />\n        <i>(e.g. \"Shield\")</i>\n      </p>\n      {unit.options.map((option, index) => (\n        <div className=\"entity__second-level\" key={index}>\n          <label htmlFor={`options-name_en${index}-${randomId}`}>\n            Name English\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_en${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_en}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_en\",\n                value: event.target.value,\n              })\n            }\n            onBlur={(event) =>\n              handleSecondLevelNameBlur({\n                index,\n                key: \"options\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_de${index}-${randomId}`}>\n            Name German\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_de${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_de}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_de\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n            required\n          />\n          <label htmlFor={`options-name_es${index}-${randomId}`}>\n            Name Spanish\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_es${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_es}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_es\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-name_fr${index}-${randomId}`}>\n            Name French\n          </label>\n          <input\n            type=\"text\"\n            id={`options-name_fr${index}-${randomId}`}\n            className=\"input\"\n            value={option.name_fr}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"name_fr\",\n                value: event.target.value,\n              })\n            }\n            autoComplete=\"off\"\n          />\n          <label htmlFor={`options-points${index}-${randomId}`}>Points</label>\n          <NumberInput\n            id={`options-points${index}-${randomId}`}\n            value={option.points}\n            onChange={(event) =>\n              handleSecondLevelFieldChange({\n                index,\n                key: \"options\",\n                field: \"points\",\n                value: Number(event.target.value),\n              })\n            }\n            required\n          />\n          {type !== \"characters\" ? (\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id={`options-perModel${index}-${randomId}`}\n                onChange={() =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"perModel\",\n                    value: !option.perModel,\n                  })\n                }\n                checked={option.perModel}\n                className=\"checkbox__input\"\n              />\n              <label\n                htmlFor={`options-perModel${index}-${randomId}`}\n                className=\"checkbox__label\"\n              >\n                Points count for each model\n              </label>\n            </div>\n          ) : null}\n          <div className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              id={`options-stackable${index}-${randomId}`}\n              onChange={() =>\n                handleSecondLevelFieldChange({\n                  index,\n                  key: \"options\",\n                  field: \"stackable\",\n                  value: !option.stackable,\n                })\n              }\n              checked={option.stackable}\n              className=\"checkbox__input\"\n            />\n            <label\n              htmlFor={`options-stackable${index}-${randomId}`}\n              className=\"checkbox__label\"\n            >\n              Allow multiple selections\n            </label>\n          </div>\n          <p>\n            <i>(e.g. for Nightgoblin Fanatics)</i>\n          </p>\n          {option.stackable && (\n            <>\n              <br />\n              <label htmlFor={`options-minimum${index}-${randomId}`}>\n                Minimum\n              </label>\n              <NumberInput\n                id={`options-minimum${index}-${randomId}`}\n                min={0}\n                value={option.minimum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <label htmlFor={`options-maximum${index}-${randomId}`}>\n                Maximum\n              </label>\n              <NumberInput\n                id={`options-maximum${index}-${randomId}`}\n                min={0}\n                value={option.maximum}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"options\",\n                    field: \"stackable\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n            </>\n          )}\n          {existingUnit ? (\n            <Button\n              type=\"text\"\n              color=\"dark\"\n              spaceBottom\n              spaceTop\n              icon=\"delete\"\n              onClick={() => handleSecondLevelDelete({ index, key: \"options\" })}\n            >\n              Remove entry\n            </Button>\n          ) : null}\n        </div>\n      ))}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewOption}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New option\n      </Button>\n\n      {type === \"characters\" ? (\n        <>\n          <hr />\n\n          <h3>Mounts</h3>\n          <p className=\"datasets__paragraph\">\n            All mount options are mutually exclusive and please add a default\n            mount.\n            <br />\n            <i>(e.g. \"On foot\" or \"Hippogryph\")</i>\n          </p>\n          {unit.mounts.map((mount, index) => (\n            <div className=\"entity__second-level\" key={index}>\n              <label htmlFor={`mounts-name_en${index}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_en${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                onBlur={(event) =>\n                  handleSecondLevelNameBlur({\n                    index,\n                    key: \"mounts\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_de${index}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_de${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`mounts-name_es${index}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_es${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-name_fr${index}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`mounts-name_fr${index}-${randomId}`}\n                className=\"input\"\n                value={mount.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`mounts-points${index}-${randomId}`}>\n                Points\n              </label>\n              <NumberInput\n                id={`mounts-points${index}-${randomId}`}\n                value={mount.points}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index,\n                    key: \"mounts\",\n                    field: \"points\",\n                    value: Number(event.target.value),\n                  })\n                }\n                required\n              />\n              <div className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id={`mounts-active${index}-${randomId}`}\n                  onChange={() =>\n                    handleSecondLevelFieldChange({\n                      index,\n                      key: \"mounts\",\n                      field: \"active\",\n                      value: !mount.active,\n                    })\n                  }\n                  checked={mount.active}\n                  className=\"checkbox__input\"\n                />\n                <label\n                  htmlFor={`mounts-active${index}-${randomId}`}\n                  className=\"checkbox__label\"\n                >\n                  Selected by default\n                </label>\n              </div>\n              <p>\n                <i>(e.g. when \"On foot\" is the default mount)</i>\n              </p>\n              {existingUnit ? (\n                <Button\n                  type=\"text\"\n                  color=\"dark\"\n                  spaceBottom\n                  spaceTop\n                  icon=\"delete\"\n                  onClick={() =>\n                    handleSecondLevelDelete({ index, key: \"mounts\" })\n                  }\n                >\n                  Remove entry\n                </Button>\n              ) : null}\n            </div>\n          ))}\n          <Button\n            type=\"secondary\"\n            icon=\"add\"\n            onClick={handleNewMount}\n            spaceBottom\n            className=\"entity__second-level-button\"\n          >\n            New mount\n          </Button>\n        </>\n      ) : null}\n      <hr />\n\n      <h3>(Magic) items</h3>\n      <p className=\"datasets__paragraph\">\n        Specify what types of items are allowed. Can also be used for chaos\n        mutations, knightly vitues or similar.\n      </p>\n      {unit.items && unit.items.length\n        ? unit.items.map((item, itemIndex) => (\n            <div className=\"entity__second-level\" key={itemIndex}>\n              <label htmlFor={`magic-name_en-${itemIndex}-${randomId}`}>\n                Name English\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_en-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_en}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_en\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_de-${itemIndex}-${randomId}`}>\n                Name German\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_de-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_de}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_de\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n                required\n              />\n              <label htmlFor={`magic-name_es-${itemIndex}-${randomId}`}>\n                Name Spanish\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_es-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_es}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_es\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <label htmlFor={`magic-name_fr-${itemIndex}-${randomId}`}>\n                Name French\n              </label>\n              <input\n                type=\"text\"\n                id={`magic-name_fr-${itemIndex}-${randomId}`}\n                className=\"input\"\n                value={item.name_fr}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"name_fr\",\n                    value: event.target.value,\n                  })\n                }\n                autoComplete=\"off\"\n              />\n              <Expandable headline=\"Allowed (magic) item types\">\n                {magicItemTypes.map((type, typeIndex) => (\n                  <div className=\"checkbox\" key={type}>\n                    <input\n                      type=\"checkbox\"\n                      id={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      onChange={() =>\n                        handleItemsChange({\n                          value: item.types.includes(type) ? \"off\" : \"on\",\n                          type,\n                          itemIndex,\n                        })\n                      }\n                      checked={item.types.includes(type)}\n                      className=\"checkbox__input\"\n                    />\n                    <label\n                      htmlFor={`${type}-${typeIndex}-${itemIndex}-${randomId}`}\n                      className=\"checkbox__label\"\n                    >\n                      {type}\n                    </label>\n                  </div>\n                ))}\n              </Expandable>\n              <label htmlFor={`magic-points-${randomId}`}>Max. points</label>\n              <NumberInput\n                id={`magic-points-${itemIndex}-${randomId}`}\n                min={0}\n                value={item.maxPoints}\n                onChange={(event) =>\n                  handleSecondLevelFieldChange({\n                    index: itemIndex,\n                    key: \"items\",\n                    field: \"maxPoints\",\n                    value: Number(event.target.value),\n                  })\n                }\n              />\n            </div>\n          ))\n        : null}\n      <Button\n        type=\"secondary\"\n        icon=\"add\"\n        onClick={handleNewMagicItemCategory}\n        spaceBottom\n        className=\"entity__second-level-button\"\n      >\n        New category\n      </Button>\n\n      <Button\n        submitButton\n        spaceBottom\n        icon={existingUnit ? \"add-list\" : \"new-list\"}\n      >\n        {existingUnit ? \"Update unit\" : \"Add unit\"}\n      </Button>\n    </form>\n  );\n};\n","import { Fragment } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport classNames from \"classnames\";\n\nimport { getUnitPoints, getUnitCommandPoints } from \"../../utils/points\";\nimport { List } from \"../../components/list\";\nimport { NumberInput } from \"../../components/number-input\";\nimport { Icon } from \"../../components/icon\";\nimport { Header } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { nameMap } from \"../../pages/magic\";\nimport { useLanguage } from \"../../utils/useLanguage\";\n\nimport \"./UnitPreview.css\";\n\nexport const UnitPreview = ({ unit, coreUnits, onClose }) => {\n  const { language } = useLanguage();\n  const intl = useIntl();\n  const detachments = coreUnits.filter((coreUnit) => coreUnit.detachment);\n  let magicPoints = 0;\n\n  return (\n    <>\n      <button onClick={onClose} className=\"unit-preview-background\" />\n      <div className=\"unit-preview\">\n        <>\n          <Header\n            isSection\n            headline={unit[`name_${language}`] || unit.name_en}\n            subheadline={`${getUnitPoints(unit)} ${intl.formatMessage({\n              id: \"app.points\",\n            })}`}\n          />\n          <Button\n            className=\"unit-preview__close\"\n            icon=\"close\"\n            type=\"text\"\n            label=\"Close preview\"\n            color=\"dark\"\n            onClick={onClose}\n          />\n\n          {!unit.minimum &&\n            (!unit.lores || (unit.lores && !unit.lores.length)) &&\n            (!unit.command || (unit.command && !unit.command.length)) &&\n            (!unit.equipment || (unit.equipment && !unit.equipment.length)) &&\n            (!unit.armor || (unit.armor && !unit.armor.length)) &&\n            (!unit.mounts || (unit.mounts && !unit.mounts.length)) &&\n            (!unit.magic || (unit.magic && !unit.magic.maxPoints)) &&\n            (!unit.items || (unit.items && !unit.items.length)) &&\n            (!unit.options || (unit.options && !unit.options.length)) && (\n              <i className=\"unit__empty\">\n                <FormattedMessage id=\"unit.noOptions\" />\n              </i>\n            )}\n          {unit.notes && unit.notes.name_en ? (\n            <p className=\"unit__notes\">\n              <Icon symbol=\"error\" className=\"unit__notes-icon\" />\n              {unit.notes[`name_${language}`] || unit.notes.name_en}\n            </p>\n          ) : null}\n          {unit.minimum ? (\n            <>\n              <label htmlFor=\"strength\" className=\"unit__strength\">\n                <FormattedMessage id=\"unit.unitSize\" />\n              </label>\n              <NumberInput\n                id=\"strength\"\n                min={unit.minimum}\n                max={unit.maximum}\n                value={unit.strength}\n                onChange={() => {}}\n                noError\n              />\n            </>\n          ) : null}\n          {unit.command && unit.command.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.command\" />\n              </h2>\n              {unit.command.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    active = false,\n                    magic,\n                    ...command\n                  },\n                  index\n                ) => {\n                  let commandMagicPoints = 0;\n\n                  if (unit.magic && unit.magic.items) {\n                    unit.magic.items\n                      .filter((item) => item.command === index)\n                      .forEach(({ points }) => {\n                        commandMagicPoints = commandMagicPoints + points;\n                      });\n                  }\n\n                  return (\n                    <Fragment key={index}>\n                      <div className=\"checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          id={`command-${index}`}\n                          defaultChecked={active}\n                          className=\"checkbox__input\"\n                        />\n                        <label\n                          htmlFor={`command-${index}`}\n                          className=\"checkbox__label\"\n                        >\n                          {command[`name_${language}`] || name_en}\n                          <i className=\"checkbox__points\">\n                            {`${points} ${\n                              points === 1\n                                ? intl.formatMessage({\n                                    id: \"app.point\",\n                                  })\n                                : intl.formatMessage({\n                                    id: \"app.points\",\n                                  })\n                            }`}\n                            {perModel &&\n                              ` ${intl.formatMessage({\n                                id: \"unit.perModel\",\n                              })}`}\n                          </i>\n                        </label>\n                      </div>\n                      {magic?.maxPoints && active ? (\n                        <List\n                          className=\"editor__list unit__link\"\n                          active={false}\n                        >\n                          <div className=\"editor__list-inner\">\n                            <b>\n                              {magic.types\n                                .map(\n                                  (type) =>\n                                    nameMap[type][`name_${language}`] ||\n                                    nameMap[type].name_en\n                                )\n                                .join(\", \")}\n                            </b>\n                            <i className=\"checkbox__points\">\n                              <span\n                                className={classNames(\n                                  commandMagicPoints >\n                                    unit.command[index].magic.maxPoints &&\n                                    \"editor__error\"\n                                )}\n                              >\n                                {getUnitCommandPoints(\n                                  unit?.magic?.selected.filter(\n                                    ({ command }) => command === index\n                                  )\n                                )}\n                              </span>{\" \"}\n                              / {unit.command[index].magic.maxPoints}{\" \"}\n                              <FormattedMessage id=\"app.points\" />\n                            </i>\n                            {commandMagicPoints >\n                              unit.command[index].magic.maxPoints && (\n                              <Icon\n                                symbol=\"error\"\n                                color=\"red\"\n                                className=\"unit__magic-icon\"\n                              />\n                            )}\n                          </div>\n                          {unit?.magic?.items && (\n                            <p>\n                              {unit.magic.items\n                                .filter(({ command }) => command === index)\n                                .map(\n                                  ({ name_en, ...item }) =>\n                                    item[`name_${language}`] || name_en\n                                )\n                                .join(\", \")}\n                            </p>\n                          )}\n                        </List>\n                      ) : null}\n                    </Fragment>\n                  );\n                }\n              )}\n            </>\n          )}\n          {unit.equipment && unit.equipment.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.equipment\" />\n              </h2>\n              {unit.equipment.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`equipment-${index}`}\n                      name=\"equipment\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label\n                      htmlFor={`equipment-${index}`}\n                      className=\"radio__label\"\n                    >\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.armor && unit.armor.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.armor\" />\n              </h2>\n              {unit.armor.map(\n                (\n                  { name_en, points, perModel, active = false, ...equipment },\n                  index\n                ) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`armor-${index}`}\n                      name=\"armor\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`armor-${index}`} className=\"radio__label\">\n                      {equipment[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">\n                        {`${points} ${\n                          points === 1\n                            ? intl.formatMessage({\n                                id: \"app.point\",\n                              })\n                            : intl.formatMessage({\n                                id: \"app.points\",\n                              })\n                        }`}\n                        {perModel &&\n                          ` ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                      </i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.options && unit.options.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.options\" />\n              </h2>\n              {unit.options.map(\n                (\n                  {\n                    name_en,\n                    points,\n                    perModel,\n                    stackable,\n                    maximum,\n                    minimum = 0,\n                    stackableCount = minimum || 0,\n                    active = false,\n                    ...equipment\n                  },\n                  index\n                ) =>\n                  !stackable ? (\n                    <div className=\"checkbox\" key={index}>\n                      <input\n                        type=\"checkbox\"\n                        id={`options-${index}`}\n                        defaultChecked={active}\n                        className=\"checkbox__input\"\n                      />\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"checkbox__label\"\n                      >\n                        {equipment[`name_${language}`] || name_en}\n                        <i className=\"checkbox__points\">\n                          {`${points} ${\n                            points === 1\n                              ? intl.formatMessage({\n                                  id: \"app.point\",\n                                })\n                              : intl.formatMessage({\n                                  id: \"app.points\",\n                                })\n                          }`}\n                          {perModel &&\n                            ` ${intl.formatMessage({\n                              id: \"unit.perModel\",\n                            })}`}\n                        </i>\n                      </label>\n                    </div>\n                  ) : (\n                    <Fragment key={index}>\n                      <label\n                        htmlFor={`options-${index}`}\n                        className=\"unit__special-option\"\n                      >\n                        {equipment[`name_${language}`] || name_en}:\n                        <i className=\"checkbox__points\">\n                          {`${points} ${intl.formatMessage({\n                            id: \"app.points\",\n                          })} ${intl.formatMessage({\n                            id: \"unit.perModel\",\n                          })}`}\n                        </i>\n                      </label>\n                      <NumberInput\n                        id={`options-${index}`}\n                        min={minimum}\n                        max={maximum}\n                        value={stackableCount}\n                        onChange={() => {}}\n                      />\n                    </Fragment>\n                  )\n              )}\n            </>\n          )}\n          {unit.regimentalUnit && (\n            <>\n              <h2 className=\"unit__subline unit__detachments-headline\">\n                <FormattedMessage id=\"unit.detachments\" />\n              </h2>\n              {detachments.map(({ name_en, id, ...regiment }) => (\n                <>\n                  <div className=\"list\" key={id}>\n                    <div className=\"list__inner unit__detachments-header\">\n                      <b className=\"unit__magic-headline\">\n                        {regiment[`name_${language}`] || name_en}\n                      </b>\n                      <Button\n                        type=\"secondary\"\n                        icon=\"add\"\n                        label={intl.formatMessage({ id: \"editor.add\" })}\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                  {unit.detachments &&\n                    unit.detachments\n                      .filter(\n                        (detachment) =>\n                          detachment.id.split(\".\")[0] === id.split(\".\")[0]\n                      )\n                      .map(\n                        ({ name_en, strength, id, points, ...detachment }) => (\n                          <div className=\"list\" key={id}>\n                            <div className=\"list__inner unit__detachments\">\n                              <NumberInput\n                                id={`strength-${id}`}\n                                min={5}\n                                value={strength}\n                                onChange={() => {}}\n                              />\n                              <span>\n                                <b>\n                                  {detachment[`name_${language}`] || name_en}\n                                </b>\n                                <i>{`${getUnitPoints({\n                                  strength,\n                                  points,\n                                })} ${intl.formatMessage({\n                                  id: \"app.points\",\n                                })}`}</i>\n                              </span>\n                              <Button\n                                type=\"secondary\"\n                                icon=\"close\"\n                                label={intl.formatMessage({\n                                  id: \"misc.remove\",\n                                })}\n                                size=\"small\"\n                              />\n                            </div>\n                          </div>\n                        )\n                      )}\n                </>\n              ))}\n            </>\n          )}\n          {unit.mounts && unit.mounts.length > 0 && (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.mount\" />\n              </h2>\n              {unit.mounts.map(\n                ({ name_en, points, active = false, ...mounts }, index) => (\n                  <div className=\"radio\" key={index}>\n                    <input\n                      type=\"radio\"\n                      id={`mounts-${index}`}\n                      name=\"mounts\"\n                      defaultChecked={active}\n                      className=\"radio__input\"\n                    />\n                    <label htmlFor={`mounts-${index}`} className=\"radio__label\">\n                      {mounts[`name_${language}`] || name_en}\n                      <i className=\"checkbox__points\">{`${points} ${intl.formatMessage(\n                        {\n                          id: \"app.points\",\n                        }\n                      )}`}</i>\n                    </label>\n                  </div>\n                )\n              )}\n            </>\n          )}\n          {unit.lores && unit.lores.length ? (\n            <>\n              <h2 className=\"unit__subline\">\n                <FormattedMessage id=\"unit.lore\" />\n              </h2>\n              {unit.lores.map((lore) => (\n                <div className=\"radio\" key={lore}>\n                  <input\n                    type=\"radio\"\n                    id={`lore-${lore}`}\n                    name=\"lores\"\n                    value={lore}\n                    onChange={() => {}}\n                    checked={(unit.activeLore || unit.lores[0]) === lore}\n                    className=\"radio__input\"\n                  />\n                  <label htmlFor={`lore-${lore}`} className=\"radio__label\">\n                    {nameMap[lore][`name_${language}`] || nameMap[lore].name_en}\n                  </label>\n                </div>\n              ))}\n            </>\n          ) : null}\n          {unit.items && unit.items.length ? <hr className=\"unit__hr\" /> : null}\n          {unit.items && unit.items.length\n            ? unit.items.map((item, itemIndex) => (\n                <List\n                  className=\"editor__list unit__link\"\n                  active={false}\n                  key={itemIndex}\n                >\n                  <div className=\"editor__list-inner\">\n                    <b className=\"unit__magic-headline\">\n                      {item[`name_${language}`] || item.name_en}\n                    </b>\n                    <i className=\"checkbox__points\">\n                      <span>{magicPoints}</span>\n                      {item.maxPoints > 0 && <>{` / ${item.maxPoints}`}</>}{\" \"}\n                      <FormattedMessage id=\"app.points\" />\n                    </i>\n                  </div>\n                  {item.items && (\n                    <p>\n                      {item.items\n                        .map(\n                          ({ name_en, ...entity }) =>\n                            entity[`name_${language}`] || name_en\n                        )\n                        .join(\", \")}\n                    </p>\n                  )}\n                </List>\n              ))\n            : null}\n          {unit.specialRules && unit.specialRules.name_en ? (\n            <>\n              <h2 className=\"unit__subline unit__subline--space-before\">\n                <FormattedMessage id=\"unit.specialRules\" />\n              </h2>\n              <p>\n                {unit.specialRules[`name_${language}`] ||\n                  unit.specialRules.name_en}\n              </p>\n            </>\n          ) : null}\n        </>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\nimport { Select } from \"../../components/select\";\nimport { Expandable } from \"../../components/expandable\";\nimport { Spinner } from \"../../components/spinner\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport gameSystems from \"../../assets/armies.json\";\n\nimport { Entity } from \"./Entity\";\nimport { UnitPreview } from \"./UnitPreview\";\nimport \"./Datasets.css\";\n\nexport const Datasets = ({ isMobile }) => {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [previewUnit, setPreviewUnit] = useState(null);\n  const [armyInput, setArmyInput] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [copyError, setCopyError] = useState(false);\n  const [army, setArmy] = useState(\"empire-of-man\");\n  const game = \"the-old-world\";\n  const localDataset = localStorage.getItem(\"owb.dataset\");\n  const [dataset, setDataset] = useState({\n    characters: [],\n    core: [],\n    special: [],\n    rare: [],\n    mercenaries: [],\n    allies: [],\n  });\n  const intl = useIntl();\n  const copyText = () => {\n    navigator.clipboard &&\n      navigator.clipboard.writeText(JSON.stringify(dataset, null, 2)).then(\n        () => {\n          setCopied(true);\n        },\n        () => {\n          setCopyError(true);\n        }\n      );\n  };\n  const handleSubmit = ({ unit, isNew, type }) => {\n    if (isNew) {\n      const newDataset = { ...dataset, [type]: [...dataset[type], unit] };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    } else {\n      const newDataset = {\n        ...dataset,\n        [type]: dataset[type].map((existingUnit) =>\n          existingUnit.id === unit.id ? unit : existingUnit\n        ),\n      };\n\n      setDataset(newDataset);\n      localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    }\n\n    window.scrollTo(0, 0);\n  };\n  const handleDelete = ({ id, type }) => {\n    const newDataset = {\n      ...dataset,\n      [type]: dataset[type].filter((existingUnit) => existingUnit.id !== id),\n    };\n\n    setDataset(newDataset);\n    localStorage.setItem(\"owb.dataset\", JSON.stringify(newDataset, null, 2));\n    window.scrollTo(0, 0);\n  };\n  const handleArmyChange = (value) => {\n    setArmy(value);\n  };\n  const handleLoadArmy = () => {\n    setIsLoading(true);\n    fetcher({\n      url: `games/${game}/${army}`,\n      onSuccess: (existingDataset) => {\n        setDataset(existingDataset);\n        localStorage.setItem(\n          \"owb.dataset\",\n          JSON.stringify(existingDataset, null, 2)\n        );\n        setIsLoading(false);\n      },\n    });\n  };\n  const handleArmyInputBlur = (event) => {\n    setArmyInput(event.target.value);\n  };\n  const handleArmyFromJsonClick = () => {\n    try {\n      setDataset(JSON.parse(armyInput));\n      localStorage.setItem(\"owb.dataset\", armyInput);\n      setArmyInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleArmyFromLocalClick = () => {\n    try {\n      setDataset(JSON.parse(localStorage.getItem(\"owb.dataset\")));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handlePreview = ({ unit }) => {\n    setPreviewUnit(unit);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.datasets\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/datasets\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main className=\"datasets\">\n        <Button to=\"/\" icon=\"home\" centered spaceBottom>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <div className=\"datasets__info\">\n          <h2 className=\"page-headline\">Datasets Editor</h2>\n          <p className=\"datasets__paragraph\">\n            Thank you for taking the time to improve the{\" \"}\n            <i>Old World Builder</i>! You can expand existing army data, add\n            missing translations or create a new army dataset.\n          </p>\n          <h3>What is a dataset?</h3>\n          <p className=\"datasets__paragraph\">\n            A datasets contains the data of all units required to create an army\n            list in the <i>Old World Builder</i>. The datasets for each army are\n            defined in a{\" \"}\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"\n            >\n              JSON format\n            </a>{\" \"}\n            (although you don't have to edit these manually).\n          </p>\n          <h3>Notes before you get started</h3>\n          <ul>\n            <li>\n              Currently only datasets for \"Warhammer: The Old World\" can be\n              created on this page\n            </li>\n            <li>\n              Translate texts from the army books very carefully and exactly as\n              they appear in the book\n            </li>\n            <li>Proofread after you're done</li>\n            <li>\n              If a special rule cannot be mapped, write to us in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.gg/87nUyjUxTU\"\n              >\n                Discord\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"datasets__columns\">\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Load a dataset</h2>\n            </header>\n\n            <Select\n              options={gameSystems.filter(({ id }) => id === game)[0].armies}\n              onChange={handleArmyChange}\n              selected=\"empire-of-man\"\n              spaceTop\n              spaceBottom\n              required\n            />\n            <Button onClick={handleLoadArmy}>Load existing dataset</Button>\n            <hr />\n            <input\n              type=\"text\"\n              name=\"army\"\n              className=\"input\"\n              autoComplete=\"off\"\n              value={armyInput}\n              onChange={handleArmyInputBlur}\n              placeholder=\"Paste your .json file\"\n            />\n            <Button onClick={handleArmyFromJsonClick}>Load from .json</Button>\n            <hr />\n            <Button\n              disabled={!Boolean(localDataset)}\n              onClick={handleArmyFromLocalClick}\n              spaceBottom\n            >\n              Load local dataset\n            </Button>\n            <p>\n              The most current dataset is always saved locally, so you can\n              continue working on it even after a reload.\n            </p>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Edit units</h2>\n            </header>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <>\n                {dataset.characters.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Characters</h3>\n                )}\n                <ul>\n                  {dataset.characters.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({\n                                  type: \"characters\",\n                                  id: unit.id,\n                                })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"characters\"\n                        onSubmit={handleSubmit}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.core.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Core Units</h3>\n                )}\n                <ul>\n                  {dataset.core.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"core\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"core\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.special.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Special Units</h3>\n                )}\n                <ul>\n                  {dataset.special.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"special\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"special\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n                {dataset.rare.length > 0 && (\n                  <h3 className=\"datasets__edit-headline\">Rare Units</h3>\n                )}\n                <ul>\n                  {dataset.rare.map((unit, index) => (\n                    <Expandable\n                      headline={\n                        <span className=\"dataset__unit-header\">\n                          {unit.name_en}\n                          <span>\n                            <Button\n                              icon=\"delete\"\n                              type=\"text\"\n                              label=\"Delete unit\"\n                              color=\"dark\"\n                              onClick={() =>\n                                handleDelete({ type: \"rare\", id: unit.id })\n                              }\n                            />\n                            <Button\n                              icon=\"preview\"\n                              type=\"text\"\n                              label=\"Preview unit\"\n                              color=\"dark\"\n                              onClick={() => handlePreview({ unit })}\n                            />\n                          </span>\n                        </span>\n                      }\n                      noMargin\n                      className=\"datasets__unit-type datasets__unit\"\n                      key={index}\n                    >\n                      <Entity\n                        unit={unit}\n                        type=\"rare\"\n                        onSubmit={handleSubmit}\n                        onDelete={handleDelete}\n                      />\n                    </Expandable>\n                  ))}\n                </ul>\n              </>\n            )}\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>Add new unit</h2>\n            </header>\n            <Expandable\n              headline=\"Character\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"characters\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Core Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"core\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Special Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"special\" onSubmit={handleSubmit} />\n            </Expandable>\n            <Expandable\n              headline=\"Rare Unit\"\n              noMargin\n              className=\"datasets__unit-type\"\n            >\n              <Entity type=\"rare\" onSubmit={handleSubmit} />\n            </Expandable>\n          </section>\n\n          <section className=\"column datasets__column\">\n            <header className=\"editor__header\">\n              <h2>JSON output</h2>\n            </header>\n            <Button\n              icon={copied ? \"check\" : \"copy\"}\n              centered\n              spaceTop\n              spaceBottom\n              onClick={copyText}\n            >\n              {copied ? \"Copied\" : \"Copy JSON\"}\n            </Button>\n            {copyError && (\n              <p className=\"export__error\">\n                <FormattedMessage id=\"export.error\" />\n              </p>\n            )}\n            <p className=\"datasets__paragraph\">\n              When you're done editing, copy the text and post it in the{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://discord.com/channels/1120710419108085780/1120720528068583434\"\n              >\n                \"Datasets Contribution\" Discord Channel\n              </a>\n              .\n            </p>\n            <p className=\"datasets__paragraph\">\n              If you're a bit tech-savvy, you can also create a pull request\n              directly in{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/nthiebes/old-world-builder/pulls\"\n              >\n                GitHub\n              </a>\n              .\n            </p>\n            <textarea\n              className=\"datasets__output\"\n              rows=\"10\"\n              spellCheck=\"false\"\n              data-gramm=\"false\"\n              value={JSON.stringify(dataset, null, 2)}\n              onChange={() => {}}\n            />\n          </section>\n        </div>\n\n        {previewUnit ? (\n          <UnitPreview\n            unit={{ ...previewUnit, strength: 0 }}\n            onClose={() => setPreviewUnit(null)}\n            coreUnits={dataset.core}\n          />\n        ) : null}\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const NotFound = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Old World Builder | 404</title>\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n\n        <h2>\n          <FormattedMessage id=\"404.title\" />\n        </h2>\n        <p>\n          <FormattedMessage id=\"404.title\" />\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nexport const Privacy = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.privacy\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/privacy\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact>\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"footer.privacy\" />\n        </h2>\n        <p>\n          The \"Old World Builder\" is built as an Open Source app. This SERVICE\n          is provided by at no cost and is intended for use as is.\n        </p>\n        <p>\n          This page is used to inform visitors regarding my policies with the\n          collection, use, and disclosure of Personal Information if anyone\n          decided to use my Service.\n        </p>\n        <p>\n          If you choose to use my Service, then you agree to the collection and\n          use of information in relation to this policy. The Personal\n          Information that I collect is used for providing and improving the\n          Service. I will not use or share your information with anyone except\n          as described in this Privacy Policy.\n        </p>\n        <h3>Information Collection and Use</h3>\n        <p>This app does not collect or store personal data.</p>\n        <p>\n          The app does use third-party services that may collect information\n          used to identify you.\n        </p>\n        <p>\n          Links to the privacy policy of third-party service providers used by\n          the app:\n        </p>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.google.com/policies/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Google Play Services\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://sentry.io/privacy/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Sentry\n            </a>\n          </li>\n        </ul>\n        <br />\n        <h3>Log Data</h3>\n        <p>\n          I want to inform you that whenever you use my Service, in a case of an\n          error in the app I collect data and information (through third-party\n          products) on your phone called Log Data. This Log Data may include\n          information such as your device Internet Protocol (“IP”) address,\n          device name, operating system version, the configuration of the app\n          when utilizing my Service, the time and date of your use of the\n          Service, and other statistics.\n        </p>\n        <h3>Cookies</h3>\n        <p>\n          Cookies are files with a small amount of data that are commonly used\n          as anonymous unique identifiers. These are sent to your browser from\n          the websites that you visit and are stored on your device's internal\n          memory.\n        </p>\n        <p>This Service does not use these “cookies”.</p>\n\n        <h3>Links to Other Sites</h3>\n        <p>\n          This Service contains links to other sites. If you click on a\n          third-party link, you will be directed to that site. Note that these\n          external sites are not operated by me. Therefore, I strongly advise\n          you to review the Privacy Policy of these websites. I have no control\n          over and assume no responsibility for the content, privacy policies,\n          or practices of any third-party sites or services.\n        </p>\n        <h3>Changes to This Privacy Policy</h3>\n        <p>\n          I may update our Privacy Policy from time to time. Thus, you are\n          advised to review this page periodically for any changes. I will\n          notify you of any changes by posting the new Privacy Policy on this\n          page.\n        </p>\n        <p>This policy is effective as of 2024-01-04.</p>\n\n        <h3>Contact Us</h3>\n        <p>\n          If you have any questions or suggestions about my Privacy Policy, do\n          not hesitate to contact me at{\" \"}\n          <Link to=\"/help\">old-world-builder.com/help</Link>.\n        </p>\n      </Main>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { FormattedMessage, FormattedDate, useIntl } from \"react-intl\";\nimport { Helmet } from \"react-helmet-async\";\n\nimport { Header, Main } from \"../../components/page\";\nimport { Button } from \"../../components/button\";\n\nimport \"./Changelog.css\";\n\nexport const Changelog = () => {\n  const location = useLocation();\n  const intl = useIntl();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`Old World Builder | ${intl.formatMessage({\n            id: \"footer.changelog\",\n          })}`}\n        </title>\n        <link rel=\"canonical\" href=\"https://old-world-builder.com/changelog\" />\n      </Helmet>\n\n      <Header headline=\"Old World Builder\" hasMainNavigation />\n\n      <Main compact className=\"changelog\">\n        <Button to=\"/\" icon=\"home\" centered>\n          <FormattedMessage id=\"misc.startpage\" />\n        </Button>\n        <h2 className=\"page-headline\">\n          <FormattedMessage id=\"changelog.title\" />\n        </h2>\n\n        <hr />\n\n        <h3>v0.12</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-31 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change22\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                rulesIndex: (\n                  <a\n                    href=\"https://www.whfb.app/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    <b>Online Rules Index</b>\n                  </a>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change23\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.11</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-28 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change21\" />\n          </li>\n        </ul>\n        <p>\n          <b>\n            <FormattedMessage id=\"changelog.change17\" />\n          </b>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage id=\"changelog.change18\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change19\" />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change20\" />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.10</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-22 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change12\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change13\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change14\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change15\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change16\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.8</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-18 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change11\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.7</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-17 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change9\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li className=\"changelog__outdated\">\n            <FormattedMessage\n              id=\"changelog.change10\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n                about: (\n                  <Link to=\"/about\">\n                    <FormattedMessage id=\"footer.about\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.6</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-14 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change8\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n        </ul>\n\n        <hr />\n\n        <h3>v0.5</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-13 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change4\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change5\"\n              values={{ b: (msg) => <b>{msg}</b> }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change6\"\n              values={{\n                b: (msg) => <b>{msg}</b>,\n              }}\n            />\n          </li>\n        </ul>\n        <p>\n          <i>\n            <FormattedMessage\n              id=\"changelog.change7\"\n              values={{\n                discord: (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    href=\"https://discord.gg/87nUyjUxTU\"\n                  >\n                    Discord\n                  </a>\n                ),\n              }}\n            />\n          </i>\n        </p>\n\n        <hr />\n\n        <h3>v0.4</h3>\n        <p>\n          <time>\n            <i>\n              <FormattedDate\n                value={new Date(\"2024-01-07 11:11:11\")}\n                month=\"long\"\n                day=\"2-digit\"\n                year=\"numeric\"\n              />\n            </i>\n          </time>\n        </p>\n        <ul className=\"changelog__list\">\n          <li>\n            <FormattedMessage\n              id=\"changelog.change0\"\n              values={{\n                datasets: (\n                  <Link to=\"/datasets\">\n                    <FormattedMessage id=\"footer.datasets\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage id=\"changelog.change1\" />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"changelog.change2\"\n              values={{\n                privacy: (\n                  <Link to=\"/privacy\">\n                    <FormattedMessage id=\"footer.privacy\" />\n                  </Link>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n      </Main>\n    </>\n  );\n};\n","import { useState, useEffect, createRef, Fragment } from \"react\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\n\nimport { Button } from \"../../components/button\";\nimport { Header, Main } from \"../../components/page\";\nimport { getRandomId } from \"../../utils/id\";\nimport { setLists } from \"../../state/lists\";\n\nimport \"./Import.css\";\n\nexport const Import = ({ isMobile }) => {\n  const MainComponent = isMobile ? Main : Fragment;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const lists = useSelector((state) => state.lists);\n  const [list, setList] = useState(null);\n  const [error, setError] = useState(false);\n  const [typeError, setTypeError] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const fileInput = createRef();\n  const handleListChange = () => {\n    const files = fileInput.current.files;\n\n    if (files.length > 0) {\n      if (\"application/json\" === files[0].type) {\n        setTypeError(false);\n        setList(files[0]);\n      } else {\n        setTypeError(true);\n      }\n    }\n  };\n  const handleSubmit = (event) => {\n    const reader = new FileReader();\n\n    setError(false);\n    reader.readAsText(list, \"UTF-8\");\n    reader.onload = (event) => {\n      const newId = getRandomId();\n      const importedList = { ...JSON.parse(event.target.result), id: newId };\n      const newLists = [...lists, importedList];\n\n      localStorage.setItem(\"owb.lists\", JSON.stringify(newLists));\n      dispatch(setLists(newLists));\n      setRedirect(importedList.id);\n    };\n    reader.onerror = () => {\n      setError(true);\n    };\n\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {redirect && <Redirect to={`/editor/${redirect}`} />}\n\n      {isMobile && (\n        <Header to=\"/\" headline={intl.formatMessage({ id: \"import.title\" })} />\n      )}\n\n      <MainComponent>\n        {!isMobile && (\n          <Header\n            isSection\n            to=\"/\"\n            headline={intl.formatMessage({ id: \"import.title\" })}\n          />\n        )}\n        <form onSubmit={handleSubmit} className=\"import\">\n          <label htmlFor=\"list\">\n            <FormattedMessage id=\"import.description\" />\n          </label>\n          <input\n            type=\"file\"\n            accept=\".json, application/json\"\n            id=\"list\"\n            className=\"input\"\n            onChange={handleListChange}\n            autoComplete=\"off\"\n            required\n            ref={fileInput}\n          />\n          {typeError && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"import.typeError\" />\n            </p>\n          )}\n          {error && (\n            <p className=\"export__error\">\n              <FormattedMessage id=\"export.error\" />\n            </p>\n          )}\n          <Button centered icon=\"add-list\" submitButton spaceTop>\n            <FormattedMessage id=\"import.button\" />\n          </Button>\n        </form>\n      </MainComponent>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport { NewList } from \"./pages/new-list\";\nimport { Editor } from \"./pages/editor\";\nimport { Home } from \"./pages/home\";\nimport { Unit } from \"./pages/unit\";\nimport { EditList } from \"./pages/edit-list\";\nimport { Magic } from \"./pages/magic\";\nimport { About } from \"./pages/about\";\nimport { Add } from \"./pages/add\";\nimport { Help } from \"./pages/help\";\nimport { Export } from \"./pages/export\";\nimport { Print } from \"./pages/print\";\nimport { DuplicateList } from \"./pages/duplicate-list\";\nimport { Rename } from \"./pages/rename\";\nimport { Datasets } from \"./pages/datasets\";\nimport { NotFound } from \"./pages/not-found\";\nimport { Privacy } from \"./pages/privacy\";\nimport { Changelog } from \"./pages/changelog\";\nimport { Import } from \"./pages/import\";\nimport { setLists } from \"./state/lists\";\nimport { Header, Main } from \"./components/page\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const [isMobile, setIsMobile] = useState(\n    window.matchMedia(\"(max-width: 1279px)\").matches\n  );\n\n  useEffect(() => {\n    const localLists = localStorage.getItem(\"owb.lists\");\n\n    dispatch(setLists(JSON.parse(localLists)));\n  }, [dispatch]);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1279px)\");\n\n    if (mediaQuery?.addEventListener) {\n      mediaQuery.addEventListener(\"change\", (event) =>\n        setIsMobile(event.matches)\n      );\n    } else {\n      mediaQuery.addListener((event) => setIsMobile(event.matches));\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {isMobile ? (\n        <Switch>\n          <Route path=\"/editor/:listId/edit\">{<EditList isMobile />}</Route>\n          <Route path=\"/editor/:listId/export\">{<Export isMobile />}</Route>\n          <Route path=\"/editor/:listId/duplicate\">\n            {<DuplicateList isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/add/:type\">{<Add isMobile />}</Route>\n          <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/rename\">\n            {<Rename isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n            {<Magic isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId/:type/:unitId\">\n            {<Unit isMobile />}\n          </Route>\n          <Route path=\"/editor/:listId\">{<Editor isMobile />}</Route>\n          <Route path=\"/import\">{<Import isMobile />}</Route>\n          <Route path=\"/new\">{<NewList isMobile />}</Route>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets isMobile />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\" exact>\n            {<Home isMobile />}\n          </Route>\n          <Route path=\"*\">{<NotFound />}</Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/about\">{<About />}</Route>\n          <Route path=\"/help\">{<Help />}</Route>\n          <Route path=\"/privacy\">{<Privacy />}</Route>\n          <Route path=\"/datasets\">{<Datasets />}</Route>\n          <Route path=\"/changelog\">{<Changelog />}</Route>\n          <Route path=\"/print/:listId\">{<Print />}</Route>\n          <Route path=\"/\">\n            <Header headline=\"Old World Builder\" hasMainNavigation />\n            <Main isDesktop>\n              <section className=\"column\">\n                <Home />\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/new\">{<NewList />}</Route>\n                  <Route path=\"/import\">{<Import />}</Route>\n                  <Route path=\"/editor/:listId\">{<Editor />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/edit\">{<EditList />}</Route>\n                  <Route path=\"/editor/:listId/export\">{<Export />}</Route>\n                  <Route path=\"/editor/:listId/duplicate\">\n                    {<DuplicateList />}\n                  </Route>\n                  <Route path=\"/editor/:listId/add/:type\">{<Add />}</Route>\n                  <Route path=\"/editor/:listId/:type/:unitId\">{<Unit />}</Route>\n                </Switch>\n              </section>\n              <section className=\"column\">\n                <Switch>\n                  <Route path=\"/editor/:listId/:type/:unitId/magic/:command\">\n                    {<Magic />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/rename\">\n                    {<Rename />}\n                  </Route>\n                  <Route path=\"/editor/:listId/:type/:unitId/items/:group\">\n                    {<Magic />}\n                  </Route>\n                </Switch>\n              </section>\n            </Main>\n          </Route>\n        </Switch>\n      )}\n    </BrowserRouter>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const errorSlice = createSlice({\n  name: \"errors\",\n  initialState: [],\n  reducers: {\n    setErrors: (state, { payload }) => {\n      return payload || [];\n    },\n    addError: (state, { payload }) => {\n      return [...state, payload];\n    },\n  },\n});\n\nexport const { setErrors, addError } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport listsReducer from \"./state/lists\";\nimport armyReducer from \"./state/army\";\nimport itemsReducer from \"./state/items\";\nimport errorsReducer from \"./state/errors\";\nimport rulesIndexReducer from \"./state/rules-index\";\n\nexport default configureStore({\n  reducer: {\n    lists: listsReducer,\n    army: armyReducer,\n    items: itemsReducer,\n    errors: errorsReducer,\n    rulesIndex: rulesIndexReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as Sentry from \"@sentry/react\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { App } from \"./App\";\nimport store from \"./store\";\n\nimport English from \"./i18n/en.json\";\nimport German from \"./i18n/de.json\";\nimport Spanish from \"./i18n/es.json\";\nimport French from \"./i18n/fr.json\";\nimport Italian from \"./i18n/it.json\";\n\n// Initialize Sentry error tracking\nif (process.env.NODE_ENV !== \"development\") {\n  Sentry.init({\n    dsn: \"https://3947feb62e2f5348c1759e8d4d9ed084@o314295.ingest.sentry.io/4506569636642816\",\n    integrations: [\n      // new Sentry.BrowserTracing({\n      //   // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n      //   tracePropagationTargets: [\n      //     \"localhost\",\n      //     /^https:\\/\\/old-world-builder\\.com/,\n      //   ],\n      // }),\n    ],\n    environment: process.env.NODE_ENV,\n    release: `owb@${process.env.REACT_APP_VERSION}`,\n    // Performance Monitoring\n    // tracesSampleRate: 1.0, //  Capture 100% of the transactions\n  });\n}\n\nconst metaDescription = {\n  de: \"Armeebauer für Warhammer: The Old World und Warhammer Fantasy.\",\n  en: \"Costruttore di eserciti per Warhammer: The Old World e Warhammer Fantasy Battles.\",\n  fr: \"Un créateur de liste d'armée pour les jeux Games Workshop 'Warhammer: The Old World' et 'Warhammer Fantaisie'.\",\n  es: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n  it: \"Creador de listas de ejército para los juegos de mesa de Games Workshop, Warhammer: The Old World y Warhammer Fantasy.\",\n};\n\n// Language detection\nconst supportedLanguages = [\"en\", \"de\", \"fr\", \"es\", \"it\"];\nconst localStorageLanguage = localStorage.getItem(\"lang\");\nconst locale = (\n  localStorageLanguage ||\n  navigator.language ||\n  navigator.userLanguage\n).slice(0, 2);\nconst language = supportedLanguages.indexOf(locale) === -1 ? \"en\" : locale;\n\nlocalStorage.setItem(\"lang\", language);\ndocument.documentElement.setAttribute(\"lang\", language);\ndocument\n  .querySelector(\"meta[name=description]\")\n  .setAttribute(\"content\", metaDescription[language]);\n\nlet messages;\nif (language === \"de\") {\n  messages = German;\n} else if (language === \"es\") {\n  messages = Spanish;\n} else if (language === \"fr\") {\n  messages = French;\n} else if (language === \"it\") {\n  messages = Italian;\n} else {\n  messages = English;\n}\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={messages}>\n    <ReduxProvider store={store}>\n      <React.StrictMode>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </React.StrictMode>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Icon","className","symbol","color","focusable","classNames","xlinkHref","icons","Button","type","to","href","onClick","children","spaceBottom","spaceTop","fullWidth","label","icon","centered","submitButton","disabled","size","download","Component","Link","buttonProps","aria-label","title","defaultProps","getRandomId","Math","random","toString","replace","updateIds","map","unit","command","commandData","index","id","equipment","equipmentData","armor","armorData","mounts","mountsData","options","optionsData","Header","headline","subheadline","moreButton","isSection","hasPointsError","hasMainNavigation","intl","useIntl","useLocation","useState","showMenu","setShowMenu","navigationLinks","name","formatMessage","navigation","useEffect","pathname","callback","moreButtonTo","Spinner","useLanguage","language","localStorage","getItem","Main","isDesktop","compact","loading","handleLanguageChange","event","setItem","target","value","reload","onChange","defaultChecked","htmlFor","width","height","alt","src","usa","germany","france","spain","italy","Select","required","selected","defaultValue","optionValue","option","name_en","ErrorMessage","NumberInput","max","min","readOnly","noError","interval","pattern","newValue","Number","maxValue","preventDefault","values","listsSlice","createSlice","initialState","reducers","setLists","payload","updateList","listId","newValues","points","description","Object","keys","forEach","key","undefined","list","deleteList","filter","addUnit","newUnit","strength","minimum","duplicateUnit","unitId","find","split","editUnit","magic","items","detachments","activeLore","name_de","data","removeUnit","actions","duplicateList","getUnitPoints","unitPoints","stackable","stackableCount","active","perModel","length","amount","item","getUnitMagicPoints","getUnitCommandPoints","commandPoints","getPoints","getAllPoints","fetcher","url","onError","AbortController","fetch","process","headers","Accept","signal","response","json","itemsSlice","setItems","updateLocalList","updatedList","updatedLists","JSON","parse","stringify","isMultipleAllowedItem","maximum","nameMap","greenskins","heirlooms","dwarfs","general","weapon","talisman","banner","artifact","triptych","daemonology","elementalism","illusion","necromancy","skaven","lizardmen","Magic","prevItemType","isFirstItemType","isMobile","MainComponent","Fragment","useParams","group","dispatch","useDispatch","useSelector","lists","army","gameSystems","game","armies","units","maxMagicPoints","scrollTo","allItems","conditional","conditionalItem","conditionalIndex","getCheckbox","isChecked","selectedAmount","magicItem","itemGroup","isConditional","isTypeLimitReached","isCommand","types","unitPointsRemaining","pointsRemainingMax","floor","maxAllowedOfItem","magicItems","inputType","checked","newCommand","entry","entryIndex","newItems","handleMagicChange","parentId","handleAmountChange","unitMagicPoints","hasCommandMagicItems","hasMagicItems","maxPoints","commandMagicItems","includes","itemGroupItems","armyComposition","unitSelectedItems","selectedItem","runesAmountInCategory","itemType","isRune","nonExclusive","some","NewList","setGame","setArmy","setName","setDescription","setPoints","setArmyComposition","redirect","setRedirect","journalArmies","handleSystemChange","onSubmit","newId","newList","lords","heroes","core","special","rare","characters","mercenaries","allies","newLists","createList","warhammerFantasy","warhammerTheOldWorld","autoComplete","maxLength","journalArmy","name_es","name_fr","rules","maxPercent","minPercent","perPoints","ids","getMaxPercentData","armyPoints","categoryData","overLimit","diff","ceil","List","Dialog","open","onClose","dialogRef","useRef","handleClose","current","close","showModal","ref","getAllOptions","lores","asString","noMagic","allCommand","push","allEquipment","allArmor","allOptions","allStackableOptions","allMounts","allDetachments","equipmentSelection","join","lore","allOptionsArray","allOptionsString","Editor","isDialogOpen","setIsDialogOpen","onScroll","document","hash","sessionStorage","pageYOffset","addEventListener","limit","wait","call","setTimeout","throttle","removeEventListener","allPoints","lordsPoints","heroesPoints","charactersPoints","corePoints","specialPoints","rarePoints","mercenariesPoints","alliesPoints","lordsData","heroesData","charactersData","coreData","minPoints","getMinPercentData","specialData","rareData","mercenariesData","alliesData","moreButtons","removeFromLocalList","armySlice","armyIconMap","theEmpire","chaosWarriors","bretonnia","beastmen","woodElves","tombKings","highElves","darkElves","vampireCounts","chaosDeamons","ogres","chaosDwarfs","Home","resetState","rel","removeParens","string","rulesIndexSlice","activeRule","openRulesIndex","closeRulesIndex","rulesMap","Ambushers","Cumbersome","Detachment","Drilled","Ethereal","Evasive","Fear","Flammable","Fly","Frenzy","Hatred","Horde","Howdah","Impetuous","Levies","Loner","Mercenaries","Ponderous","Regeneration","Scouts","Shieldwall","Skirmishers","Stubborn","Stupidity","Swiftstride","Terror","Unbreakable","Unstable","Vanguard","Veteran","Warband","RulesIndex","rulesIndex","isLoading","setIsLoading","rulePath","onLoad","Unit","coreUnit","detachment","handleDetachmentEquipmentChange","detachmentId","equipmentId","category","isCheckbox","unitDetachments","handleDuplicate","handleRemove","notes","commandMagicPoints","handleCommandChange","handleEquipmentChange","handleArmorChange","handleStackableOptionChange","handleOptionsChange","regimentalUnit","minDetachmentSize","maxDetachmentSize","handleAddDetachmentClick","maxDetachments","detachmentEquipment","detachmentArmor","detachmentOptions","handleDetachmentStrengthClick","handleDeleteDetachmentClick","mount","handleMountsChange","handleLoresChange","itemIndex","itemsPoints","specialRules","specialRulesEn","specialRulesButtons","rule","getSpecialRules","EditList","About","owb","datasets","discord","github","gameIcons","license","Add","handleAdd","armyData","specialToCore","rareToCore","rareToSpecial","coreToSpecial","specialToRare","allCore","allSpecial","allRare","getArmyData","Help","Expandable","notBold","noMargin","getUnitsString","isShowList","isCompactList","showSpecialRules","optionsString","getFile","listText","asText","fileName","toLowerCase","file","File","fileUrl","URL","createObjectURL","Export","copied","setCopied","copyError","setCopyError","shareError","setShareError","shareOwbError","setOwbShareError","setIsShowList","setIsCompactList","setShowSpecialRules","armyName","armyCompositionName","armyCompositionString","listString","getListAsText","textFileName","textFileUrl","share","a","shareData","text","files","canShare","clipboard","writeText","Print","isPrinting","setIsPrinting","onafterprint","print","DuplicateList","Rename","initialUnitState","magicItemTypes","loresOfMagic","Entity","existingUnit","randomId","setUnit","handleFieldChange","handleSpecialRulesChange","field","handleSpecialRulesBlur","handleCheckboxChange","handleSecondLevelFieldChange","newEntries","handleSecondLevelDelete","_","handleSecondLevelNameBlur","isNew","onBlur","placeholder","loreIndex","loreName","handleLoresOfMagicChange","newCommandEntries","commandIndex","handleCommandMagicChange","handleCommandMagicPointsChange","typeIndex","handleItemsChange","UnitPreview","coreUnits","regiment","Datasets","previewUnit","setPreviewUnit","armyInput","setArmyInput","localDataset","dataset","setDataset","handleSubmit","newDataset","handleDelete","handlePreview","existingDataset","onDelete","rows","spellCheck","data-gramm","NotFound","Privacy","Changelog","Date","month","day","year","b","msg","about","privacy","Import","setList","setError","typeError","setTypeError","fileInput","createRef","reader","FileReader","readAsText","onload","importedList","result","onerror","accept","App","matchMedia","matches","setIsMobile","localLists","mediaQuery","addListener","path","exact","errorSlice","setErrors","addError","configureStore","reducer","listsReducer","armyReducer","itemsReducer","errors","errorsReducer","rulesIndexReducer","Sentry","dsn","integrations","environment","release","messages","locale","userLanguage","slice","indexOf","documentElement","setAttribute","querySelector","de","en","fr","es","it","German","Spanish","French","Italian","English","ReactDOM","render","store","StrictMode","getElementById","origin","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","debug_id":"d5691648-6239-52c6-85c3-164837074b09"}